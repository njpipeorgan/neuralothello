(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    314616,       6613]
NotebookOptionsPosition[    304087,       6438]
NotebookOutlinePosition[    304480,       6454]
CellTagsIndexPosition[    304437,       6451]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", 
  RowBox[{"<<", "Developer`"}], ";", 
  RowBox[{"$HistoryLength", "=", "0"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7986700261126366`*^9, 3.798670045232653*^9}},
 CellLabel->
  "In[512]:=",ExpressionUUID->"e877907b-3557-4f3c-b129-25316fc9c5e2"],

Cell[CellGroupData[{

Cell["Misc", "Subsection",
 CellChangeTimes->{{3.798659226612146*^9, 
  3.7986592285030756`*^9}},ExpressionUUID->"7b3d4484-cd48-45de-a2fe-\
64b335e724fe"],

Cell[BoxData[
 RowBox[{"Transpose", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\"\<0x\>\"", "<>", 
          RowBox[{"IntegerString", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"2", "^", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", "63"}], "]"}]}], ".", "#"}], ",", "16", ",", 
            "16"}], "]"}], "<>", "\"\<u\>\""}], "&"}], "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"i", "\[Equal]", "i0"}], "&&", 
              RowBox[{"j", "\[Equal]", "j0"}]}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Normalize", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"i", "-", "i0"}], ",", 
                   RowBox[{"j", "-", "j0"}]}], "}"}]}], "\[Equal]", 
                RowBox[{"Normalize", "@", "dir"}]}], ",", "1", ",", "0"}], 
              "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "8"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "8"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i0", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j0", ",", "8"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"dir", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.798148003959062*^9, 3.79814811854249*^9}, {
   3.798148194154445*^9, 3.798148216705064*^9}, {3.7981482677788305`*^9, 
   3.79814836632745*^9}, 3.798148449898126*^9, {3.798148505250416*^9, 
   3.798148506523024*^9}, {3.7981485620453634`*^9, 3.798148563465036*^9}, {
   3.7981493513626165`*^9, 3.7981493536011147`*^9}, {3.7981496946760035`*^9, 
   3.798149699841333*^9}, {3.7981497413480854`*^9, 3.7981497424508457`*^9}, {
   3.7981498930780544`*^9, 3.7981498945729947`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"e1e27ecb-129b-47cf-a626-f5ff042a3143"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"RepeatedTiming", "[", 
       RowBox[{"Dimensions", "[", 
        RowBox[{"c", ".", 
         RowBox[{"(", 
          RowBox[{"b1", ".", 
           RowBox[{"(", 
            RowBox[{"b2", ".", 
             RowBox[{"(", 
              RowBox[{"b3", ".", 
               RowBox[{"(", 
                RowBox[{"b4", ".", 
                 RowBox[{"(", 
                  RowBox[{"a", ".", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", ",", 
                    RowBox[{";;", "i"}]}], "]"}], "]"}]}], ")"}]}], ")"}]}], 
              ")"}]}], ")"}]}], ")"}]}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/", "i"}], "*", 
    RowBox[{"10", "^", "6"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "4", ",", "8", ",", "16", ",", "32", ",", "64", ",",
        "128", ",", "256"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.798247943716921*^9, 3.798247956168911*^9}, {
  3.798252786682217*^9, 3.798252800986469*^9}, {3.79825943092871*^9, 
  3.7982594330698195`*^9}, {3.798259487713478*^9, 3.798259512904026*^9}, {
  3.79830420310338*^9, 3.798304257304016*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"a3cb154d-15f8-4fd0-b2c5-3d6af3e4a162"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "38.1246379044684001978`2.", ",", "43.3938000000000248871`2.", ",", 
   "24.1592299999999994206`2.", ",", "15.948201798201796283`2.", ",", 
   "12.0059948979592007873`2.", ",", "8.0669404380341830189`3.", ",", 
   "7.000506680253642134`2.", ",", "6.1330654046474271553`3.", ",", 
   "5.8781238126899863425`3."}], "}"}]], "Output",
 CellChangeTimes->{{3.7982479567352886`*^9, 3.79824796901416*^9}, {
   3.7982527934871993`*^9, 3.798252805034085*^9}, {3.7982594347636547`*^9, 
   3.79825960369596*^9}, 3.798304198842812*^9, {3.798304229540435*^9, 
   3.7983042724530716`*^9}},
 CellLabel->
  "Out[114]=",ExpressionUUID->"db2b48ad-e15a-4588-821c-f1d05c0b5d3c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Net", "Subsection",
 CellChangeTimes->{{3.7986592675297475`*^9, 
  3.7986592680404263`*^9}},ExpressionUUID->"011b83b6-bf88-4d2f-9f68-\
e5b4a7aa6631"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NetChain", "[", 
         RowBox[{"{", 
          RowBox[{
          "256", ",", "Ramp", ",", "256", ",", "Ramp", ",", "256", ",", 
           "Ramp", ",", "256", ",", "Ramp"}], "}"}], "]"}], ",", 
        RowBox[{"NetChain", "[", 
         RowBox[{"{", 
          RowBox[{"256", ",", "Ramp", ",", "64"}], "}"}], "]"}], ",", 
        RowBox[{"NetGraph", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ThreadingLayer", "[", "Plus", "]"}], ",", 
            RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"NetPort", "[", "\"\<x\>\"", "]"}], ",", 
              RowBox[{"NetPort", "[", "\"\<y\>\"", "]"}]}], "}"}], "\[Rule]", 
            RowBox[{"1", "\[Rule]", "2"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"NetChain", "[", 
         RowBox[{"{", 
          RowBox[{"64", ",", "Ramp", ",", "1", ",", "Tanh"}], "}"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Board\>\"", "]"}], "\[Rule]", "1"}], 
        ",", 
        RowBox[{"1", "\[Rule]", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"NetPort", "[", 
           RowBox[{"3", ",", "\"\<x\>\""}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Mask\>\"", "]"}], "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"3", ",", "\"\<y\>\""}], "]"}]}], ",", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"NetPort", "[", "\"\<Policy\>\"", "]"}]}], ",", 
        RowBox[{"1", "\[Rule]", 
         RowBox[{"4", "\[Rule]", 
          RowBox[{"NetPort", "[", "\"\<Value\>\"", "]"}]}]}]}], "}"}], ",", 
      RowBox[{"\"\<Board\>\"", "\[Rule]", "64"}], ",", 
      RowBox[{"\"\<Mask\>\"", "\[Rule]", "64"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.79849690068725*^9, 3.798497294656417*^9}, {
  3.7984973290450068`*^9, 3.7984974028578763`*^9}, {3.798497511250831*^9, 
  3.7984975216303005`*^9}, {3.798497569170457*^9, 3.7984975930955853`*^9}, {
  3.798497638497814*^9, 3.798497644875679*^9}, {3.798497859896908*^9, 
  3.7984978640860972`*^9}, {3.7986756160787177`*^9, 3.7986756186728687`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"d37ef131-c102-4d01-8525-47b75ffdbd87"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "savenet", "]"}]], "Input",
 CellChangeTimes->{{3.798676232837159*^9, 3.7986762357439117`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"c9acbbe4-3043-4c50-b248-eab5d384e705"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"apply", "[", 
    RowBox[{"weights_", ",", "biases_", ",", "input_", ",", 
     RowBox[{"f_", ":", "Identity"}]}], "]"}], ":=", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"weights", ".", "input"}], "+", "biases"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.798319468589204*^9, 3.798319515833687*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"f2c6f171-2e5f-4ca3-b8ef-8aa5bb61d020"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"Normal", "@", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"28", "\[Rule]", 
         RowBox[{"-", "1."}]}], ",", 
        RowBox[{"29", "\[Rule]", "1."}], ",", 
        RowBox[{"36", "\[Rule]", "1."}], ",", 
        RowBox[{"37", "\[Rule]", 
         RowBox[{"-", "1."}]}]}], "}"}], ",", "64", ",", "0."}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Normal", "@", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"20", "\[Rule]", "0."}], ",", 
        RowBox[{"27", "\[Rule]", "0."}], ",", 
        RowBox[{"38", "\[Rule]", "0."}], ",", 
        RowBox[{"45", "\[Rule]", "0."}]}], "}"}], ",", "64", ",", 
      RowBox[{"-", "999."}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.798319532139144*^9, 3.798319533548586*^9}, {
  3.79849804906547*^9, 3.798498087158374*^9}, {3.798498419222769*^9, 
  3.7984984245853977`*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"33743898-06eb-48fd-a3fa-10523ad3a88c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Board\>\"", "\[Rule]", "input"}], ",", 
    RowBox[{"\"\<Mask\>\"", "\[Rule]", "mask"}]}], "|>"}], "]"}]], "Input",
 CellChangeTimes->{{3.798497939721175*^9, 3.7984979751458325`*^9}, {
  3.798498081361165*^9, 3.7984980824074807`*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"85156148-153e-444f-8564-05b6b884b45d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Policy\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
      "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
      "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
      "0.`", ",", "0.27704688906669617`", ",", "0.`", ",", "0.`", ",", "0.`", 
      ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.2899988293647766`", ",", 
      "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
      "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.19175876677036285`", 
      ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
      ",", "0.24119552969932556`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
      "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
      "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
      "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]}], ",", 
   RowBox[{"\<\"Value\"\>", "\[Rule]", 
    RowBox[{"{", "0.19734394550323486`", "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7984979409009137`*^9, 3.798497975784955*^9, {3.7984980824724116`*^9, 
   3.798498089484581*^9}, 3.7984984264771957`*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"f7f67dfa-9797-4e79-accf-600bd4f3b37c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Import games", "Subsection",
 CellChangeTimes->{{3.79865251103265*^9, 
  3.798652512695839*^9}},ExpressionUUID->"c3c5b8f6-5f4f-459e-9236-\
fcdda89955c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getgame", "[", 
    RowBox[{"str_", ",", "length_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"NumericArray", "[", 
      RowBox[{"#", ",", "\"\<Real32\>\""}], "]"}], "&"}], "/@", 
    RowBox[{"Transpose", "@", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"selfmask", ",", "oppomask", ",", "movemask"}], "}"}], "=", 
         RowBox[{"BinaryReadList", "[", 
          RowBox[{"str", ",", "\"\<UnsignedInteger64\>\"", ",", "3"}], 
          "]"}]}], ";", 
        RowBox[{"policies", "=", 
         RowBox[{"BinaryReadList", "[", 
          RowBox[{"str", ",", "\"\<UnsignedInteger8\>\"", ",", "31"}], 
          "]"}]}], ";", 
        RowBox[{"result", "=", 
         RowBox[{"N", "@", 
          RowBox[{"BinaryReadList", "[", 
           RowBox[{"str", ",", "\"\<Integer8\>\"", ",", "1"}], "]"}]}]}], ";", 
        RowBox[{"board", "=", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"IntegerDigits", "[", 
            RowBox[{"selfmask", ",", "2", ",", "64"}], "]"}], "-", 
           RowBox[{"IntegerDigits", "[", 
            RowBox[{"oppomask", ",", "2", ",", "64"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"policies", "=", 
         RowBox[{"Normal", "@", 
          RowBox[{"SparseArray", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Thread", "[", 
               RowBox[{"#", "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "/", 
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{"Total", "@", "#"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
                   "&"}], "@", 
                  RowBox[{"Reverse", "[", 
                   RowBox[{
                    RowBox[{"policies", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", 
                    RowBox[{"Length", "@", "#"}]}], "]"}], "]"}], "+", 
                    "0.5"}], "]"}]}], ")"}]}], "]"}], "&"}], "@", 
             RowBox[{
              RowBox[{"SparseArray", "[", 
               RowBox[{"IntegerDigits", "[", 
                RowBox[{"movemask", ",", "2", ",", "64"}], "]"}], "]"}], "[", 
              "\"\<NonzeroPositions\>\"", "]"}]}], ",", "64", ",", "0.0"}], 
           "]"}]}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"i", "\[NotEqual]", "1"}], "&&", 
           RowBox[{"movemask", "\[NotEqual]", "0"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"board", ",", "policies", ",", "result"}], "}"}], ",", 
          "Nothing"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "length"}], "}"}]}], "]"}]}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.798590557175023*^9, 3.798590613922454*^9}, 
   3.7985908262375755`*^9, {3.7985914249377728`*^9, 3.79859146537175*^9}, {
   3.7985915258543835`*^9, 3.7985915367392917`*^9}, {3.7985916042097006`*^9, 
   3.7985916209720144`*^9}, {3.7985929616394167`*^9, 3.79859300055462*^9}, {
   3.7985930677674074`*^9, 3.7985930689566436`*^9}, {3.7986002353713064`*^9, 
   3.7986002361455235`*^9}, {3.798600395913679*^9, 3.7986004002767897`*^9}, {
   3.798600495352642*^9, 3.798600534098459*^9}, {3.7986010374059534`*^9, 
   3.798601070206931*^9}, {3.798601118900704*^9, 3.7986012312066402`*^9}, {
   3.798601602705109*^9, 3.7986016489393034`*^9}, {3.7986017882989635`*^9, 
   3.7986018076844463`*^9}, {3.798605151855711*^9, 3.798605169571083*^9}, {
   3.7986054271835675`*^9, 3.7986054388816895`*^9}, {3.7986055063645096`*^9, 
   3.798605506933555*^9}, {3.798652264530551*^9, 3.798652285914702*^9}},
 CellLabel->
  "In[513]:=",ExpressionUUID->"3f1dc2d9-b59c-4250-9d71-7ea00580adbd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getfile", "[", "file_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"str", "=", 
        RowBox[{"OpenRead", "[", 
         RowBox[{"file", ",", 
          RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], ",", 
       "games"}], "}"}], ",", 
     RowBox[{
      RowBox[{"games", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Sequence", "@@", 
          RowBox[{
           RowBox[{"Reap", "[", 
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{"TrueQ", "[", 
               RowBox[{"0", "<", 
                RowBox[{"(", 
                 RowBox[{"length", "=", 
                  RowBox[{"BinaryRead", "[", 
                   RowBox[{"str", ",", "\"\<UnsignedInteger64\>\""}], "]"}]}],
                  ")"}], "<", "120"}], "]"}], ",", 
              RowBox[{"Sow", "[", 
               RowBox[{"getgame", "[", 
                RowBox[{"str", ",", "length"}], "]"}], "]"}]}], "]"}], "]"}], 
           "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", "2"}], "]"}]}], ";", 
      RowBox[{"Close", "[", "file", "]"}], ";", "games"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getfiles", "[", "files_", "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Sequence", "@@", 
      RowBox[{"(", 
       RowBox[{"getfile", "/@", "files"}], ")"}]}], ",", "2"}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7986031039059706`*^9, 3.798603128294574*^9}, {
  3.798603734123761*^9, 3.7986037690768275`*^9}, {3.7986038515667505`*^9, 
  3.798603858974819*^9}, {3.7986055583838444`*^9, 3.7986055769546704`*^9}, {
  3.7986057270484304`*^9, 3.798605792668033*^9}, {3.7986512537558565`*^9, 
  3.79865130075785*^9}, {3.7986513344852514`*^9, 3.798651335582467*^9}},
 CellLabel->
  "In[514]:=",ExpressionUUID->"3537c748-0d61-4c67-b6d6-3b9a63af9508"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotpos", "[", 
    RowBox[{"board_", ",", "policy_", ",", "value_"}], "]"}], ":=", 
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<value = \>\"", "<>", 
       RowBox[{"ToString", "@", 
        RowBox[{"Normal", "@", "value"}]}]}], ",", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#1", ">", "0"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\[FilledCircle]\>\"", ",", "45"}], "]"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"#1", "<", "0"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<\[EmptyCircle]\>\"", ",", "45"}], "]"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#2", ">", "0"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", "#", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "1", ",", 
                    RowBox[{"#", "/", "50"}]}], "]"}], ",", "15"}], "]"}], 
                    "&"}], "@", 
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{"#2", "*", "100"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "99"}], "}"}]}], "]"}]}], ",", 
                   "\"\<\>\""}], "]"}]}], "]"}]}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Normal", "@", "board"}], ",", 
              RowBox[{"Normal", "@", "policy"}]}], "}"}]}], "]"}], ",", "8"}],
          "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", "Gray"}], ",", 
        RowBox[{"Alignment", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Center", ",", "Center"}], "}"}]}], ",", 
        RowBox[{"ItemSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2.5"}], "}"}]}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.798675180210662*^9, 3.79867530711512*^9}, {
  3.7987356925902576`*^9, 3.7987356999894247`*^9}},
 CellLabel->
  "In[516]:=",ExpressionUUID->"a9aaafcb-6f68-44b6-8051-a5e1581629cf"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", ">", "0"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\[FilledCircle]\>\"", ",", "45"}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#1", "<", "0"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[EmptyCircle]\>\"", ",", "45"}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"#2", ">", "0"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"ToString", "[", "#", "]"}], ",", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0", ",", "1", ",", 
                    RowBox[{"#", "/", "50"}]}], "]"}], ",", "15"}], "]"}], 
                  "&"}], "@", 
                 RowBox[{"Clip", "[", 
                  RowBox[{
                   RowBox[{"Round", "[", 
                    RowBox[{"#2", "*", "100"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "99"}], "}"}]}], "]"}]}], ",", 
                "\"\<\>\""}], "]"}]}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"Normal", "/@", 
          RowBox[{"games", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{";;", "2"}], ",", "i"}], "]"}], "]"}]}]}], "]"}], ",", 
       "8"}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"Alignment", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Center"}], "}"}]}], ",", 
     RowBox[{"ItemSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2.5"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "@", 
      RowBox[{"games", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.798651373533308*^9, 3.7986514038626947`*^9}, {
  3.798651460535136*^9, 3.798651589253049*^9}, {3.798651625195759*^9, 
  3.7986519886136246`*^9}},
 CellLabel->
  "In[901]:=",ExpressionUUID->"28cf18d6-9d29-46b8-931d-57e7031e7dbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Training", "Subsection",
 CellChangeTimes->{{3.7986525159353275`*^9, 
  3.7986525175989485`*^9}},ExpressionUUID->"db608ddb-4d05-4c1c-83fd-\
634047e7e816"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"Import", "[", "\"\<nets/net-0.wlnet\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"games", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"perm", "=", 
         RowBox[{"ToPackedArray", "[", 
          RowBox[{"Join", "@@", 
           RowBox[{"RandomSample", "[", 
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"Length", "@", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"UpTo", "[", "79", "]"}]}], "]"}], "]"}]}], "]"}]}], 
        "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "perm", "]"}], "]"}], "&"}], "/@", "#"}]}], "]"}], 
     "&"}], "@", 
    RowBox[{"Uncompress", "@", 
     RowBox[{"Import", "[", "\"\<games/games-0.txt\>\"", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"npositions", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"games", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7986596649967957`*^9, 3.7986596775670013`*^9}, {
   3.798659916744712*^9, 3.7986599654547005`*^9}, {3.798670117997513*^9, 
   3.7986701228749304`*^9}, 3.798670704165352*^9, {3.798671473172019*^9, 
   3.7986715051918187`*^9}, {3.798671599922764*^9, 3.798671663635949*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"ae06a72b-7d67-46fd-9318-041d82802db1"],

Cell[BoxData["109955"], "Output",
 CellChangeTimes->{3.79867070520988*^9, 3.7986715094236813`*^9, 
  3.7986715502535653`*^9, 3.798671667871004*^9, 3.7986746102312484`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"fb978aba-86aa-43ef-bc2a-172987ddea69"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$orientations", "=", 
   RowBox[{"ToPackedArray", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "/@", 
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"Reverse", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], ",", 
         RowBox[{"Reverse", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", 
         RowBox[{"Reverse", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"Transpose", "@", "#"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Reverse", "[", 
          RowBox[{
           RowBox[{"Transpose", "@", "#"}], ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], ",", 
         RowBox[{"Reverse", "[", 
          RowBox[{
           RowBox[{"Transpose", "@", "#"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", 
         RowBox[{"Reverse", "[", 
          RowBox[{
           RowBox[{"Transpose", "@", "#"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], "&"}], "@", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Range", "[", "64", "]"}], ",", "8"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"sampler", ",", "HoldFirst"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sampler", "[", "games_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pos", "=", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"games", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"#BatchSize", "/", "8"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\"\<Board\>\"", "\[Rule]", 
           RowBox[{"Join", "@@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{";;", ",", "o"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"o", ",", "$orientations"}], "}"}]}], "]"}]}]}], "&"}],
          "@", 
         RowBox[{"Normal", "@", 
          RowBox[{"games", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "pos"}], "]"}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<Frequency\>\"", "\[Rule]", 
           RowBox[{"Join", "@@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{";;", ",", "o"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"o", ",", "$orientations"}], "}"}]}], "]"}]}]}], "&"}],
          "@", 
         RowBox[{"Normal", "@", 
          RowBox[{"games", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "pos"}], "]"}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Result\>\"", "\[Rule]", 
         RowBox[{"Join", "@@", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Normal", "@", 
              RowBox[{"games", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "pos"}], "]"}], "]"}]}], "/", "100.0"}], 
            ",", "8"}], "]"}]}]}]}], "|>"}]}], "]"}], "&"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7986735331425056`*^9, 3.7986735866099463`*^9}, {
   3.7986736192702317`*^9, 3.7986736777143908`*^9}, {3.798674106622339*^9, 
   3.798674129568795*^9}, {3.7987426322919903`*^9, 3.798742675562673*^9}, 
   3.798743284247107*^9, {3.79900032303321*^9, 3.799000348690658*^9}, {
   3.799000421279201*^9, 3.7990004311093607`*^9}, {3.79900046168848*^9, 
   3.799000472722926*^9}, {3.799000941573415*^9, 3.799000943779162*^9}},
 CellLabel->
  "In[517]:=",ExpressionUUID->"3b85a0f1-37cc-4e53-b523-b26e054381ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lossnet", "[", "net_", "]"}], ":=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"net", ",", 
       RowBox[{"MeanSquaredLossLayer", "[", "]"}], ",", 
       RowBox[{"CrossEntropyLossLayer", "[", "\"\<Probabilities\>\"", "]"}]}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Board\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"1", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", 
         RowBox[{"1", ",", "\"\<Value\>\""}], "]"}], "\[Rule]", "2"}], ",", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Result\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"2", ",", "\"\<Target\>\""}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"NetPort", "[", 
         RowBox[{"2", ",", "\"\<Loss\>\""}], "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<ValueLoss\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", 
         RowBox[{"1", ",", "\"\<Policy\>\""}], "]"}], "\[Rule]", "3"}], ",", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Frequency\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"3", ",", "\"\<Target\>\""}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"NetPort", "[", 
         RowBox[{"3", ",", "\"\<Loss\>\""}], "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<PolicyLoss\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"\"\<Board\>\"", "\[Rule]", "64"}], ",", 
     RowBox[{"\"\<Frequency\>\"", "\[Rule]", "64"}], ",", 
     RowBox[{"\"\<Result\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<ValueLoss\>\"", "\[Rule]", "\"\<Real\>\""}], ",", 
     RowBox[{"\"\<PolicyLoss\>\"", "\[Rule]", "\"\<Real\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.798660275852213*^9, 3.798660296367329*^9}, {
   3.79866039537182*^9, 3.798660413762911*^9}, {3.798660464476963*^9, 
   3.7986605534768925`*^9}, {3.7986607696709595`*^9, 3.798660780153959*^9}, {
   3.798660810764262*^9, 3.7986608431725383`*^9}, {3.7986608756624537`*^9, 
   3.798660976224968*^9}, {3.7986610353087983`*^9, 3.798661071899179*^9}, {
   3.798661146963411*^9, 3.7986611654369235`*^9}, {3.7986685387367935`*^9, 
   3.7986686269193535`*^9}, {3.798675643517543*^9, 3.7986756474500303`*^9}, {
   3.7987421953991623`*^9, 3.798742214371831*^9}, 3.798742339213757*^9, {
   3.7990006583585453`*^9, 3.7990006845488663`*^9}, {3.799000716472046*^9, 
   3.799000779273188*^9}, {3.799001160922839*^9, 3.79900117426588*^9}, {
   3.799001232518117*^9, 3.7990012489460583`*^9}, {3.799001304283403*^9, 
   3.799001334955134*^9}},
 CellLabel->
  "In[520]:=",ExpressionUUID->"084e2e42-b803-4b15-a8c7-91d82b417cbd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trained", ",", "plots"}], "}"}], "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"lossnet", ",", 
     RowBox[{"sampler", "[", 
      RowBox[{"1", ",", 
       RowBox[{"0.9", "npositions"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<FinalNet\>\"", ",", "\"\<FinalPlots\>\""}], "}"}], ",", 
     RowBox[{"LossFunction", "\[Rule]", "\"\<Loss\>\""}], ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"validationset", ",", 
        RowBox[{"\"\<Interval\>\"", "\[Rule]", "200"}]}], "}"}]}], ",", 
     RowBox[{"BatchSize", "\[Rule]", "4000"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<SGD\>\"", ",", 
        RowBox[{"\"\<Momentum\>\"", "\[Rule]", "0.95"}], ",", 
        RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "0.01"}], ",", 
        RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", "0.0001"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<LearningRateSchedule\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "<", "100"}], ",", 
             RowBox[{"Clip", "[", 
              RowBox[{
               RowBox[{"1.0", "-", 
                RowBox[{"0.95", "^", "#"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"0.0001", ",", "1.0"}], "}"}]}], "]"}], ",", "1.0"}], 
            "]"}], "&"}], ")"}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "2000"}], ",", 
     RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newnet", "=", 
   RowBox[{"NetExtract", "[", 
    RowBox[{"trained", ",", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.798660275852213*^9, 3.798660296367329*^9}, {
   3.79866039537182*^9, 3.798660413762911*^9}, {3.798660464476963*^9, 
   3.7986605534768925`*^9}, {3.7986607696709595`*^9, 3.798660780153959*^9}, {
   3.798660810764262*^9, 3.7986608431725383`*^9}, {3.7986608756624537`*^9, 
   3.798660976224968*^9}, {3.7986610353087983`*^9, 3.798661071899179*^9}, {
   3.798661146963411*^9, 3.7986611654369235`*^9}, {3.7986685387367935`*^9, 
   3.7986686269193535`*^9}, {3.798675643517543*^9, 3.7986756474500303`*^9}, {
   3.7987421953991623`*^9, 3.798742214371831*^9}, 
   3.798742339213757*^9},ExpressionUUID->"4689d247-1f95-4a82-a6cb-\
ce155309be1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"newnetoutput", "[", "i_", "]"}], ":=", 
   RowBox[{"newnet", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Board\>\"", "\[Rule]", 
       RowBox[{"Normal", "@", 
        RowBox[{"games", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}], ",", 
      RowBox[{"\"\<Mask\>\"", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", ">", "0"}], ",", "0.0", ",", 
            RowBox[{"-", "1000.0"}]}], "]"}], "&"}], "/@", 
         RowBox[{"Normal", "@", 
          RowBox[{"games", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}]}], ")"}]}]}], "|>"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7986754342395554`*^9, 3.7986754577480993`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"05b525a6-f4e9-4f57-a196-30dfbc44ea1c"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"plotpos", "[", 
       RowBox[{
        RowBox[{"Normal", "@", 
         RowBox[{"games", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}]}], ",", 
        RowBox[{"Normal", "@", 
         RowBox[{"games", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "i"}], "]"}], "]"}]}], ",", 
        RowBox[{"Normal", "@", 
         RowBox[{"games", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "i"}], "]"}], "]"}]}]}], "]"}], ",", "\"\< \>\"",
       ",", 
      RowBox[{"plotpos", "[", 
       RowBox[{
        RowBox[{"Normal", "@", 
         RowBox[{"games", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"newnetoutput", "[", "i", "]"}], "[", "\"\<Policy\>\"", 
         "]"}], ",", 
        RowBox[{
         RowBox[{"newnetoutput", "[", "i", "]"}], "[", "\"\<Value\>\"", 
         "]"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "npositions", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7986753132844615`*^9, 3.798675343368639*^9}, {
  3.7986753837619753`*^9, 3.798675418067237*^9}, {3.798675471862298*^9, 
  3.7986755279650955`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"940c112d-f4d6-40fd-a822-42884de3e849"],

Cell[BoxData[
 RowBox[{
  RowBox[{"policies", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"newnetoutput", "[", "#", "]"}], "[", "\"\<Policy\>\"", "]"}], 
     "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"100000", ",", "109000"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7986758212703996`*^9, 3.7986759045164723`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"81e7b855-7f27-4031-8873-301b12076511"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "0"}], ",", "0.", ",", 
       RowBox[{
        RowBox[{"Mean", "@", "#"}], "-", "1"}]}], "]"}], "&"}], "@", 
    RowBox[{"Select", "[", 
     RowBox[{"#", ",", 
      RowBox[{
       RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], "&"}], "/@", 
  RowBox[{"Transpose", "@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Total", "@", 
        RowBox[{"UnitStep", "[", 
         RowBox[{"#", "-", "0.000001"}], "]"}]}], "#"}], "&"}], "/@", 
     "policies"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7986759678164515`*^9, 3.798676003053889*^9}, {
  3.7986760344215574`*^9, 3.7986760972245016`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"1240c5fb-e93f-41ce-a6f9-46425bd954ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"savenet", "[", 
   RowBox[{"\"\<nets/net-1\>\"", ",", "newnet"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.798676217007271*^9, 3.7986762250381813`*^9}, {
  3.7986762579045496`*^9, 3.7986762596847906`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"47628226-1bdd-4149-9411-a09555d33a77"],

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "0"}], ",", "0.", 
          ",", 
          RowBox[{
           RowBox[{"Mean", "@", "#"}], "-", "1"}]}], "]"}], "&"}], "@", 
       RowBox[{"Select", "[", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], "&"}], "/@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Total", "@", 
           RowBox[{"UnitStep", "[", 
            RowBox[{"#", "-", "0.000001"}], "]"}]}], "#"}], "&"}], "/@", 
        "policies"}], ")"}]}]}], ",", "8"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.798675893309167*^9, 3.7986759247744155`*^9}, 
   3.7986760085491204`*^9, {3.7986760741905823`*^9, 3.7986761070412555`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"97b17020-542e-462c-b0b0-53b859c49ef9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Runs", "Subsection",
 CellChangeTimes->{{3.798735995470566*^9, 3.798735998951696*^9}, {
  3.84851219799192*^9, 
  3.848512217415783*^9}},ExpressionUUID->"f1164f91-0909-45fb-8073-\
0fd67b828d99"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "comparenets", ",", "savenet", ",", "getnet", ",", "getgames", ",", 
    "deletetempgames", ",", "savegames", ",", "runselfplay", ",", 
    "roundstr"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roundstr", "=", 
   RowBox[{
    RowBox[{"IntegerString", "[", 
     RowBox[{"#", ",", "10", ",", "4"}], "]"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"runselfplay", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"run_", ",", "round_"}], "}"}], ",", "ngames_", ",", 
     "nthreads_", ",", 
     RowBox[{"options_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"RunProcess", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<xargs\>\"", ",", "\"\<-n\>\"", ",", "\"\<1\>\"", ",", "\"\<-P\>\"",
        ",", 
       RowBox[{"ToString", "[", "nthreads", "]"}], ",", "\"\<./othello\>\"", 
       ",", "\"\<--mode\>\"", ",", "\"\<selfplay\>\"", ",", 
       "\"\<--net-path\>\"", ",", 
       RowBox[{"run", "<>", "\"\</nets/net-\>\"", "<>", 
        RowBox[{"roundstr", "[", "round", "]"}]}], ",", "\"\<--games\>\"", 
       ",", 
       RowBox[{"Round", "[", 
        RowBox[{"ngames", "/", "nthreads"}], "]"}], ",", "\"\<--playouts\>\"",
        ",", "10000", ",", "\"\<--temp-init\>\"", ",", "2.0", ",", 
       "\"\<--temp-slope\>\"", ",", "0.1", ",", "\"\<--temp-final\>\"", ",", 
       "0.0", ",", "\"\<--policy-temp\>\"", ",", "1.2", ",", 
       "\"\<--kldgain-limit\>\"", ",", "0.0004", ",", 
       RowBox[{"Sequence", "@@", "options"}], ",", "\"\<--games-path\>\""}], 
      "}"}], ",", "All", ",", 
     RowBox[{"StringRiffle", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"run", "<>", "\"\</games/games-\>\"", "<>", 
          RowBox[{"roundstr", "[", "round", "]"}], "<>", "\"\<.bin.\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nthreads"}], "}"}]}], "]"}], ",", 
       "\"\< \>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"savegames", "[", 
    RowBox[{"{", 
     RowBox[{"run_", ",", "round_"}], "}"}], "]"}], ":=", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"run", "<>", "\"\</games/games-\>\"", "<>", 
      RowBox[{"roundstr", "[", "round", "]"}], "<>", "\"\<.txt\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Compress", "@", 
      RowBox[{"getfiles", "[", 
       RowBox[{"FileNames", "[", 
        RowBox[{"run", "<>", "\"\</games/games-\>\"", "<>", 
         RowBox[{"roundstr", "[", "round", "]"}], "<>", "\"\<.bin.*\>\""}], 
        "]"}], "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deletetempgames", "[", 
    RowBox[{"{", 
     RowBox[{"run_", ",", "round_"}], "}"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileSize", "[", 
       RowBox[{"run", "<>", "\"\</games/games-\>\"", "<>", 
        RowBox[{"roundstr", "[", "round", "]"}], "<>", "\"\<.txt\>\""}], 
       "]"}], ">", 
      RowBox[{"Quantity", "[", 
       RowBox[{"500", ",", "\"\<Kilobytes\>\""}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DeleteFile", "[", 
       RowBox[{"FileNames", "[", 
        RowBox[{"run", "<>", "\"\</games/games-\>\"", "<>", 
         RowBox[{"roundstr", "[", "round", "]"}], "<>", "\"\<.bin.*\>\""}], 
        "]"}], "]"}], ";"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getgames", "[", 
    RowBox[{"run_", ",", "n_", ",", 
     RowBox[{"m_", ":", "\[Infinity]"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"##", ",", "2"}], "]"}], "&"}], "@@@", "\[IndentingNewLine]", 
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trainsize", "=", 
             RowBox[{"Round", "[", 
              RowBox[{"0.9", 
               RowBox[{"Length", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", 
                RowBox[{";;", "trainsize"}]}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", 
                RowBox[{
                 RowBox[{"trainsize", "+", "1"}], ";;"}]}], "]"}], "]"}]}], 
            "}"}]}], "]"}], "&"}], "@", 
        RowBox[{"Uncompress", "@", 
         RowBox[{"Import", "[", "#", "]"}]}]}], "&"}], "/@", 
      RowBox[{"Echo", "@", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Reverse", "@", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"FileNames", "[", 
             RowBox[{"run", "<>", "\"\</games/games-*.txt\>\""}], "]"}], ",", 
            RowBox[{"UpTo", "[", "m", "]"}]}], "]"}]}], ",", 
         RowBox[{"UpTo", "[", "n", "]"}]}], "]"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getnet", "[", 
    RowBox[{"{", 
     RowBox[{"run_", ",", "round_"}], "}"}], "]"}], ":=", 
   RowBox[{"Import", "[", 
    RowBox[{"run", "<>", "\"\</nets/net-\>\"", "<>", 
     RowBox[{"roundstr", "[", "round", "]"}], "<>", "\"\<.wlnet\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"savenet", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"run_", ",", "round_"}], "}"}], ",", "net_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"CreateDirectory", "[", 
      RowBox[{"run", "<>", "\"\</nets/net-\>\"", "<>", 
       RowBox[{"roundstr", "[", "round", "]"}]}], "]"}], ";", 
     RowBox[{"KeyValueMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"run", "<>", "\"\</nets/net-\>\"", "<>", 
           RowBox[{"roundstr", "[", "round", "]"}], "<>", "\"\</\>\"", "<>", 
           "#1"}], ",", 
          RowBox[{"Normal", "@", "#2"}], ",", "\"\<Real32\>\""}], "]"}], 
        "&"}], ",", 
       RowBox[{"getnetparams", "[", "net", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"run", "<>", "\"\</nets/net-\>\"", "<>", 
        RowBox[{"roundstr", "[", "round", "]"}], "<>", "\"\<.wlnet\>\""}], 
       ",", "net"}], "]"}], ";"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"comparenets", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"oldrun_", ",", "oldround_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"newrun_", ",", "newround_"}], "}"}], ",", "ngames_", ",", 
     "nthreads_", ",", 
     RowBox[{"print_", ":", "False"}], ",", 
     RowBox[{"options_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"StringCount", "[", 
        RowBox[{"#", ",", "c"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<w\>\"", ",", "\"\<d\>\"", ",", "\"\<l\>\""}], "}"}]}], 
        "}"}]}], "]"}], "&"}], "@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"TrueQ", "[", "print", "]"}], ",", 
          RowBox[{"Echo", "[", "#", "]"}], ",", "#"}], "]"}], "&"}], "@", 
       RowBox[{"RunProcess", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<xargs\>\"", ",", "\"\<-n\>\"", ",", "\"\<1\>\"", ",", 
           "\"\<-P\>\"", ",", 
           RowBox[{"ToString", "[", "nthreads", "]"}], ",", 
           "\"\<./othello\>\"", ",", "\"\<--mode\>\"", ",", "\"\<compare\>\"",
            ",", "\"\<--net-path\>\"", ",", 
           RowBox[{"newrun", "<>", "\"\</nets/net-\>\"", "<>", 
            RowBox[{"roundstr", "[", "newround", "]"}]}], ",", 
           "\"\<--alt-net-path\>\"", ",", 
           RowBox[{"oldrun", "<>", "\"\</nets/net-\>\"", "<>", 
            RowBox[{"roundstr", "[", "oldround", "]"}]}], ",", 
           "\"\<--games\>\"", ",", 
           RowBox[{"Round", "[", 
            RowBox[{"ngames", "/", "nthreads"}], "]"}], ",", 
           "\"\<--playouts\>\"", ",", "200", ",", 
           RowBox[{"Sequence", "@@", "options"}]}], "}"}], ",", "All", ",", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{
           RowBox[{"ToString", "/@", 
            RowBox[{"Range", "[", "nthreads", "]"}]}], ",", "\"\< \>\""}], 
          "]"}]}], "]"}]}], ")"}], "[", "\"\<StandardOutput\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testnewnet", "[", 
    RowBox[{"ngames_", ",", "nthreads_"}], "]"}], ":=", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"$round", "+", "1", "-", "diff"}], "\[GreaterEqual]", 
        "$minround"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PutAppend", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"$round", "+", "1"}], ",", 
             RowBox[{"$round", "+", "1", "-", "diff"}]}], "}"}], "\[Rule]", 
           RowBox[{"comparenets", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"$run", ",", 
               RowBox[{"$round", "+", "1", "-", "diff"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"$run", ",", 
               RowBox[{"$round", "+", "1"}]}], "}"}], ",", "ngames", ",", 
             "nthreads"}], "]"}]}], ")"}], ",", 
         RowBox[{"$run", "<>", "\"\</testresults.txt\>\""}]}], "]"}]}], "]"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"diff", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "10"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eloestimate", "[", 
   RowBox[{"{", 
    RowBox[{"win_", ",", "draw_", ",", "lose_"}], "}"}], "]"}], ":=", 
  RowBox[{"Around", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "400."}], 
      RowBox[{"Log10", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "/", 
         RowBox[{"#", ".", 
          RowBox[{"{", 
           RowBox[{"1.", ",", "0.5", ",", "0."}], "}"}]}]}], "-", "1."}], 
       "]"}]}], "&"}], "/@", 
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"PoissonDistribution", "[", "#", "]"}], ",", "100"}], "]"}], 
       "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"win", ",", "draw", ",", "lose"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$run", "=", "\"\<run5\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.798738088290964*^9, 3.7987381057250957`*^9}, {
   3.7987391362563887`*^9, 3.7987392184172564`*^9}, {3.798741264949244*^9, 
   3.7987412999692383`*^9}, {3.798741334385786*^9, 3.79874138358453*^9}, {
   3.7987414198469973`*^9, 3.798741424812126*^9}, {3.798741503779181*^9, 
   3.798741681553784*^9}, {3.798741766727847*^9, 3.7987417905701847`*^9}, {
   3.798741860907219*^9, 3.7987418801900454`*^9}, {3.798741963841525*^9, 
   3.798741964874523*^9}, {3.798742226740152*^9, 3.798742247891861*^9}, {
   3.7987422793730288`*^9, 3.7987422929976683`*^9}, {3.7987424416532717`*^9, 
   3.798742474612555*^9}, {3.798745513010832*^9, 3.798745515597165*^9}, 
   3.79894945592257*^9, {3.798997476166299*^9, 3.798997493851506*^9}, {
   3.7989976299694633`*^9, 3.798997635303431*^9}, {3.7989977425602713`*^9, 
   3.7989977467064133`*^9}, {3.798997850481989*^9, 3.798997897072897*^9}, 
   3.799000192006065*^9, 3.799000234409375*^9, {3.799003436381092*^9, 
   3.799003439295186*^9}, {3.799037384479661*^9, 3.799037389065007*^9}, {
   3.799038042585987*^9, 3.7990380815422363`*^9}, {3.799110825663619*^9, 
   3.799110833961434*^9}, {3.799110880376256*^9, 3.799110895670127*^9}, {
   3.799110952909933*^9, 3.799110955727765*^9}, 3.799111316832674*^9, {
   3.7991113549947567`*^9, 3.799111360638536*^9}, 3.799111417446257*^9, {
   3.7991120397624407`*^9, 3.799112091192791*^9}, {3.7991156937505827`*^9, 
   3.7991156952643347`*^9}, {3.799117846394567*^9, 3.799117857613451*^9}, {
   3.799117890214024*^9, 3.79911790495336*^9}, {3.799177658841576*^9, 
   3.799177742842031*^9}, {3.799178012800992*^9, 3.7991780795141907`*^9}, {
   3.799178135055794*^9, 3.799178135935328*^9}, {3.799178643536211*^9, 
   3.799178648019734*^9}, {3.799178694105497*^9, 3.799178810364822*^9}, {
   3.799183621090193*^9, 3.7991837218838577`*^9}, {3.799183775983953*^9, 
   3.799183819829705*^9}, {3.799183912382321*^9, 3.799183912525112*^9}, {
   3.799196183357129*^9, 3.799196183700742*^9}, {3.7992005987995243`*^9, 
   3.799200623362464*^9}, {3.7992006699436293`*^9, 3.7992006877102833`*^9}, {
   3.7992020759817266`*^9, 3.799202084692572*^9}, {3.799202223110712*^9, 
   3.799202229377307*^9}, {3.799203945561219*^9, 3.799203951692115*^9}, {
   3.7992126546444407`*^9, 3.7992126577791758`*^9}, {3.799279077510807*^9, 
   3.7992790813234663`*^9}, {3.7992791136516943`*^9, 
   3.7992791276840553`*^9}, {3.799291554180759*^9, 3.799291560251652*^9}, {
   3.7993379849305067`*^9, 3.799337993093429*^9}, {3.799379511995261*^9, 
   3.799379532057122*^9}, {3.799435465178956*^9, 3.799435472055513*^9}, 
   3.799435520804451*^9, {3.79966572040099*^9, 3.799665760734833*^9}, 
   3.799665853875285*^9, {3.7998120050044947`*^9, 3.7998120254151382`*^9}, {
   3.799851207764311*^9, 3.7998512280825357`*^9}, {3.79995333482905*^9, 
   3.799953413244235*^9}, {3.799953504319139*^9, 3.7999535293158903`*^9}, {
   3.800239692650963*^9, 3.800239702768174*^9}, {3.800313358064908*^9, 
   3.8003133873475523`*^9}, {3.800313537028611*^9, 3.800313538048905*^9}, {
   3.8003798916923656`*^9, 3.8003798962150517`*^9}, {3.800379952816613*^9, 
   3.800379982862557*^9}, {3.8003813686175623`*^9, 3.8003815190407763`*^9}, {
   3.8003815536602163`*^9, 3.800381571419341*^9}, {3.8005599798470793`*^9, 
   3.800559991637639*^9}, {3.800584876535232*^9, 3.8005848792758303`*^9}, {
   3.800800854586134*^9, 3.800800860647386*^9}, 3.800808726452529*^9, {
   3.800811678488955*^9, 3.80081167992255*^9}, 3.800816235798202*^9},
 CellLabel->
  "In[521]:=",ExpressionUUID->"53c2ea74-9c00-4e71-8ce6-7964aa6e8f97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"runselfplay", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$run", ",", "1"}], "}"}], ",", "1", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<--playouts\>\"", ",", "\"\<10000\>\"", ",", 
     "\"\<--kldgain-limit\>\"", ",", "\"\<0.0004\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.817751610607259*^9, 3.817751625456423*^9}, 
   3.817751684894985*^9, {3.817935904405752*^9, 3.817935925959753*^9}, {
   3.817955613352077*^9, 3.8179556242992277`*^9}, {3.8179556595048103`*^9, 
   3.817955660711019*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"c692c3bd-8ae3-4a92-bce5-09732af5e862"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", 
    "\[Rule]", "\<\".time: 3369.582 ms\\n\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.8177517230644073`*^9, 3.8179360163297787`*^9, {3.817955645678193*^9, 
   3.817955666913412*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"64a0cc8b-66bd-480f-ba1c-0a4232ba7608"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Echo", "@", 
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{"runselfplay", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"$run", ",", "i"}], "}"}], ",", "2500", ",", "5", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<--play-random\>\"", ",", "\"\<--playouts\>\"", ",", 
           "\"\<4000\>\""}], "}"}]}], "]"}], ";"}], "]"}]}], ";", 
    RowBox[{"savegames", "[", 
     RowBox[{"{", 
      RowBox[{"$run", ",", "i"}], "}"}], "]"}], ";", 
    RowBox[{"deletetempgames", "[", 
     RowBox[{"{", 
      RowBox[{"$run", ",", "i"}], "}"}], "]"}], ";"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.799199375107695*^9, 3.799199414286972*^9}, {
   3.799199533960568*^9, 3.799199534222624*^9}, {3.799199566677557*^9, 
   3.799199594618469*^9}, {3.799200706966075*^9, 3.799200723562255*^9}, {
   3.799200791784732*^9, 3.799200795742124*^9}, {3.799201337946425*^9, 
   3.7992013494249897`*^9}, {3.799201464201901*^9, 3.799201464327215*^9}, {
   3.799201769929138*^9, 3.799201785203245*^9}, 3.7992018174179688`*^9, {
   3.799201954844445*^9, 3.799201978022135*^9}},
 CellLabel->
  "In[1706]:=",ExpressionUUID->"218daeec-f035-446e-bd13-9d60a125d2d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"games", ",", "validgames"}], "}"}], "=", 
   RowBox[{"getgames", "[", 
    RowBox[{"\"\<run5\>\"", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799201995036043*^9, 3.799202006521481*^9}, {
   3.799202281439165*^9, 3.7992022825476933`*^9}, {3.799279890949512*^9, 
   3.799279892062188*^9}, {3.799340476441866*^9, 3.799340507810932*^9}, {
   3.7996601315689*^9, 3.7996601338696136`*^9}, {3.799660247907936*^9, 
   3.799660282850053*^9}, {3.799660445263032*^9, 3.799660445401587*^9}, {
   3.799952316536463*^9, 3.799952320340671*^9}, {3.799971354786873*^9, 
   3.7999713549252863`*^9}, {3.800121496084653*^9, 3.800121499689822*^9}, {
   3.800196484811665*^9, 3.800196486313966*^9}, 3.8003984932514877`*^9, {
   3.8004854714882307`*^9, 3.800485472817977*^9}, {3.8004856497231092`*^9, 
   3.800485649806549*^9}, {3.800486159564179*^9, 3.8004861596230717`*^9}, {
   3.800502214905014*^9, 3.8005022152113953`*^9}, {3.800718692469439*^9, 
   3.80071870797968*^9}, {3.800797741439847*^9, 3.800797742074884*^9}},
 CellLabel->
  "In[918]:=",ExpressionUUID->"4f611bed-6365-4f8e-81d0-855c4a66e28b"],

Cell[BoxData[
 RowBox[{"{", "\<\"run5/games/games-0213.txt\"\>", "}"}]], "Echo",
 CellChangeTimes->{
  3.800816289585546*^9},ExpressionUUID->"8b2ad9dd-b90b-43d4-8f23-\
7912ad0a82dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringRiffle", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Alphabet", "[", "]"}], "[", 
          RowBox[{"[", "#2", "]"}], "]"}], ",", 
         RowBox[{"ToString", "@", "#1"}]}], "]"}], "&"}], "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"QuotientRemainder", "[", 
         RowBox[{
          RowBox[{"#", "-", "1"}], ",", "8"}], "]"}], "+", "1"}], ")"}]}], 
     "&"}], "/@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"BlockMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "1.0"}], "]"}], "&"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Abs", "@", 
          RowBox[{"Normal", "@", 
           RowBox[{"games", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"53", "*", "4"}], "-", "52"}], ";;", 
               RowBox[{"53", "*", "4"}]}]}], "]"}], "]"}]}]}], ",", 
         RowBox[{"Flatten", "@", 
          RowBox[{"N", "@", 
           RowBox[{"DiskMatrix", "[", 
            RowBox[{"1", ",", "8"}], "]"}]}]}]}], "]"}], ",", "2", ",", "1"}],
       "]"}]}]}], ",", "\"\< \>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.799081251291666*^9, 3.799081421956253*^9}, {
  3.799082327651136*^9, 3.799082329180736*^9}, {3.799082831799374*^9, 
  3.799082833995532*^9}, {3.79912124907062*^9, 3.799121263374395*^9}, {
  3.799121535107551*^9, 3.799121540858201*^9}, {3.7992797444580173`*^9, 
  3.799279745139288*^9}, {3.7996610246491537`*^9, 3.799661029418798*^9}, {
  3.800398570844927*^9, 3.8003986146261168`*^9}, {3.800398646372994*^9, 
  3.80039865136574*^9}},
 CellLabel->
  "In[589]:=",ExpressionUUID->"a13265b0-1ee0-48b3-b956-aa78a670e5fd"],

Cell[BoxData["\<\"f5 f6 e6 f4 g6 f7 g5 h6 e3 f2 h5 g4 h7 c5 c6 d3 c4 d6 e8 f8 \
e7 d8 h4 d7 c7 c3 c8 g7 e2 b3 b4 f3 h8 g8 c2 g3 d2 e1 h3 b1 c1 d1 a3 b2 a1 g2 \
h1 h2 g1 f1 a5 a4 a2\"\>"], "Output",
 CellChangeTimes->{{3.799081254798983*^9, 3.799081307043376*^9}, {
   3.7990813433287067`*^9, 3.799081348100935*^9}, {3.799081380870935*^9, 
   3.79908142224361*^9}, 3.799082329956029*^9, 3.799082834864049*^9, 
   3.7991134484066877`*^9, 3.7991210673063383`*^9, {3.799121255236114*^9, 
   3.799121263814616*^9}, 3.799121541614244*^9, 3.79927971243283*^9, 
   3.7992797454580917`*^9, 3.799279847292952*^9, 3.799279896019619*^9, {
   3.799279943785857*^9, 3.799279962446*^9}, 3.799379336121243*^9, 
   3.799660542218774*^9, 3.7996610308892097`*^9, 3.799875313162249*^9, 
   3.7999831410084553`*^9, 3.800398653531608*^9},
 CellLabel->
  "Out[589]=",ExpressionUUID->"2439e9c7-8322-49e1-94e7-139aa5c31184"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"EvenQ", "@", 
        RowBox[{"Round", "@", 
         RowBox[{"Total", "[", "#1", "]"}]}]}], ",", 
       RowBox[{"plotpos", "[", 
        RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], ",", 
       RowBox[{"plotpos", "[", 
        RowBox[{
         RowBox[{"-", "#1"}], ",", "#2", ",", 
         RowBox[{"-", "#3"}]}], "]"}]}], "]"}], "&"}], "@@", 
    RowBox[{"games", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "i"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"games", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7989359374039717`*^9, 3.798935953092298*^9}, {
   3.798935998089979*^9, 3.798936006523851*^9}, {3.798936094050919*^9, 
   3.798936120281045*^9}, 3.8002833748913937`*^9, {3.800457354314313*^9, 
   3.800457528750269*^9}},
 CellLabel->
  "In[919]:=",ExpressionUUID->"257f5957-a3eb-4989-9b59-531e1cbe1d12"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Echo", "[", 
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{"runselfplay", "[", 
       RowBox[{"i", ",", "1000", ",", "5"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"savegames", "[", "i", "]"}], ";", 
    RowBox[{"deletetempgames", "[", "i", "]"}], ";"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.799032907825923*^9, {3.79903487474046*^9, 3.799034902579341*^9}, {
   3.7990352171938143`*^9, 3.799035220751719*^9}, {3.799035807750792*^9, 
   3.799035839718264*^9}, {3.799036249894799*^9, 3.7990362504084377`*^9}},
 CellLabel->
  "In[946]:=",ExpressionUUID->"ecc5ee25-7f6c-4845-b0d7-4a2de1de1d7c"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "/", 
        RowBox[{"Clip", "[", 
         RowBox[{
          RowBox[{"N", "@", 
           RowBox[{"Total", "[", "#", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"1.", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "&"}], "/@", 
      RowBox[{"BinCounts", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Flatten", "@", 
            RowBox[{"validationset", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{"Flatten", "@", 
            RowBox[{
             RowBox[{"inet", "[", 
              RowBox[{
               RowBox[{"validationset", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}], 
             "[", "\"\<Value\>\"", "]"}]}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "1.025"}], ",", "1.025", ",", "0.05"}], "]"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "1.025"}], ",", "1.025", ",", "0.05"}], "]"}], 
         "}"}]}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"inet", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"getnet", "[", 
        RowBox[{"{", 
         RowBox[{"$run", ",", "7"}], "}"}], "]"}], ",", 
       RowBox[{"getnet", "[", 
        RowBox[{"{", 
         RowBox[{"$run", ",", "70"}], "}"}], "]"}], ",", 
       RowBox[{"getnet", "[", 
        RowBox[{"{", 
         RowBox[{"$run", ",", "110"}], "}"}], "]"}]}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.799004494724906*^9, 3.799004572463807*^9}, {
   3.799004671873589*^9, 3.799004779825975*^9}, {3.7991216768479*^9, 
   3.799121712011874*^9}, {3.799204358933025*^9, 3.7992043696074047`*^9}, {
   3.799204439561329*^9, 3.799204440426777*^9}, {3.7992044721865396`*^9, 
   3.7992044878924313`*^9}, 3.799204526960314*^9, {3.799205702336823*^9, 
   3.799205705926695*^9}, {3.799209680321021*^9, 3.799209682058276*^9}, {
   3.799213091463606*^9, 3.799213093176079*^9}, {3.799244588942142*^9, 
   3.79924461735141*^9}, {3.799291587493415*^9, 3.799291617697523*^9}, {
   3.799340081608045*^9, 3.79934011336062*^9}, {3.7995106768090763`*^9, 
   3.799510681274085*^9}, {3.799510713459408*^9, 3.799510713583647*^9}, {
   3.800549322387356*^9, 3.800549324928885*^9}, 3.800549379258831*^9},
 CellLabel->
  "In[683]:=",ExpressionUUID->"2bf49a3f-be0f-4e89-84eb-94b66ba9f517"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$gamesperbatch", "=", "2500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$symmetryfactor", "=", "8.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$netdependencylength", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$samplingratio", "=", "3.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$batchsize", "=", "4000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$maxroundsfactor", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"$symmetryfactor", "/", "$batchsize"}], "/", 
     "$netdependencylength"}], "*", "$samplingratio"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$minround", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validlistsdata", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roundlistsdata", "=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7992008978598967`*^9, 3.79920093076455*^9}, {
   3.799200964016655*^9, 3.799200975660812*^9}, {3.799201028240312*^9, 
   3.799201047464373*^9}, {3.799201107205249*^9, 3.799201211144142*^9}, {
   3.7992012419937553`*^9, 3.7992012971907167`*^9}, {3.799202015012188*^9, 
   3.799202056611265*^9}, {3.7992021648052464`*^9, 3.799202179677115*^9}, {
   3.799202441714711*^9, 3.799202518867528*^9}, 3.799202567862732*^9, 
   3.799202640885703*^9, 3.799202827572543*^9, {3.79920322909968*^9, 
   3.7992032292907877`*^9}, {3.799282745616083*^9, 3.799282745867*^9}, 
   3.799435311569108*^9, {3.7996659773727283`*^9, 3.799665977486759*^9}, {
   3.800313631918673*^9, 3.800313635400242*^9}, {3.800322539623645*^9, 
   3.800322540293988*^9}},
 CellLabel->
  "In[505]:=",ExpressionUUID->"8ff0b926-e42d-4af8-bcaa-e01c04045a30"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$round", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"games", ",", "validgames"}], "}"}], "=", 
   RowBox[{"getgames", "[", 
    RowBox[{"$run", ",", "8"}], "]"}]}], ";", 
  RowBox[{"$npositions", "=", 
   RowBox[{"Length", "@", 
    RowBox[{"games", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingsampler", "=", 
   RowBox[{"sampler", "[", "games", "]"}]}], ";", 
  RowBox[{"validationset", "=", 
   RowBox[{
    RowBox[{"sampler", "[", "validgames", "]"}], "[", 
    RowBox[{"<|", 
     RowBox[{"\"\<BatchSize\>\"", "\[Rule]", "80000"}], "|>"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.799202840506575*^9, 3.799202841272955*^9}, {
   3.7992049361973543`*^9, 3.7992049452925*^9}, {3.799205020219802*^9, 
   3.7992050211030188`*^9}, {3.799205092103224*^9, 3.799205092320264*^9}, {
   3.79920518017982*^9, 3.799205180446265*^9}, {3.799205651456201*^9, 
   3.799205651739501*^9}, {3.799205993154499*^9, 3.7992059946845007`*^9}, {
   3.799340539623804*^9, 3.7993405401051188`*^9}, {3.799341548848442*^9, 
   3.799341550378463*^9}, 3.799435541387183*^9, {3.799666044726191*^9, 
   3.7996660486825447`*^9}},
 CellLabel->
  "In[552]:=",ExpressionUUID->"7d2cdfe5-5ef1-4d06-ac4a-36d8833c1bda"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"run3/games/games-0007.txt\"\>", 
   ",", "\<\"run3/games/games-0006.txt\"\>", 
   ",", "\<\"run3/games/games-0005.txt\"\>", 
   ",", "\<\"run3/games/games-0004.txt\"\>", 
   ",", "\<\"run3/games/games-0003.txt\"\>", 
   ",", "\<\"run3/games/games-0002.txt\"\>", 
   ",", "\<\"run3/games/games-0001.txt\"\>", 
   ",", "\<\"run3/games/games-0000.txt\"\>"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.7996661936535263`*^9},ExpressionUUID->"2a11592c-779c-481d-a4c3-\
83ee9eaefd41"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"DumpSave", "[", 
    RowBox[{"\"\<dump/losshistory-run2.mx\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"validlistsdata", ",", "roundlistsdata"}], "}"}]}], "]"}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.799368486773541*^9, 3.799368531424533*^9}, {
  3.799433095180058*^9, 3.7994331014083033`*^9}, {3.799466264114315*^9, 
  3.799466287998761*^9}, {3.799594625924232*^9, 3.799594635192131*^9}, {
  3.799665930998397*^9, 
  3.799665937737237*^9}},ExpressionUUID->"c7b33194-c6eb-46af-9af1-\
eace92efa7a4"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Get", "[", "\"\<dump/losshistory.mx\>\"", "]"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.799368536359663*^9, 3.799368538082714*^9}, {
  3.799435757897093*^9, 
  3.799435758681642*^9}},ExpressionUUID->"a9c7b112-a39c-4f24-a6a4-\
c07a6b994f94"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trained", ",", "validlists", ",", "roundlists"}], "}"}], "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{
     RowBox[{"lossnet", "[", 
      RowBox[{"getnet", "[", 
       RowBox[{"{", 
        RowBox[{"$run", ",", "$round"}], "}"}], "]"}], "]"}], ",", 
     "trainingsampler", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<FinalNet\>\"", ",", "\"\<ValidationMeasurementsLists\>\"", ",", 
       "\"\<RoundMeasurementsLists\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<ValueLoss\>\"", "\[Rule]", 
         RowBox[{"Scaled", "[", "4.0", "]"}]}], ",", "\"\<PolicyLoss\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"validationset", ",", 
        RowBox[{"\"\<Interval\>\"", "\[Rule]", "50"}]}], "}"}]}], ",", 
     RowBox[{"BatchSize", "\[Rule]", "$batchsize"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<SGD\>\"", ",", 
        RowBox[{"\"\<Momentum\>\"", "\[Rule]", "0.93"}], ",", 
        RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "0.02"}], ",", 
        RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", "0.0001"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<LearningRateSchedule\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "<", "100"}], ",", 
             RowBox[{"Clip", "[", 
              RowBox[{
               RowBox[{"1.0", "-", 
                RowBox[{"0.93", "^", "#"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"0.00001", ",", "1.0"}], "}"}]}], "]"}], ",", "1.0"}],
             "]"}], "&"}], ")"}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", 
      RowBox[{"Round", "[", 
       RowBox[{"$npositions", "*", "$maxroundsfactor"}], "]"}]}], ",", 
     RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"validlistsdata", ",", "validlists"}], "]"}], ";", 
  RowBox[{"AppendTo", "[", 
   RowBox[{"roundlistsdata", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"ToPackedArray", "[", 
       RowBox[{"Mean", "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", 
          RowBox[{"UpTo", "[", "50", "]"}]}], "]"}]}], "]"}], "&"}], "/@", 
     "roundlists"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"savenet", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"$run", ",", 
      RowBox[{"$round", "+", "1"}]}], "}"}], ",", 
    RowBox[{"NetExtract", "[", 
     RowBox[{"trained", ",", "1"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellLabel->
  "In[556]:=",ExpressionUUID->"c777ce45-89b1-4bea-abd2-d719850c76ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"MedianFilter", "[", 
         RowBox[{"#", ",", "3"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Join", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"k", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], "/@", 
            "validlistsdata"}], ")"}]}], ",", 
         RowBox[{"Join", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"k", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], "/@", 
            "roundlistsdata"}], ")"}]}]}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"k", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"ScalingFunctions", "\[Rule]", "\"\<Log\>\""}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<ValueLoss\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"All", ",", "All"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<PolicyLoss\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"All", ",", "All"}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7992035912029877`*^9, 3.799203593860889*^9}, {
   3.799209716634425*^9, 3.799209870251512*^9}, 3.7992563945176067`*^9, {
   3.799256577549232*^9, 3.7992566010758133`*^9}, {3.799256644069683*^9, 
   3.799256759771613*^9}, {3.799260935908781*^9, 3.799260936411541*^9}, {
   3.7993374809794807`*^9, 3.799337505764625*^9}, 3.799435700302409*^9, {
   3.799436305602604*^9, 3.799436312843652*^9}, {3.799473525283414*^9, 
   3.799473550591765*^9}, {3.799475749925626*^9, 3.799475752334071*^9}, {
   3.799971422902018*^9, 3.799971431266678*^9}, {3.800112313911004*^9, 
   3.800112314919649*^9}},
 CellLabel->
  "In[921]:=",ExpressionUUID->"aadff5cd-c203-409f-8eff-ffaea3b29e82"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
n0SnYxQDjS3F+TAAGyZR3o0Poc8X8frfJJo+svLBoRPCxmAT8AjIbwY2h/SU
RF92d/62ciSP/8FWSdSrYMGB29NFe20Ntm3wCtPvs/7i/n8SVX+dfOiEA4//
Ie4AdoT0TmDnhv0ve/ur81Jx/bmC3ZLo5qQLwf92FvvjCXEvsHcSdRyZM2XB
Vv77J0lkHNb0vndTrv/gQHBIEnXT6RZkEc/r4yEeDY5Porrzpx51TuX5P7AM
rABngrOSaIHjpwF5PH7JBueAc5NIUtjiyM1ocb7zwOokuvTiryCn1tz/T6KT
fWf/vU4tXADxQnAxuCSJIrU6j/pXj9f/gcvBFeAXSTQyMyLY9R9+/pdE9/w9
to6czfN/4GpwTRL9N9w0p1kZr/cH14MlyY3zayRT/3m7tApmcP1PJrunuz6Z
5fLzv2T69n1aryj++1s6YF2wXjKFaRzdO0GDn/8nk97TUSM3feHnf2BDsBHY
OJl+P5/qceYB/32BZJqUOMI2mteLj0imFgf2dOmQwvUf4uZgAlskk7wqJ+0c
rxexAlsnU/u/DsX0ieS/TwC2S6Z0g7HHa6fz+0pgh2SKqV/c7Dj/fUNHiDsl
098TnqwJus71H+wKdgN7gr2S6eLKy7fuTuH5f4hLk+mJasj2I5G8/h8cCA4B
hydTbd6iiBPnef4PHA9OBsvACnBmMs228P4iT+PxfzJNXLHwglZ7rv/gHHBu
Mh2aMN9Ups/9/2TKHL5QukPO/f9kWju2rIlqgXA+uADSF4KLG35PtXh8Z+6f
lyTTytZ3qpds4/X/yXT3qM2bpfz3f8qTadN2VW+XDqL8KyD+IplsizxKVIN4
/h/iVRCvBtck07xtY/vef83tfzI9Hv0m+ncrbv+TycVu5Xh5Fr//mdI4rgHW
BGulNM6vA9ZNoUHSlhovH/Pz/xSaqDtn41/BYn/0wQZgwxTa7VXhM74L13+w
MWzfBOIjUshpQIWdDs+Hm6VQetPfE//7h9t/MKXQrPY623dnCFuArcDWYFvY
nl0KJfWdahzC6wPswQ4ptGnGAp2yafz3cVOowynV6GQnbv9TaP7r9/Et+Hth
zik0OXh5iW4s13+wG9gzhXQzFs759Qev/4O4N1gK9of8gSl0dNKKqzb8facQ
cDg4OoUyj7Wu77mV1/+lkP/V8Q+KdMTxJoNlkF4B8UxwVgo9rA43CuO/z54N
zgHnptDBrS872V7i/j9YnUJZc7yyPwdy/z+Flrp8bG4/jNf/p9CKwT8mWzzi
+f+G66tL1+Re/Pd/i1PobofdM5u4i+MvSaEecTcfvm7P7T+4PIWWeLy9dlib
23/wC3AluCqFWh5zv+T1it/vBNek0NgfM3opHvD8H8TrwZJU+ud06Iti/h6T
Rir1bnH38Nxgrv+pdGTtyE7Kb7z+F6wD1oX8eqk0ccFeo4gCcf/ST6V+w35d
v5bP/X+wIdgI8hunUkGbLG9Lfh/UJJWeLPrc/kNLXv+TSpefqPR2zeX1P6nU
+nrMQJ0Kbv/BBLZIpdp37YIm8/NTK7B1Kt3YNLzzDf77S7YQtwPbp5LzlA2b
dZZy+w92hO05Qdw5lfa+rjkaXSzOpyvE3RqOX6l8lLSKn/+BvcDeqZQwNaTs
yCF+/gdx/1RaM2uAme9Arv+ptNo/2OUd/z3fEHA4ODqVxhZ5+6jac/2H7SWD
ZanUMnjD0OQRXP9TaWhe8Ad3Mx7/N+yfuXePOF6vmpVKZRtPB2ct4PqfSlfm
+jb1e831H+K5qVT0/MyMoY+5/oPV4HxwAbgQXAwuSaUPrRL+LGjGf68BXA6u
SKWdRqt+7OO/3/0ildpsUxt3479XXAmugvTV4JpUup9o9u/tC9z+p9LZmB91
n/nvc9ankun38r0H+P0Fyf7G1thPHle6JcXN4Od/++m71eEvGby/WmAdsC5Y
bz/1Gq+RGvqW+/9gA7Ah2AhsvJ9Obbrw2Def1//spy8GxZbf+vD6H7DZfvrT
0tl9wCqu/2ACW+ynwFkndqqXcP8f4tZgW7DdfjJx6/hgvSHXf7DDftpuRb10
+O+3OkLcCey8n7pPOjPuiQ+3/2C3/TTU6sNbjRa8/n8/5e/Iu9diL7f/YO/9
JNfYmVzN7Zt0Pw0bY3n4OY8P/CEeCA7ZT4+VMYHtlonfDwdH76cN0qWlRkOF
4/fT8+SopVqnxPxEMlgG+RX76UG/4kFhplz/wVn7qUcT16x+Pfn5P8RzwLng
vP20xCeu5c3B/PwfnL+ffjTzuZVzlp//76fRf2yq2MzXUyHEiyFeAi7dT4cG
XVLn9eP6v5/M27w69MaE6z/4BbgSXNVQnm2vlN4PEduvBtfsp3+zqw8G8f7V
7SeNle9veMXz+h+wRNbYTWV0dvPtha/4/QwNcAsZTS6+9HKgsSg/TYi3BmvJ
aHjtyHO708X2tWV0Sddi5EU/nj+E7XWQ0dIP6XPO8notXRl5TLO99n6mGF91
BuuBu4H1ZVTxfIz9vSLhHjIKGPjY+8VN/t6tjMxMoyf87CH2p7eMJrywvzax
n7i+DCHeD+JGMjqXog7bNUt4IMSNwUNk9FfKxwu9uvD7C2BTGZ2RtAn35vHc
CBmV+DyMLOf7xSiwGXiMjMzXLf+9bgyPd8DjwQSeBLaQkc20JaM+8t9DsoS4
VcPv55tP8ZgjPB1sDbaRkdGQf/8yW8zjJ/AcsJ2MPpweZLCvTtyP58torPbv
4o87+O8rgBeBHcBLZNRsicbu0W357y/IqHzJo4Ri7m8slxH57jrcfzT3x8Cr
IL2zjGT6DyKkn8T16yKj9HcXfNe3EdevK3i9jOxq1z61juHnt2APsCd4s4wW
hg6ceushr+8GbwN7g3fKyPjx2qXz7vH8r4xiRrU8WPFaPA/yBfvLaN2+30U/
mojnaQEQD4TtBclor2yw/qaP4nyEgMNk5Knpdn8dPw8IB0fKKDO7U8nJM9yf
BMfK6IBrzcOFbjy/JKPO21JWXubnT4ky0s43Lh3F70smg1MhvQy2J2+4f1zL
X9CWn48owEoZTXnj3efAF56fktFGn6zVkU+ED4KzIP0RcDakPw7OkVHPCQda
ef0lyu+UjPY3jftd9IWfb4PPyqjXYOlHt4OifPJktFp+MH15rrh+LoDV4Esy
Khqo772e/x52voxe13R6YMDvE16V0Rst6T8LZ3P/uOF+vz9t6uWDwtcb6teb
jm8XZHF7KSM9ffPnqXz+i2Q0v2jPqLP8vYdiGe2blPK7T1PRvt2WkWrRkpnL
+HvZJeB7kL4U4mXgcvDjhvt5Xl1iwf/aXxmN++zaYxJ/z+2ZjEJ2ypXDznF7
LKPx/WdUL7su/EpGO+6+Kf9UyO2zjK5oTFef/i78FlwFft9wvz+ZMLmmCX+P
D/wJ0tfIqGBceFZiaxGvBdeBv8vomu2IXot0hOtldLRiwbBC9q+G+nB4bX4E
f19TktbYTdOoX+mWouZSYQ1wC7BmGqn+yDlcOF24NVgLrA3WAXdIo4EZ515P
VArrptGR7TulO3OEO4P10iiujK5uyRfulkZrkw0/jvtPWD+Nvmm2fhtfLdwj
jf459yizMoa/b5lGRiZZzvXHhHunUXS91tO4e8KGaaR5xatrk3bi+4f9IG4E
HgjpjcFDwCZpJCsuijl4VeQ3BY8Aj0qjh5c1uxVcETZLo9WzPiR9OSw8Jo0c
DeOnHNsrbJ5GS/X8to9sLjw+jdpOMGo2rIa/35dGHW/ZT4x7LzwpjR5EL77Q
LlDYIo0GxV2rLObvJ1uCrcDTwdZgmzRac/iH49Bs/r4LeE4a+S710lvK31Ox
SyO//BZtpr4Unp9Gxp8qSvzfCtunkbvjq/CwluL4FqXRBa0a/YHb7or2H7wE
7JhGh+cbDV29S3g52CmNlCl5yosOwqvS6L7WFd1XFsLOYBdI75pGzRZuub1s
qfD6NLq6b8WlXouF3SDuAfYEb4b8Xg3H3ztad8tYcT1tA3unkcvQHyMdhwvv
BEvBvml06fYGm7Gc3x8cAA5Mo/4utZdndRcOSqMzh3+mRvYVDgGHpdG9oU6v
/f/k712DIxv2p3ZzdJy7cHQa9VnRIvztNuHYNJpRVFiz+oM4/vg0qu2VpHPw
q3BiQ3nMmJJ8u/890f6DU8GyhvqjXvZm5BhhOcQVEFdCPDONRuff7LWrn/BB
cFbD9SQ7MN5ZX/hIGr0a81D7WRfh7IbrpfrgANvmwsfTKPOHOtDusjienDQK
arWuzZWL4vhPpVHM1acJh8KEc9NI2jrHtnCr8Nk0qphXZ+OzUjivIX1nnaFT
7IQvgNXgS2lkM7TDcKcBwvlpVJo8fclT/v7rVXAB+HoazdVxyzKxFS4EF4GL
wbfBJWm0b1bA9WE2wvfApWk0/MwYrzsjhcvSaML0vqNDTYXLIf4YXJFGR3e4
7/jtKPysob3YMKLZUxfhFxB/Ba4Ev204n7Pjf6p4/6rSyOHW92eBTYXfp9Hm
vHlPJ3/l7zGn0a+sPp6ZL4Q/pdEBi/oZ7y8I16SRWYtZLSuihGshXgfx7+D6
NFoUPH7PTxfhXxCXyBu7qZyUYeVd+x0V1pDT06/ubzbvE24hpyf7PF6/OSis
CW4tp4BVw1yyeP+0wNpgHTmNTX7b4aq1OD8d5DT48gTtSpWwrpxGJMRcOZ4n
3BmsJ6dmR0p7Ny8X7ianMXVDS85cEdaX07OBxsn+t4V7yOnsn8aT0x/y940h
f++G/H0fNUurEjaUk+OtFslXqrn9BxuBB8rpvO69zxu/c/sPHiKn92dtUiZ2
EvXbRE4zbh591N1G2BQ8Qk52HZ1ORo8VHgU2A4+B/OYQHy+npG3zV0QZCBPE
J8npzLlrDzeOE7YAW8pph/9kiy98P7aSk3rQ8n9PHhflOV1Oi6qKFe4ewtYQ
t4G4LXiOnDxnKa5JXYXtwPPltC4qqujaWmF78CI5LSl7n7bZUdgBvATsKKeB
mzZG2HsJL5dTz7MdtDvtEHYCr4L0zmAXOZ081zbkCu+vK3g92E1Oh3xyuwQ5
C3uAPcGb5fTzn0lfQyyFveQU0/zs9CF8PNvA3pB+p5yyWzSJvN+Fvz8uJ6eD
hzavbirsK6cpHz751/P35f3l9M/RpICX50V/KwAcKKe1z0ctenNaOAgcIqei
D8OMbh0WDoN4ODhSTtYUsyorXjhaTg+uvLO/s0s4Vk71HSv0imfz9/jkFPXr
VFX8duHEhvplYzDnwBDhZDl1q8g6e6ilcCpYBunlsD1FQ/1ImDjKj8cHSjnN
varXXFUmnCmn3fErDLyrhA+CsyD9EdheNsSPg3Pk9FeU5KT/G+FT4FzwWTl9
dT/SdcJ/wnlyWjBiVarDN+ELcmoRZOhbye2RGuKXIJ4vp2WLNA9X8P3xqpys
PP74YPWM2385hfh5dUr9xe1/Q/mY2TzS1BP3i0KIF4GLwbfldLy2+efkOm7/
5dS8tM3j7hXc/oNLwWWQv1xOVcWX+oz6xu1/w/k6UBawSEPsX4WcJDPafvrR
VviZnIrtuvpX6Qi/kNPCUe6jT8wVfiWn18NaH/suFa6E+FtwFaR/LyfpkDpP
WiJcDf4ErgHXyunCkArF/k3CdXIaOmf5zoFpwt8hXg/xXw31bUbqgt+ZwpJ0
mrrf+nDhSNH/bJpOtcq8DbkThDXSyUXHZtfLhcIt0mnQyTPv/AKENcGt06m0
OjKsbpuwFsS108lxlKZn8i1hHYh3gPy64M7p1L3g2rykYcJ64G7pNOOLZohh
qjg+/XRa6ha04qyncI90KlYVjtpiK2yQToVRqacKub3snU67ffL7tGsjbAju
l07rnQ+4HGwlbATxgem0ee9nr4XNhI0hPgRskk6d3vU8f4b7A6bgEeBRDds/
13NY36/iejZLp3GjO2Say4THpFPL5qNXfrDi8X86nTdKLPPvweP/dDJ4IMsL
1xemdFobNOJUCn+vdFI6nbq4q92JWzz+T6fU1J0fteU8/k+nP2+S1Xe+H1uB
p4Ot02nA1Hfea2bw+B+2Z9tQflOHnlt3kMf/6TS0tlOlD8/v2KVTZsWXDRu+
8fgfbJ9Onnb+Hya94/a/4fgeOz3r8p7b/4byeumx1vgzt/9gx3Qa26VoeRTf
/5anU8hQjStB37n9B68CO6fTr34rfcq4/+sCdk2nR0u2D1lQyu0/2A3skU62
6VLdgY+5/W/4vcDeYdN4vmhzOh3Odr1Q017YC7wtnY4+fF8Zq8fj/3SyLJrs
d3EUj//BUkjvC9vzh3gAOLChvIfe6RXzUexvUDo1X29607RQOCSd6q4bfvTm
8UQYOBzyR4Kj06nG36AguYDH/+mk2Hfhj7Z9efwPTkynQMtfRq6Wwsng1HQq
H7r7pTfXP1k6acQsaPl9krAcrID0ynTSlAc2rZoj9icTfDCdZpGF0eca4Szw
kXQatb5g8uhmwtng4+m03destHKmcE46WVtdXF/O2z8FzoX0Z8F5kP4CxNXp
NPLw2f19hvD4H5wPvgouaLjeu57us2gEt//gQnBROhmqnLa85fF1cTopDRc/
bjmN239wCfgeuBRcBi4HP06nsFfPowP+4fE/+Bn4BfhVOo3JWtp82kce/4Pf
ppP+NIWjxx88/m9oj6IWj2uTJa7n9+Bq8Kd0irN2GXHup7i/1aTT+NHy5zE8
n10LrgN/B9eDf4ElCro5rOzb3n48/leQo32y9zGeL9BQUMiqnzeWreLxP1gT
0reGuBZYG6wD7qCgdl76yyN4vKML7qygJu2OtjAzEtZTkN7g2Lu1k4W7gfUV
1Olzzs7ZBsI9FKQeVtjxsDbP/yvo59+bv+bw/HdviBsqKP/pFt2kbsL9wEbg
gQoadl17oi3fv43BQxSkHTRs74ntPP+voNP9tnttiRc2hfgIBW1/V7HV1VN4
FNgMPAZsrqDHqtcZ03k+cDyYwJMUtKLHvLi/TwtbKMhlxnXHSceFLRWU/jZa
u805Hv+Dp4OtIb+Ngu4Onae/IkjYFjxHQR92fF281UPYDjxfQR2fturr6SNs
D14EdlCQtE3ikEnBwksg7gjx5Qo68HGx1/osYScF+d3tqOx6RniVgiz2VjTZ
f0LYueH6v7M6Ze9vYRcF/f1ovclgI57/B69X0KxOs4/0bc7z/5DfA+ypoH88
/6S0pjz/D/ZS0KcOd8/fbiK8DewN3gn5pRD3VdAk8+J7+Ty/5g8OUJCVwnb4
5dYifWDD9f3nyR1JxsJB4BBwGDhcQVe3m5x8MV44EhwNjlWQvs3UZsktuf2H
eKKC7LW1F4S5cfsPTlWQifp4i/sTuf1XUNX1S91GzeL2H+IKiCshntlwPoI3
LP/cWfggOAvyH1GQ+YYmtZ78/CZbQcuypufNXi58HJwDPgXOVZDkvoeVNY8P
zypoQ/DAwXu6CucpaGtpq6euPP94QUEGO6aXf53H7T/4Eji/obz6Pn/tv4bb
f3CBgrKDb3WesoPbf4gXQrxIQZo2g9odSOH2H+K3wSWQ/l5D/d0x+1mbA9z+
g8vA5Qr6Nsp9+/Qe3P4ryGbUpu7PlnD7D/Fn4BcKerf7c7CkDbf/DfsX/87Z
i+fvKxXU404Tz36fhN8qaMj5421aPReuajj/mnO/jr/F7T+4GvxJQes+/Dqy
iud/asC14Drwd3C9gp4pXy1/9ovn/8GSDKq23NIxiOdnm4I1wC0yaFht5B9N
T3H7D24N1gJrZ9D+oAftsq5z+59Bf/R1P7SCz3cHsG4GKXa8WnqG+5udM+jq
paZ3TGYI62WQT9HjQXWBwt0yKPbg03891vD4P4P2dDXYum8jj//BBg3p1Vs3
fArn8T/YMIMyfpsddFLw+D+DIvPVCbJsHv+DB4KNwUMy6MXBuk3Pg3n8DzbN
IN+TKW+H7eTxf8P5e1FSNIHr+6gMmuL0bJDlfJ7/z6ATPWd/efGU2/8MqnHd
OHYjz4eZZ1C7nVkhU3O5/QcTeBLYAmwJtsqgh/fKl7Xk9ns62DqDJjc391vO
9wObDOoRWDYwxYnbf4jPAduB52dQYfAN+8mB4vjtM6hAf0vcvmLhRWAH8BKw
I3g52CmD5rQr92/Pz2tXgZ3BLmDXDJp7e3za3gfc/oPdMshm+PrS4Rn8/D+D
3rfXHv7tCbf/GaRnmDzjxT88/59BGz8m6lrw+NkLvC2DOlU52Htwf9k7g5yd
3bMT+/P8fwY9mbfQ5xn396VgX8jvn0Gv455+e8/zGQHgQHBQBi149L7l9BM8
/geHQfrwDBp4J3jW61k8/s+g5FXhzTSv8/x/Br0avcvMk9eHxILjM8jDISFk
aRbP/4OTIX1qBhmsypr/Po/n/xvOX9i9OY+KeP4/gy7cHfWpxWue/wcrwZkZ
NEtzZVDMNeGDEM8CH8mgpbeWJfw25fn/DGq5Zr3xkhqe/8+g591cNWua8Pgf
fCqDltf7N9/elsf/ED+bQYavB21078rjf/AFsBp8CZyfQb/uOJsvyhP7dxVc
AL4OLsygNbM2r7zcjdv/DPI693uWE9+fisG3M8hkVb77y3aiPpQ0bG/66q4/
2fcgXgoug/Tl4McZ9Lnpeq3+PP9bAfFnEH8BfgWuzKAmev0fFA3g+f8Myq3e
vvsQ9++rMihYy8q+W5E4vvcZlN0jJUxDLlydQd2Of/r8I0D4E7gmg8YEf38Y
SsK1GTQ1tMqO9IXrMqhP9L0R1rz+4nsGxfiu/cv2J7f/EP8F+SXKxm6qJN3x
C/oX6wprgFuANcGtlTT7udsqZSW3/0o6kH1Bq9kRbv/BOkqKv2CQlXOAx/9K
em3R/nVdGo//wZ3Bekoy/WrWLSyVx/9gfSXF/a5NKkvk8T/YQEnNPJ+vm7Ra
uLeSWr4z7mir4PG/kvLvWz0tDOTxP8SNlNTjxMjSNzwfPBBsrCRjU9PETO6P
DQGbKKnFBYf/vEqETcEjwKOU9MV0WAu7JGEz8BiwuZKCOvR82TmM5/8hTuBJ
kN5CSRMPZ6zUni1sqaSLvVqouvJ8h1VD+q850wdpCU9vOD8Xr0y+8Jjn/5X0
ePrc37MP8fw/2BY8R0kBa3ZNPHKS5/8hPl9JjjeTOksyeP4f0i9Sku2PzJja
v/l7S0qKbqq7egWvD10CdoTtLQc7KWllntHLFV2FV4GdleTwKOyGl56wC9gV
0q8Huynpx8JBG/J7C3uAPZV0Qnvt7ybnxXrgzUp6MbY8IqYNf98JvA3sDdvb
qST9ALn04Fz+/pOS+uU26btzr7BvQ/6J86o2yrn9BweAA8FB4BAlvb/ySN6B
16OGgcOV1Ctzxq78bdz+g6MhfayS1rrJnxfGCceDE5X0ptPyHnMyhZPBqUqy
6nE7wK9CWKakXz+eDMgZJu5fcogrlHTqnPXp/ptEXAnOVFLE/PqImcuFD4Kz
wEeU9KeioLR5f+FsiB+HeA7ETymp89an0U9Cuf0HnwXnKUnWouIPH34+eEFJ
B8s7tvfg9ketpKKtc0Y1O8btPzhfSZZ5fp+7cXt2taF8SzekamoLF0D8OsQL
IV6kpCr5z4GruD0shvhtiJeA7ymp1Y4wGwOenytV0j+nzfuYR/H4X0kjZ0SU
rfgiyq+8YX92Pk4aOVr4sZJOe4yrXcv9sQrwMyX9d/5mkh+vR3kBftVw/xiq
jggKFa4Ev1XSLqPOt4/x/HoV+D24Wkk37TYt8vzF6/8hXgOuVVL5io5JBpU8
/6+kJxqk+3gKz/+D65W0uqTuvs8onv9X0lhl4hMdE57/V9GKP4vWl9WL+0tT
sIaKknrXTqx8LtxCRUsN3Z8NO83vB6vIzuxCf8+Twq3BWioa4zV2cNfDwtoQ
14HtdVDR0+qnLTVv8/vEKpotj/FueU+4c8P2/Cy9Ypbx+n8VrV2XE5TG7VU3
sL6KzN3GRfSI5vZfRZ0fu6sW8HjKQEWr5bce177l9l9FU6Vzfp7j9TOGEO8H
NmrYv7KjS4/Vc/uvomU0u96lpbgejVXU+kGRTHeu8BAVdY80/RC9nuf/waYq
ep82eUvFRp7/B48Cm4HHwPbMVWSpc9tE14HH/2ACTwJbqKh3mqu87Wge/6uo
15vY+FgTHv+raNKMuuYTNHn8D7YG24BtwXNU5GvTbtWEcB7/q6hlaXYnc55v
nt9wvZi2HxfI63XswYtU9KluUHAUz886gJdAekfwchXZeH4eqcHr7Z3Aq8DO
KvqgWuYWzvPPLiqyPXpj2Q9eX+QKXt9wfQ+bs0CXnxe6qWhRtVNnvdfi+vFQ
UVWHfx5lPRX2BG9WUddxu7xdb/P4X0UHBmlcHMz9s20qKltRY3JZyeN/8E6w
FOwL9gcHgANVNLmVi/xoBrf/4BBwWEP9ePvvzANqbv9VNCrd8pkzzwdGqmjh
ijHF/aLF+YkGx6poRMCHM1MzheMhnghOhvSpYJmKLi539p7K893yhv1d5tFe
m9t3BcSVEM9UkXu5vWZJC27/VfTRWB3YTYPbf/ARFZmkXd92rJbH/yo69t9d
vQher3JcRS93rFjsy/efHBW1mXf6VgK//3MKnKuitr+XLL7F189ZcB6kv6Ai
F9PXowbyeEatogUlT2Q/fYQvgfNVFNBHp9dYfh56FVygou23v9fb8Ps311VU
2XeAti6vpyxUkfLN3m69yoSLIH0x+LaKJNXyx50XCpeA76koW7tP87oC4VJw
GbhcRdM/Vi1+zutRHqsobLd3i698vitUFDrHNv40vy/wDOIvwK8gfSX4bcP1
cf5YB+MJwlUqevT3hH6Fa3n8D65uuD+1KFxnwesLPoFrIH0tuE5F2v+10v6D
51O/q6jdw71rli4Trof4L7Aks7GbZjbOr5FJyf9uDD/O7we0AGtmUpPQZRGH
v3D7n0mjO1vl1+/j9j+T/Gc0cdkfzO0/WAfcIZNS6+sXZgZw+w/xzmA9cLdM
Smz/yLyFN39vIJOK3toknl0r3ANsAO7d4F0xbYb87++RZNLKj09fJkwV8X6Z
lKQu7rm2HX+fADwQbJxJJSmWuX1aCw+BuAnYFNKPAI/KJCPLK82ijfj7xplk
+cjFrh1/D3xMJp0qmqQnHcrfO86kuT/+/BxpLvz/urrXqJyyMA7gDZlpmRJe
ucYkFKVQTZLkiaRyGUJTTRKF0BAll3G/xBCTuwlRTPY+bklG06RcagwlpCU1
jaUYioppiCUy74f9fPD/+Ft7n/c9nbVPz/vss/dz3AVZVm6fFcrv6yVBPq9K
HjVNVB4hyGDUvDm+sfw+ZEGlR40MJus4/xeUEHjn4vLRnP+DfQVlejpaGPP9
Ohbax4MnCIp+O2/tIs7X/fTjycuxeiev754M9hfUbb336zYDOP8HB0H/YEHD
am0HTXnN+b+gza3E3KW83j1U0J21z8sOTFWeAQ4XVNkkLriGK88CR4DnwvGR
gp6kdLi3MUh5PjhK0G/HR9rm23D8B8cIStn0bN8j3q8Zq78/F2UYZ8Zx/g/9
l4NX6M8v/PKLIV05/xc0btxXOQVN/P53/fgb1VC3pUR5HXiDID+HkDHJ/P7r
OGjfLOiUrr9p8DrlLeB4QembAs478/24XX9/zht29+tQ5QTwTvBu8F5BzpWN
MwdaK+8HJwoq1F1tNInhenP68Z8QuNC2SDlJ0Fo7zfYXnv85ImiJh+veyU7q
eqUIqiv4/tvPxnP+D06F/kI/nk/l20eOUdbAJwVdsaGbGV2UT4PTwOngDEGt
BlsHPR7E8R+cqf/7P/susZb3p2SBswXdL3Y5EzmH4z8cf0mQSa8Mkzp3jv/Q
Pw/8h358rXubuMqX4z/4BrgQXAS+LWjwkCX1haYc/8Elglqb666Z8H7ze+D7
gqLsIxZkrFQuF3T+UJcXhTW8/x/8APwQXCWoX5/QjHiOJ48F5ZTaRA4z4Pxf
UEW10ZSUQZz/CzJPbHQM4/z6GbhWUO8zNaPbe3P+D+0vwQ3Q/5WgqvTDt17O
4Pwf/FaQrsI3dkOYul7vBFkEdX//Ik35vf7+OTHQ0ZXn45sFeUfffjOjSdlA
ftreAmwoqfQnzTMtk+O//PR4I3BrSStW7i7K5f3pxuA2kna4lQ034/XFbSWN
rAxz8+H1ku0lRfQQ1stG8vN/aO8I7gzuKqm6h0XkAd5PbC4pNPDwjja8frqH
pCzb57rXvD/HQlJh9tNDu+5w/g/uDbYC9wXbSHJI6Pch4qpyf0m3wp4/8M9T
tgcPhP4OkjbvKpx6kvezOYGdJfVM3rvsQjdlF0l/F+Z9eb1OjQdXSRtjLySt
SVZ2k2TmG7CWlim7QzuBR4A9Jd34JvZ+Dj8/9ZLk4dBsOu1PXv8vaX0LJ8vp
Hhz/wWPB4yX5xZ3YWlnL8//weX6Som+vDpxdwPFf0jhvu5rgwxz/wQH66/NV
8sFgri8QBO3B+vFWY7qy+Km6n0Ogf6ik2lWjV7sF8/y/pHSfYsfEJTz/L8ko
c2gn95k8/w+OgP5zwZHQfz44SpKv0z/ZUenq/BZJqnD0tqlaoxwjyVwMmDSH
f+/FSnqWViK96ri+m6T9Mxc+mZ2qvBy8AvqvAq+R1PSsp3vpUI7/kl4vNpp6
zpPjv6Rd357NP8v1auPAmyX9njsteut6jv/gePB2SW9Cv+g+pJ7jP7TvlNT9
/cFdnmb8/F/Sh+N3HWwC+Pk/eL+kZZV/Td/Av/8SwQfBSeAj4BS9p15tW5Kq
zucYOBUsJP3bEBZtt5qf/4NPSrp2p2ViHN+vpyUlORn+uoR/n6VJep4zbPAP
dhz/wRngX+H4THCW/vv+s4vbwPNB2ZJeaFnuvfj7c8CXwFfAeZI6lve9YmjL
8V/Snh8bF+Y6c/yH9hvgQklns43aJ/H+oiLwbUnnOnv1c7usXCzJuDw0fjbv
HyoB3wPfB5eDK8APJM04eezcBF7v/RBcJanOozpq2iqe/5cU6J/YqXs7jv+S
plibnkp/wPV/9Of/d2zNz4Lr/4BrwfWSlg5x+aeyVPmlpL3urexj9ik36PsP
t2p53pvr/0B7oyRnj5D8CbnKb+Hz3kH7e0k+OoePRlzvqBnaDbRP3UKjv1zr
F+r4/4OhRgWu2WWBXL/pc40SfOOvl1srG2nU6cnLa48NuP4f2BjcBtxWo4/W
pgMqOii3B3fQaGhlbdkmM+WO4M7Qv6tG8/LbhTWxzTWyyoztmRag6nf1AFtA
f0twb426rWs2t7qobKXR09zAo1o+1yfVqNx6fky0Cef/Gm2caFl9mt0fbA8e
qJFsLp5Q247zf40mlTz0KBrE+T+0O4NdwK5gN41e7QnfveA3db7uGrU1zJuY
eVyZNKqya66/yvUqR2iUdd24YIcL10PVaNu/i8P9uyp7gb3BvuCx4PEamW3b
HSLvcv0/sB94skapDZaL+xxQ9dD8wQEajW0evqJMKAdptKe05dxDOn7fCrSH
aHTlaK7Px+Sbuf8DR8BqWw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxc3XtcTNv7B/BBCCHECUkRQsg9FR5OCCGEEIqkEpKQLkxJN8l0n+7TNNWU
WwghjHvuIYQ4IeQeQgi/+b2++/F69Tn/nNfbs9ae2bP22s/aa6+9M1y6Ztby
xiKRaFBrkej///+//2rGVlyRTW80+Ngp4R+oRc9T/z7vydakhnFtiOuAdclr
zYqm+mPYejQhZf+B0y/ZBuRnl5JR5n1ccA/yv/JqROy2YsFGEO8NNoby/cAm
5HBnUP0iN5XggXRxm/Veax+2KXgweAh4KN2aPuFAo/7sYZReHuN9+9QJwcPB
I8AjaZD9yMffX7LNYHujSOe105vQpmcFm4MtwJZUfEzXM68jezTtHdmjMN2L
PYaelU7TSo9jjwUTrf3TYvvNrNP/sxgsGgfxcdSkn9Zt62SOj6fss7Nf37Ll
OFj0L8TBIitqtOlL21EWZ4S4Fel3WJjx55lg0QSaN/zX5D6NzgnxCXRtucae
88PPC/GJtHX44KbiOxwHiyZBHCyyprNN2hm8juO4NRU2H9Nj5XGOT25oMVg0
BeJg0VQKq7If7q3k+FSI29CVt1tj3jkJ+yO2aVheNA3qT2tYXjSdbuy50OyC
K9efTgfqHo+avPiiEJ9Bk9sWWfhGCRaDRbYNTbYN64ttKX3KzMBFPy/8zyqw
aGZDE1g8k2KNd2r7PC8R6oNFsxqaZlHr0hv9lk28JNQHq2bRsnuj113TuizU
n029ZuXVyroIptkN42KIq2bTsLXOu91cuL5dQ5MdpX16O8hV+4pQH6yyo1NX
Pn3LaSVYNKdhnOY0jIshroK4aG5D01zy/Jj/XC7m+nPp6a4NUdelV4X6c+lL
mrzbs5XXhfrzaPZwx9Gb/7kh1AeLwap59PKOR7w0nevbNzTZN9y+2J6eOzQ2
P2ogWGVPeqMKLi+KuCbUn0+uNU8KSwwFE1g8v2F5FVi0oKFpAQXv2Tj0UDF/
/gJ64hBlPvAuf/8F5PHvhosec0qF+gsbmsBisGohdVeGJrZw4voOtKT+6ufn
n7k+WOxADyZb/go7wfUd6J38Tvqk7TeF+osamsDiRZQ4vaVPqyzBKrBoMX0d
NMa98XiuDxYvpiqnW2Nu63P9xfTNe2b81jP8/ZdQwKsg9zkr+fsvIdMFh/Mb
OfP3B6vAIkcqXX7fxTtcsIFjwzg5Ukv5vVHD7AQ7OpLs9zWrf6x5+2AZWAWu
dFRv8fqQLEP+fCc62N7yzPhm/PlgcmpY3tGJrIuGNpkUwp/vROFvLvzeeJA/
H8qrnOgjtYgsbcef70SxXk3Cl3nw5y9taAMwgR3B4qV085V72v4j/PlgFbgS
LFpGnbJbfzr1XDj+DZbRQZvb9VoruT8sI8vEZJO6kYIdl9Hxy7a3tmwSzgdi
sAysWkb3HYavTDcX6lcuo3MhdWPPjBHiIueGcQNn0vj1YENKBX++Mynnzxhn
myP0R0dnCrX6svrbTe6fzpTfaf7F/buE/ikDq8CVYNFyCvJ+rZR/4c8HE9hx
OX0/X9wzdQufXyAuW06np982mMznLxW4EixyocaSLRXROsL3MXCh9k/Nhj8+
wp/vQjlZGj0cJwtxRxfaGKDfeH8/Pr+CZVBeBa6E8qIVDW2wgtImBSZ/5d+X
VtDLIRlNWl/k/V9ByfVLPIp9uP3BMrBqBfVY+2O/cR63P1jk2tAGrrRFOnXB
qib8+a7Uf9uuAfpGvP9gsSvNWLKlepeGUF4GVoErob7IraEN3Mg6wdxx4k7O
Z24UWHU+eqMl9z+wGCxzI/cBXmfl+fz7gyvBIveGNgCTO7XZc3LPsYW8/+5U
bnHj6cdB/PnulLpu3o30c/z5YBW40p2eaIzatGw79/+VZJ757v6L4/z5YAI7
rqRth0IzXmTx77+S+h3zcDkv4eMPrFpJwWmxEwO78v5DfZEHhSTvWnr7AX++
B/1uMqSdsgWf/8COHtRrgavl2G68/2AZWAX1Kz1oiE27i2uduP+tamgDMIEd
weJVVKW4FBIRxfu/iiYE9BuousX7v4p2m433avSCPx8sWt3QBqspqWpZ4aBe
vP9gR7B4Nc0em99WVs+fD1ZB+UqwaE3D8gZr6PeZIZvoA7c/2BEsBsvAqjVU
Y5wocj3A7b+G8t9c2vJnEn++J4WfmPmmcZJgbbCBJ/lHKHvcXyvY1JPCBpVt
/nKSfx9POhZcdkZ3uDA+sfWk5meeyBPjBTuCPcFiT2o1J/G6f5JgCVgG5Qs8
aXh6fvKQeTweApeCKz1p5uWvE0I73PqfazxJ+13ukhVNBYvWNrT22oblDcCm
a+lVT/P+JS0FE9S3XUs3wrd1aPGY9x/suZZWhZz+MeUV7z/EJRCXQbwA4ipw
6VradOuc0p/LV4Jr1tLBvtofX0zk/fdqGNcGG3jR4PdxzS7vFWwKJi/Sf7Gv
+4lV3P5eVPloi1+lM++/F+m9bH50R2/ef4iLwRLYnsyL/vt6rGXuDt5/L9Ie
G7XjyzHefy8qrx2yrKydsD+lXtTo4BGNd1aCKyFeA/VF6xrGtdc1jBtA3HQd
uYZVfHki5/1fR57Phi4/7sX7D3YEe66jVy86npMouP+CJWAZuGAdVXm2HbFl
rvB9VODSdbQkVLvDvNW8/+Aa9f4VJkYZbeD2925obW9KtZk3qlc+H//eFDB0
x+Mr9bz/YPKmrCn/djbcz8c/2BG25+lNXmYVPXcFCBaDJd60xaXVzAuOgmXg
Am9aIr3mUl7B7Q8uBVd60zi7lH3RBrz/YNF6ejv4ZuPB7rz/62nmrVv3hsfw
/q8nrZYen78d4P0HE9h2Pe1Z72MxttVtYf/Bnutpx0a9wePZ4vW0aeRc61Ej
BEugvAxcAOVV66nZ08lHjs8VXAquBNesp2GbUtYlhPL+b2hobbAB2BRMYFuw
4wZKrq4bkpnO7Q8WgyUbKOb0vPD8F9z/N9BB53U1/17l/g9WQfnSDTR3qpza
nOT2B9dsoLjqOw/ELXj/N9KkQWYf3ip4/8EGGynQcdWna+N4/8EEtgU7gj03
0sZHfkMmDOD930iOvxef9ft7/gfLwAVQXwUu3UhjVm9ROtzn/d9IXw8Prb5/
gfcfLPJpaG0fMjzoPZgGCceLgQ+d+WO/LniiYFMf0t8b2D/5G5//IG7rQ3mj
x39vGcfHP9gTLFZv7/TOhNaN+fj3oWaGATaP+nH/Bxf40LVjX5xk1dz+PtTn
2b6ds09z+/vQZJvNb9ds4P0H1/jQi9SWHRvP5v3f1NDam8juxvS+mXP5/A82
3USfJMMf/gzk/d9EFva3lBoe3P6bKMgwt6bpOm7/TXRx7njrJbHc/mAxWAKW
baID/RonHp8hjLcKwCpwKbhyEy0cuMB3xV7BNZvoT2nQ6vaavP++5OVlUfxn
KO+/L1Xenzt/2B/ef19KqygVz1vPx78vfQucljRpER//YFtfMnMZNuEY9zdH
Xwr3e/bdw573HyyG8hKwzJce2e3sPCSFj3+wClzqS8se0XbpNm5/X1rw1OX3
20Xc/mCRX0Nr+1Hcu5h3mpy/DCBuCiawrR+9i/g6sckdbn8/0rySsH7EI87/
YLEfZZDm1L4WvP9gmR/d+aLfdxvPRxZAfRW41I9cLCb/nLeY878fzdWXDFiZ
xvsPFvk3LK8NNvCnqzkt3bf15PYHk3/D7dn6080tw/+pi+D2B3uCxf60YMiT
yOVnef/BMn+a0cF/QncuX+BPUbN8W+3M5P0Hl/rTi+JBv5Ozuf0hXgMWBTTc
vnYAndc/fm6FmI9/sGlAw+0TxG0DqO7ZrUUXPHn/Ayi2teXUuBW8/2BxAMlL
nyUNOMX7D5aBCwKodVlmsPdd3v8A6rlXNLawC5//A+imUimq7cPtH0Cm345U
Go3l8Q9YtLmhtcEGm2n/O1nbmg+8/5upf9P5bcQuvP+bqfPlwpcWjXj/wY5g
T6gvBkvAss2U++7S/kJ2wWZqd2nLFMNw3v/N1Hhvcqt203n/N1NwbcSarcN5
/LOZ7gwo+FhrweMfsGhLQ2uDDbZQ4yU94xrzfL7pFvoSSBYLRvD+g2230PrG
xpq+3Xj/Ie4J2xNvoYz0zWPzz/H+b6FSzQdN0v+Of8AFYBW4FFy5hT4UuX58
nMHH/xbSvdlv58S//V/c0JrihuW1wbpi+hUsX/pyP/cPMT2R9OzSifOjMdgU
yptBnMSk+tj2a9hkwdZiSheZ9HHi60VbMR0Nv9RssbFw/rMHO4JdwZ5iyrjS
ZoFPhGAfMf2p3rK3XRf+/cFhYAnUl4qp4/UgpZjzqwysFNOI5NMdzozh6zVw
EZRXiWnpgbVha90Fl4jVIyp3P4dAzudiUqzd8qfrUuH7lKu/j3WuuVkOty+4
Glwjpp9XUm1XeQuuA4sCG1ozkJ69Cn70nvubdiA9fDbx1ImW3P6B1H3kgtLp
e3h+CGwM5U3BZoGkOa5X7Jye3P4Qt4a4bSDll7y638tcsH0gXZzRyb1iOvcv
sGsg+Xof6XgomPsb2CeQlhi8//D0P27/QKK2AVs+7OL2h/ISsBQsC6Rpt/rG
BCQIVsL2CiBepP699QI3txrE/RfiJRAvDaRLDz/+ceX54nJwJbg6kObV7c/v
GMfjPbU1wk986sXtD3FRUENrgrWDKGlWl7P3w4XjVzeI6h8lvOzZiOcrwcZg
U7BZENWpuj88Y8btD7YG24Ltg6jrq4eTun7l/h9En9c9ujusiPs/2BPsAxYH
UYdeJ6cN6MjtD5aApUH0ouNq0TU+v8sgrgyiSy83revB44OCIPoxqNihfLfw
eUVgFbgEXAouD6LOQzQbreT510qIV0O8Jogqm4lculcLrgui2Lp5S8NquP23
kn9dbv+YMdz/tzaMa0NcdyuZDfIzKLLj8z/YeCtNOdrrvyKefzXdSpGRfgfH
5nH/hzhtpRmJs2UlnB+swbZg+60UrjfR1KU79/+t9G1JZk1/vh/sCvbcSqeS
aWFeb27/rdT4x9q6Sa94/g0cBuUlYOlWMnnsNWV1NJ//wUr19m7OjBiRwON1
cNFW+nfNsc8VfL9aBS7ZSteOT3nU6Ru3P7gcyleCq6F8DbgOLAqmoF65ixfK
uP+DtYPpyoBu/Uz3CdYFG4CNwaZgMzCBrYNp2vdV/90/JNyPtAXbgx2DyVcx
d0jQYW5/sCfYJ5jCR1h+aZXK/T+YvrgemtSe11OEBZPYdInxmofc/mApWAZW
BtMTz+sdui7j/g8uAquCqcu9U7mH+P5MCbgUXB5MTu9/tJ+exvdzgum/8m2b
W0cLv0c1uCaYvo+8fe2yHrc/WLStoTW3kf+Vxoe1l3P7g3XBBtsosv+Vl9s6
cfuDTbfRs6v7Wn6+zO0PJihvDXFbsP02ut70z5NW9/j8D3FXiHtuo7MnRNrt
fnL7g8XgMLBkG+2TPesuPsrtv41utdSbO7cpn/+30d2DA5uf5vOvchslnB2y
OcuN+/82SrrTJ2lnf+7/YBW4ZBvFaeg/6LeK+/82Gv1kYUw1j2fLwZVQvhpc
s40OH953ufoQtz9YFNLQmmBtsG4IuewrGU3+3P4h9HnSmE7unE+NIW4aQsYT
24suDeb2BxPYOoS63Sjv3suM2z+EmphZdOvwL7c/2DGEBgxuXpo5mdsf7BlC
o9+O8VvN7ecTQvLg0b2e2fD4D+Jh6u0fd5kTwec/CVgaQtGXvwxN4fIysBJc
EEJfOpsr4vj3KwKroHwJxEvB5eDKEHpiMt5mhy+3P7gmhLb2+S1SErd/CHV3
91TUD+X7/6ENrQnWDiWD2nhvWT9u/9CG2zMAG4fS2dM2e2bwejnTUFrmtmGz
dSm3P5jA1mBbsD3YMZRGZ1en5Njz+B/sCfYBi0PpwFeNEcGbePwHloTSug+t
73aew+M/sCyU+hqtje//jts/lJpO1KvsJeb2DyXnTXVVlRu5/UPpafVtp6MG
3P7gEnBpKI00mmn9eBGf/8GV4Gr17+P9Mc//Are/+vMtBsn1+XxYBxaFUePS
nuO+8PoHTbB2WMPyumCDMEo9f37OJZ4/Ng6j2JfHRh3k+TTTMOoQUrXM5AqP
/yBOELcG24LtwY5hVOI6OHiOljD/4xpGee4vrf9pw+0fRl/0zHXz3nD/D6Oq
lq0t9h7n8z84LIxyHCZEhkRx/w8jl/9cKvz/Xv+DZVBeGUb+P5MOBPB4uwBc
BFaBS8LIvI3tpa98f6UUXB5GDu3tMr0ruf+Dq8E14LowmlfmOuwzzz+Kwun6
8Puvvefz+B+sHd6wvC7EDcDGYNNwqj1y4fOIDO7/YAqngyNTnhbe5v4PtgXb
h1Mb48T7Heu5/4Ndw+nCTZ8u1X/nW8E+4eRn+DG0B69XEUP9MIhLwNJwuvcr
PPDn3/FfOFkoGh2ZyutjlOE02c9ZdZLX8xSAi8AqcAlsrzScjljNenSO5w/L
wZXganBNOKXlfuov/sPtDxZF0Jueiwf+4fXDmmDtCLp7KKqJ3j/c/yFuAHHj
CFpbtVn3cyKf/8FmETR7ovTZRu6fFEFbji7dKe3A/T+CmmyrvZzM14e2EVR/
6OXYq47c/yOo08RLbbat4/4PdgV7RpCnVVFNNp/PfcBiKB8WQXvHPil05Pk2
SQQdCi/sOIrv70ghLgMrwQURJAupM3A8yuN/sApcAi6NoDPZq9ZVOHD7gyvB
1RHU1dJ02GVbbn9wHZQXbadJ7ks0Gwdw/wdrb6fja9KOR/P9KF2wAZQ3BptC
ebPtNKLZTf26Htz+22nuzvbX//k7/we2BduDHcGuYM/t9CBs8JvDFXz+305u
K7uvWtuK2x8ctp3+2TvQ/wrPL0mgvhQsAyu3k+eCTf36x/D5X73/O/dtMC/g
/g9WgUu20+38PtHNF3H/B5eDK8HV4Bpw3Xaaf8jlxzx77v+R1Cq/+sOVIdz/
I+lU54JzW3k9qDZYF2wQSd1itplLNvD8H9gUbBZJV64lR5ao+PwPto4ka+0N
F/5E8vkfbA92jKQJNi12nebrYVeIe4J9Imllxe7jeimc/yNJ9mCXWfMm3P5g
CVgKloGV6t/H7+lKzXhu/0hy0Fhxb8lMzv+R9NlCh57e5/aPpLAUc9uXbbj9
waWR9PDJieuN2/P4D1wJrgbXRNLlN0tGjw0SXAcW7aA9d85af3zM43+w9g6a
epUK6vj5EF2wwQ4a8cBkQCOe/zLeQXqTlo1WcX43BZtBeQJb76CR6/wqv7hy
+++grm7+Jxc4cvvvIO+HzbYWXuX5H7Ar2HMHjf/47mAgr9/2AYt3kN3TC+NH
v+D5P7BkB+1/2GTc4+7c/8GyHTS2LtNimw33f3DBDvpc+tH98Enu/zuot82j
CVP7cvuDS9S/r9vxifkbhfXNpRAvh3gluBpcs4NeD3b87Svi9geLohpaM4rC
7l0Yu22GUF8b4rpR1NhF8XAp2wBsDDYFm0XRyjcLl90fxeubo+jEGJMjfTYL
toa4LcTto2hSx1anZl/i/h9Fg0+7ed79wf0/ivYXNHX3uc79H+wTRauX7Eld
zfM3YnBYFK11+Hovi8tLwFKwDKyMIrtp4aet/Lj9wUVgVRT1bzXi/p1CHv+D
S6PI9fAQ1fIPfP6HeCXEq8E1UfR20tgHX/l6tS6KVo3Sm2TxlfP/zobWBGuD
dXfSdueL95Zs4fy/kyYVSKzdebxpvJN2Pp3W120X93+wGZjA1mBbsP1Ocjv2
+256O87/YFew5046pr/6Qvrf9geLd5J+VxoxxZPH/2AJWAqWgZU76fWVRJ93
Rjz+20lb+857bTCEx39g1U6iZn43+kXz+A9cupO8rPZvWcj3c8t30pP+va+Y
HuDxH7gaXAOug+2JJLTCZ/qpyzx/qQHWlNBgm7NOQ3n+QgusDeV1IK4roRKz
HWdX8vyInoQyCrcHDuLnGw0ktCo/0+z1dyFuBHFjsAnYFDwMbCahZ/kH62aO
FGwpoe7Gac9qPvP4E2wloWvPxZbhvJ7fGmwDtpXQmKRDQ47z+kk7sL2EvAwW
d3nrIdhBQmZ7Ny7cM5OPX7Az2FVCXzs2pvbNBXtIqNeAd66uO/j8BvaW0FD9
m5ZGd/h6R0LuA19vS+4qfF9/sFjtRxdMd08SHKz+/MO1x4bNEBwGjgRLoH6c
hHoq3bJHcHtKJWRUsmLoa57fSAXLwAqorwTvBhdIqP0k03tGfD1bqG7P3oaf
l/lzf4N4MVglIadfn+zvGQjlz4FLwFfBpeAycLmEOl1yej/rH8EV4Er17zln
RC+pm+AqcDWUfwuukdDEtImDX/L5t1ZCi3o1KXHj5yXqIF4vIc2j2klnSnj8
H93QGtFkc9duo6or5wOwFlgbrBNNM/J0630NOV+A9cAGYKNoqhG9fV3D63WN
oykn5dBXc77/bAI2jaY3z97cce3H/R/iZrA9y2h6EnfnrjU/30FgK7A1bN8m
msb+/JG5vDVfn4LtwPbRtLdz1QJ9vr5xADtCeWeIu0ZTmwC7M0mjuf+DPdX1
e5gMNHrC/R/sE01j7K941PH8rD/ExeDgaLpfvXvC1ZucD6Pp2qB11+S8niAS
LIHycRCXQjw1moK7e01/z+sBZGAFWKlujx+LxR/3CN4dTQecdeZeGMv5Vf17
xBrv01EJLoR4UTS5fnZIdR0ouBjiKoifA5dEk2HSGqdmPP9zNZr2Nd6yZgmv
dyqFeFk01W/98uf9Zu7/4ApwZTTF/jz8253Xj1ZFk0X3eUYa/LxbdTT56c+3
8ePnjd6Ca8C1sL06cH00fTls+jF0M/f/GHpwWEEn+H6bBlgTrAXWjqEd8wvN
vCw4/4N1Y6jN0bhr93k9mx7YAGwE9Y1j6FKa7VHi+/UmYFPwMLBZDK1YPNRt
/WDu/2CKoUPtTp3rxb+fFdgabBNDLs5jp1r7cv+PoZfipZ2+iLj/x1D1hF+D
7At4vBpDkY2tW03g48UB7Ah2jqGHiUbb6T73f7BHDDV3cB2wic8XnmDvGLqZ
PuHAKyvO/xD3j6EzmxaNOhfJ1z8xFNj9+stzowQHg8Ni6N6wzqEDQ7n/gyXg
uBgKrVl2LIrvB0vBqWBZDHkenVrSge8nKWKo3YLRzeb9zf/g3eCCGHqzx2hL
Wz5/FYKLYqiLT88pA3S4/8dQ3fy2B8z5+VJVDEXkJuRcH8b9H1wCvgoujaFx
emNH2/L97jJwObhC/X2MpSdlm/j6DVwFro4h7ytnosNvCH4bQyM7jfocyvOT
NerjzVa1zpzXV9eC62Jo0WBZUgo/P1MPFsU2tEYsPQr9nWWhJ1gTrBVLyoQ7
mbpvOP/H0sgLMzcM5PlzHbBuLE39r2vTljwe1YO4AdgoloI/pTot5/O9MdQ3
AZuCh8XS9LxNr1fy87lmYMtYunJcMtLKj59fAFvF0mYXw+vX+PkDa7BNLK1s
vWncM54/t42ln0/ebp/J96fsIG4PdoilJRcnj164kMf/YGewayw9NNGKu8zP
93qAPcHeYB+wfyy5HdVyblLL/R8cHEvZgxM3feLvGxZL7sluu/rweDNSbZ0i
jTKef5CA42Lpx5uxdzf9XS8FToXtycCKWPqQ0SRoDedfZSz1aH1fOoLfl7M7
lvplJh0s5ecTCiBeCPWLYinaLW9FPZ8viqG8KpZmygJ67eL19+fAJeCr4FJw
GbgcXBFLl7OOxHz4xPk/lp7f0D938wjnf3B1LJWMNDmU+5zzP7gGtlcLroul
xbvqVtfXcf6PJdf8i56pfP0nimsY1wBrgrXiaIjbxtdaRdz/wTpg3TiK7VBw
tyffD9IDG0B5ozjSNS09p3mL+38cVR5MKUrg5xlM4qh5v5nrblRy/wcPA5uB
LeMo7EzTmqAFnP/j6OL90urFPB9jFUevnd03vuTj1RpsA+VtwXawfXuIO8TR
mXS30KQv3P/jaLV8YtgqTaE9nMGucfT+QdUB/ULu/3G0IL7Nsl43uP+DveNo
md3dQ7lzhPo+EPcHi6F8MDgMHBlHIxcNzanj86Ukjszvh0fpcnvGxZH1nLG+
enz9KgWngmVgRRzdejrz9WTun0rwbnBBHFUVO9rc5uejCsFF4GKwKo567M/1
mMnjuXPgkjhaPn6ggzvv31X18XnQa/baadz/46idgWlb1Tju/+ByqF8BrgRX
xdG0uJXb7v59niOOknqNizxfw/0/jp6cbDEg/x9+ngtcG0dvdr4vi+T+XQeu
h/Ki+Ibb14hvWF4znu6n3Ys805bzP1gbrAPWBeuBDeKpae220IGtBRuBjePp
oPvM9k/5+SOTeIrLm3FKl9ebm4KHxVOnGWPbzuf1V2bx9GVq/yfVPP6zBBPY
Kp4uDbm3bHInzv/x1K42ofQ9zx/YgG3jqeVD7fRHpdz/wfZgB7BjPMn0p+/4
w88zO8dTrotuo0V/1zPEkzIuM2D7Wu7/YM94cryw68RQfp7KG+wTT/ovbube
nsL9P54kv969NuZ8K46nVqtuPHTl+wXB8TS0XcK6+1V8/Q+OBEugfhxYGk8B
LR06iPn+QypYBlaAlfGkq9G+6gCP13erjw+DlLx5nB8LwIXx9PX6EFnk3/G/
+nje1sRRzOsli6G8CnwOXBJPzXs4aoc+FY7Hq+BScBm4PJ7mJdW4reP3f1TE
U79paYZH+PqsMp7mK9qv2KDH/R9cDX4L26uJpyYFbQZukHD+B9fF05rjSQMe
8fMo9fGUOPrp+WFPBYsSaM2GPuN7veT+n9CwvGYCpbc+NkCrivN/AqXG+D3c
ys//aoN1EmiZ1p8J4/h41gXrwfYMwEYJdDNua83Q45z/EyhPXHbJZB/3f7Ap
eFgCbSkva3SZ70+ZgS0T6NjlA2ZX+XlxSiC6uu5pc16vYwW2BtskkCjU+fMt
Xi9mm0BWM7b/iH3J43+wPdgB7Ajbc04gG3LtZsXz064J5Lcqa7ZeX+7/CTTz
crDFAn7/gGcCFQ0Y03Ea37/wTqCJNGHEZb5f56P+PTc3u7yF28c/gTqc/tQj
bQrP/4ODoX4YbD8ygTLfBN/J4+fxJOC4BJIfSq7zyeH+n0CLfJsaGvD7H1PB
sgRqZb7f/b+xfP2fQNoLFk/bOJyv/8G7wQXgwgRanrLy9TN+Hq5I/X3+LOn0
MI/7fwJ5rO7zpTPPP6gS6N2mF2t/cXucS6DWH0WvP/F6oBLwVXApuCyBIizP
uxry83vl4ApwZQI9qbaeY8fX81UQrwa/hfI14NoEuhby/uclzg91CXRWp6Lr
Db6fWA8WJTa0RiKtmDne78Aa7v+J9KOi3aaJUdz/Ia6dSA9bFWis4fV6OmDd
RHLymxhSw+u/9BJpVDfbL62yef4PbAQ2BpskUv7Hhz8X8/nCNJHMPU5p1l7j
/g82A1uCKZEuJNU+U8zg/g+2TqQFiV3jV1hz/wfbJtKJL2fGfQng/g9xe7BD
Im3bb5GVxJ/vmEhl/t0Nl93j/A92BXuAPROpr1uINLQrz/8n0vAWL92q+ffy
Afsn0smEEcWHdXj+H+LB4LBEUu3sFBB2gPN/Ip2J6fxj+FXO/4m02KpP+mR2
HFgKToX6MrACrEykuWtLW3Tj5zV2J9KcDJPZf/K5/0O8EFyUSCM1J46q4PN9
McRVsL1zidTp0fOSuUsFl4CvgkvBZeDyRLJ8UeyUWyesT6kAVyaS7ZtHOjt5
fFIFrk6kUyUjx2Uu4/k/cE0i7Wr7cXx9D2F7tRCvSyTdwKChcTyfWA9xkbSh
NaRU+/3mlo5sTWnD+lpSuttnUFgqPy+nDXEdKfXv6JS5dz3P/0vJP0vj7Wue
v9YDG4CNoL6xlHYbBdzYw+vBTCBuKqVf/24WbRrJ8/9Smm+1rHNEMa83kpJ3
0OSsdbz+0FJKNjZu9e3q+P2uYCspFXWx6dpqn7D+yRpsA7YF20kp8ML70id/
BNtL6Vi7HkPThwmf7yCljse66R7j58Mcwc5Q31VKHt+HjDvP77f0AHtKqa5I
dtJ3h2BvKY1smTR2SJ3w/lcfsD9YDA4Gh4EjpfR7apTdy7XC95NIaWCqYvSR
O4LjpHS8x7G5Nr7C95GCU8EysEJKTonp4zMihO0ppeR5v+Bd83ShfXZLacKj
JTW+/QQXSKllUCvphZnC9ysEF4GLpWTsJR3pzO9XV0lpYnn8vt4fhPe/nwOX
gK9KaYCkta1pB6F+KbhMSh8ntd4Wu1dwuZTCPzcZ+a+h8PkVUhqfub/7SjPB
leAqKW1saTW7V5jgavBbKF8jpV4TWombVAufVyult9Gj3owqElwnpUOmbt3+
CxC+f72Utpo+CIlI5/ffJzW0RlLD+poQ10pquD1tiOuAdZPo0faU+7n9BOsl
kXm/bjtXHRLe528ANoLyxmATKG+aRNfH/5v6xkL4+wHDwGZJlPR854TnK4X6
lklU7tio+6NH/PcOwFZJtDZRt2vuDaG8dRJtnNd28Jnlwu9hk0StPqz5YB4h
2BZsB7YHOyRRoMZ/QZoKYfuOSXTAfkj3dDPBzkl0vHvsB6f+gl2TqM1C0aXn
c4X99QB7gr3Vv89J3+e93gv77wP2B4uTyLNn34BdtwUHg8PAkWAJOC6JNN6t
WpXkJHwfKTgVLAMrkujlhVZNbo4RrATvBhck0by3znWrvgifXwguSqItr7aa
pHwWXJxEOU79wr8U8t+jgPg5iJeAr4JLoX4ZxMuT6A+tc3q6UnBFEk3tYnck
8JdwvFUm0Z0jxbtvHxRcBa5Oopv7Ds1bESj4LbgGXJtE8c/7HW12SHBdEn13
7dv8V3fh8+uT6HFf9w76ecLvJ0qmJ1mfAspjuf+DNcFaYO1k2qor7Wphzf0/
mfT9cn8v/ShsXxesl0x7swo+zXrA/R9slEw9h0z/MJ3/HohxMqXGrM91zBfi
JlDeNJky/1u4zHmX8PnDwGZgy2TKMb2U2/y1UJ/AVmDrZHJ7+27uoqmCbcC2
ydS5z6Mtt9sItkumob2LrZ/w8WAPdoDyjsnUbI61YyPennMySXa8VV4uF+wK
cY9kunjey2DHTu7/YG+o7wP2T6a6pa5OKXH891GSafTWDYH9Z/H4P5mGPRrf
PPfv/B84EixJpoJBZaGvH/P4H7YnBacm06B9191+8fPpMrACrEymKw7qK0he
z7EbXJBM14/2ft+D128XJtPHP/LyLXx/oAhcDOVV4HPJVJbX0+Ad368vAV9N
pthZryZ24uerS8FlUL4cXAGuTCb5sWM/DPjvQVSBq5Op+HD/EjE/z/QWXJNM
KwIW6k/j9zXVJlPwgk07W/P7vOrA9WBRCs2YZqjM2snX/2DNFGoSeDxsCN+f
0UqhZU697CJ5vlw7hb7eJ8OD/HypTgplu15Z5XeLx//q8nGHV6r4/SR6YAOw
UQrFv/umMUbK43+Im6SQZOCMvV6/ePyfQsHytuf8+f1Vw8BmUN4STGCrFPIv
d2lfz8/vWINtwLYppNkm8qER/552KfSq7wGTAJ4/tk+hZxoy4843+fof7Ah2
Brum0PC5j6e04PuhHrB9T4h7p1D4+y+2vfnvxfiA/VNoWkjgrq98/0KcQi5D
8jdc4PXRweAwKB8JcQk4DixNocFtFq71b8/z/ylk2K679IEX93+wAqwE706h
5V38g+7e4f6fQkNvhLedXs7zf+CiFGq/bc9W3ZXc/yGugvg5cAn4agqtm/bS
cyF/fim4LIX8DPsf7srrv8ohXgGuTKHHmtZ/9sby/D/Ur06h5s/bd3Ku4+v/
FLp6IfvITJ6PrQHXqvtjqXnbJ/y++jp1f0wY9r4N32+oB4tSqeXPDlaP+H1l
GmDNVEqZvWDfc14vpgXWBuuAdcF6qRSQ9e3z/Kk8/w9xI4gbg03Apql0OjfI
o3Ar93+wGdgyleprdcy/8/o2SqWPE06f/vu+PSsob51KTwuy8jfx+dUGbJtK
Q0/EeNXyfIQdxO1TSek6KncKP3/hkEqxMdOmpPD6DEeIO4NdU6nXuMwFQXw+
9gB7ptIq21mqb3w/wDuVPu1/3/MH37/2SaWc4m5PL/B8lz9YDA4Gh4EjUyl0
UlezWl7fIAHHpZJ16VPNPXz/QApOTaWiOoN5C/6+3xesSCW3D8G33/LfJ1CC
d0P5AvXnn09KsebfoxBclEozTn39ZxX/fYFiiKvA51JpwMjWg//h/S0BX00l
Q9Wd5048/1qq/n4v2qzN5Pu5ZeByqF8Brkyl0qSoOf1CuP+Dq8FvwTXgWnBd
KtU+aDL8Gt9PrU+l4EPnvnTm922K0hpaA6wJ1gJrp5FlXWn6izPc/8G6YL00
mrb6nkHE3/dLp9GUgH7ndYz5/j+UN04j76w9pQ/duf+n0YbQlU128e9nqq4f
r+88+TXP/6XRHY8bc1rz+MoMbAmmNJobpYzutljYnhXYGmwDtk2jWJuwsa83
cv4H26fRrw56neq38P2/NNLz7tTZif/+imMarYmb0T18PM//gV3BHmDPNHqx
413Yvz48/59GK37P8wu/yPP/aWQvun4ihd/n559GE7rNNpmrxf0fHJxGvbY2
kszi83EYxCPTaLtO429z+P21EnAcWApOTaPqg35pO3m9iwysgPJKiO9OI8+W
c6yM+f09BeDCNOo+v0neq87c/9PI60rxYlO+XikGq8Dn0ujxohnvvXg9ZwnE
r6ZR3w6WGoY8vi1No5eujcQHGnP/B5eDK8CVaeQ3Z/X0JsT9H1wNfptG7zcs
aqRfy/P/4No0+jRoembF3/f9pNGxk1bzzvH7kurBonSK6Tg/LYufp9UAa6Y3
LK+VTre7D9Z7O4n7P1gHrAvWAxukk/bQ4jGv+H2/RmBjsAnYFDwMbJZOZwbd
3lHH4wVLMIGt0qnNkvuzR5hw/wfbgG3TqUfnmxHn+P3sdum05UWxYthpwfZg
B7Aj1HdOp2HWhzWy+PkeV7BHOknsPcKzeT2gZzpFrJy5xv8j53+wD5T3h7gY
HJxOFtuS8ipH8/o/cGQ6zV1/JXcbr0+WgOPSaffJXWmjeP2WFOKpYBlYkU57
33WR7+PxjxK8G1wALgQXpdO7OTrX/+O/D1EMcVU6fbi8V3KD11udg/Il4Kvp
VGiakf99N+f/dHorHnnoJa+HL4N4OcQr0mlmdpdjWbzevhLiVVC/Gsq/TadZ
Vb63TvP7a2rUx+/MXl0aE6//A9elU9qeW+fiDnL+Tyez8b5Jdry+RpRB67bH
u+bz86oaGQ3jmmCtjIbb086gNS+nxP59vkwng2a9t3nQhNd/6YL1wAYZtOrM
7a+2XN8ItmecQUsujWztwet3TMCm4GGwPTOwZQZdGSne2JbbmzKoc0TMvu38
9z+swNYZ9Fpl4X9hNfd/qG+bQX1dvml25efV7DLoTGK7Z3/X09uDHcCOGfTY
9ftTCb+/3zmDft57uKh2IK//zSA6QTl2SwV7QH1P9fc7tsipLf89A+8Mmhrq
uTab5wd8oL4/xMUZVJI8s2Akz+8EZ1DbETmld504/4MjM2jT912GE0y5/2fQ
/OvP//vM62fiwFIonwqWqcuX1psP5PGcIoPKlv4X6sbnD2UGre9WY+rZicf/
4AJwIdQvyiCXktNri3k8UQxWgc+BSzLo7sxeRx9f5P4PLgWXZVBV802LzvDf
SyhXH0+jro/1+c79H+KV6t+j1/bJrfh53SpwdQYd8XK6cpjfN/42g2bHGuba
//17PhCvVX8fw8CyZB5/1mVQ5cHO1dt4/Uk9xEWyhm4soxOnR8aE8PlDQ0am
dif9DHsLbgbWBLeE+lrgNlBeW0YRjx//2MTHS3uwDriTjLLNzacN4b//oAvu
AtaT0Yb/arrG8u+pDzZQf59gswAJ/323HjL6EvZ4VZAZX4+Ae0N5YxlNX3Pe
4Oxywf1kpFwlmVGZKNgEPFBGrb4Fxsv4/G0KHiIjn2PLbffx8w7DwCPAZjI6
M3qxmQuvZzcHW4LHyKjMcdeFCbx+lGQUu/qjywmeDxkPcSvwRLC1jBZaLH24
Ui7s3xSwDXg62FZGy249Hr6E88kssJ2MxjYzaN6b15/NldGzza3H7eDn6+1l
FN6qo8tDfr5xAdgBvFhGs8enuUsP8/kX4ktldFp+ML1eyeMxGX2Wndyuxdej
LmBXsLuMXLYvsNTm9eMeMmoRUNQqlq+/VoM9obwX2FtGFV4xe2x5fm8D2Afs
C/aXkXt3D9OIUcLvvRniYhltjKm9s5X//kAQOBgcAg6T0VTXvlayn4IjIB4p
o7RWWTlv+P1YUWAJOEZGj17uPdOE35ceB/EEGdVlUX6Tv+/jBSfLqNGOiaWD
jDnfyEh++8S/p/n8lw6WyWjTPsOuGTxfJwcrwDlQXykjme3diHJ+P0C+jIa3
MXy1upjnq2XUOeX5nQ28/nSvjG5uWxtVupPnryF+QEbTni6Ub9nA89kQPwzx
IvAxGe31b3R2P79vrFhGr5u+uTzaQlhfcxKsAp8Bn5ORKuySv+s04fi5IKMD
51bsuXddcImMbK8Erp+pFP5ezmUZaT6eub9yv+CrMoorvP+89W3B19XnZ+v9
tbJ3/PcKwbfAZeC7akcevx31R3A5+IGMFGNb3htcKbhCRvqNw6aYXRf8GOKV
UP+pOj9QWtP+7cqEfAx+ISOPVwuPF/UXXK3OD63ntDu5RPBr8Fvwe6hfI6Pt
co13L54In/8JXKvOn107jjPnv6/3FVwH/iGjGVXH5ucuFrZfL6PE8/7tb4cL
/g0WZTYs3xisAW6WSRtH/Pyn6TDBmpl0UGfcU+23wue3zKT+M35O134qWAvc
Bsprg9tn0qTsbbmZJYJ1wJ3AupnUPvBV4MViwV3AemB9sEEmjVoWfrHsq+Ae
mRS/cnuPtH+F/TOCeG+IG0O8H9gEPDCTgtcWfXvQUahvmklbWi+QxbURPATi
wyA+AmyWSSkJyQYJV4Xtm2fSrgubatZ8EmwJ8TFgAo/PpEY97lnNuyDYCjwR
tm+dSROO9WuX+FvwlEx6YOpx9BP3JxuIT8+kkhl+t3+F8d+LhPKzwHZq97Lv
oUgQPBfq24MXgB2g/mKwI3hpJmWMDJwn2iXYWX28tx8XFq8S7AJ2zaRF23dI
198X7A5xD4ivzqQ2X96PDH/Ifw8zk/ocXRrS4j/BXplked1i+qoPgr0zybOz
+dSpfYT23gBxH7Av2D+TfpuN8s+1F+pvzqRtbs/anjcQLAYHgYPBIeAwcAQ4
MpP2hQwaLebzZ1QmPR+3c+WEK/z3PsEx4LhMeqmrtbQH54+ETFo/PfC/ReOE
7Ukhngzx1EwKaCZZ5WQjOB3iMojLM8n25aUbC2YIVoBzwEqonw/x3eC9mTR3
0PpyPc4HBZn046ZD59WWgg9k0mP3hBHfBwkuhPjhTJr3I+dT7WTBReBjmXTq
n/jw2rWCiyF+EuIq8BnwuUyy8W0ZMo6/74VMaj3gkdPkSYJLMqlec7ZNBv+e
l8FXM+nk25m/fXQFXweXZlKHxf+t26cj+Ba4LJOMz2ycsXiD4Lvg8kzKf1GZ
39FO8AOIV0D8McQrwU+hfFUmSU0LDLWnc/7PJNcP3xdXBXH+B7/OpOoWCwry
4jj/q3//3LdDYh9x/s8kne53Bsf/5vwP/gSuBX/NJGcdVYtptYLrMunfMxfN
Xz4X/COT1kRbfy/bxvk/kwyN9rgldub8rz4ft9wX4PuT//6hvKEbgzXkDbfX
DKwpp5C2dyaNiBHcEqwFbiOn2Vnj99u0FqwNbi+nS/1mtLbm8Y8OuJOcXoxv
38fxDud/OXXNn2KYFsX5H+J6UF8fbADle4CN5NT/pjJLcpnzv5zyL42K+M7n
V2NwPyhvAvGBcqqfEeTXV4Pzv5ySO6a+yu3H+V/9e206PnrCVM7/4BFyEk9J
vtdnGud/ORk+bFEu3iXYHOKW4DFgAo8HW8lp4cLrbzOHCp4ItpZTTruwy7eX
Cp4CtoHy0yFuK6cdfbtduLFI8CyI20F8LtgevADsIKessJ0/NA0FLwY7ymlm
Rmr+Km6PpRB3ltPHf8sOvvrI+V9ORke+7nDn8aMrxN3lZCdf5tKZ87UHxFfL
qaOLdlYm50dPsBfYG7xBTocTPBM0uwj2Ubf/2SdPGnH/9oW4P3gzlBfL6VGL
j/tPnhS+X5CcJo+dnjHwmOBg9fcfvOvW9hzBIRAPA0eAI+W07IpD5eCNgqPA
EjnN6rVwwD0eX8aA48AJctobtKbJnkzBUnCyuv8VR12bdUNwqpwuzrsfXMr9
OR0sk1Mf7a23RrwULJfTzu2bH/Tm9lOAc6C8EpwP3i2nMZPGvTxwU/BecIGc
JmmdbP3usOADcvpu/kAaPExwIZQ/LCeLggMBL58LLpJTgtx/wDeZ4GNymrL8
c8k0Ll8MPgn1VeAzcrpqEGYZzeerc1D/ArgEyl+W05ZwW7+zmpz/wdflVLLo
bvdgvr4phfgtiJeB74LL1f2jx+gpeSs4/4Mr5NT5u9vYOTy+fiwn1eYHW0c+
4ut/OQ2KXn/xaghf/0O8CvwCXC2niffWiD/x+Oy1nHrO6l81ns/Xb8Hv5fTy
yvj+buwaiH+CeC34K7hOTu11c37u5XzzA1wvp9KkldKDoYJ/y+ng8w/Hkr05
/2c1dGOwRhYdr5s90nm94GZgzSxqfuHG9E/b+fofrJVFfs9v+rjE8/U/WDuL
jK7fD/yYxNf/WdSmc8Uaa74+0gF3yqJSi6cTF/L+62ZRScX1jw/DBHcB64H1
wQbgHll0fczTSfLego3AvbPo9qNZWvf4+xhnUbtFmy6O4euPfmCTLJq0vL5f
tpzzP9g0i5SLvYJsTggeAvFhEB8BNgObZ5GW2PNZCOc/S/CYLHILd25+Zxnn
f/B4sFUWBezMrsnl8f5EsHUW7Rv+NUHM48UpYJss+uJ+b+Iknr+bDrYFz8oi
nSnibxttOf9nkWRZr9ITSZz/wfbgBerj89qRNPsMzv/gxVDeMYs6i52edYzn
/J9Fv245WGSu4/yfReeiZ/431E2wC9g1i9qPKY3x4fkYd7AHeDXYE+yVRdes
668HeXD+B28A+4B9wf5Z1C166alTBZz/weIsWrk43nD+T8FB4GBwCDgsiyLE
Iyfsfyc4IouSmza28LwtOBIcBZaAY8Bx4IQsmn/VQlzK1x/SLJp2elBrW4Xg
5CwqOrE5qqeP4FRwOliWRVd8mj8ZEShYDttTZJGm5a2ANW84/4OV4Hz1+Sw1
2CHH4M7/vBu8N4vEA4Jaj+wkuEB9vEm/99jwQKh/AFwIPpxFenojpjrcEVyU
RfNaOfbZkif4mLq/d27nVs3fvziLZrWwszwxVvBJsEr9e8y2G7neQvAZ8Dnw
BahfAr6cRb33z6R7Pzj/g6+DS8G3sijq2cbBu5dz/gffzaJbV8c/r+P5iHLw
gyzq3uq3ZCOfvyqg/mP1+fnV5BvfUgRXgp9mkWzWi8LAJ4KrwC+yyPFOxe/G
fLxXg1+rf/99DrPS+Xh6m0Ufr/w7eKc553+I14A/ZVHTX1S+8C7nf4h/zaK+
mi1Xe/P1RB34B9Svz6JPbv943uDxwG+wSEEBgc/bz+Lxc2NFw7gGuJmCEvaf
/7PSW9i+poK6HApLzxwhuKWCui09crDATLAWuA1YG+q3B+uAO0F9XQWZGDq1
m76e87+CxiwccjKbrzf1IK6voPYrYz9sCeD8D+6hIM1hxXd+lXH+B/dW0H9P
T57P6CHYWEFfGq8x8BsiuB/ETRR00d5wv+YPzv9gUwXdTpr01dWX8z94mLr8
xN02aS6c/8FmUN4cbKmgSwe/D1rVivO/giYdvtsnic+fpKBnZfGfvPj+zngF
Zf3XZoWWO+d/8ESwNXgKbM9GQd8z10zISuf8D7YFzwLbKehI2qA/YRmC54Lt
wQvADuDFYEcFVcu1umyWCF4KdlbQu4c3Tz/n60kXBc3v8Cux8DVf/yvIbW1d
hlUvzv8K+jgvtP0qtgd4NdhTQYnJHiFjh3P+Vx8/OfMsRo3i/A/eoKBl/c3X
zePj2QfsqyDnF/PfHXTk/K+guv7XLl7i8cBmKC+GeBA4GLYXAvEwcISCVtlr
lEc04/yvoL0Toqtf8f2fKAXti97705GvVyUKanp2sMl+MV//QzwOnACWqo/3
FSvXZh/l639wKjhdQZKj+670v8fX/2C5grx/xcwfw/frFOAc9f7+Oljpy/en
lOB88G6ov1dBB5Rv0r7e5et/8AEFGTwcXmd2ia//wYehfBH4GLhYQVO93rzb
ycfvSbAKfAZ8DnxBQcHbC1pc53xTAr6sPh9ct7FImc35H+LXwaUKMj0Za3KV
5z9uKahV2u8/LQsEl4HvqvPR2iNbRuwRXA5+AK5Q0GHR+oG7LvL1P7hSQRbe
7a2vxHL+V1Ber567fHh+rAr8QkGbFClxb5I5/6vzp96rxL2pnP+h/Ft1/00P
3DaQ53ffg2vAn9THy/GzTat5PFML8a/q82PtzKih7QXXgX+A6xVk11nfbCgf
378hLspu6MZgjWwy6q3s3YjzW7NsejdUM/Ec51dNiLfMpsy8uqjxfL7SArcB
a2fTmFl6g67x9WR7iOtkU4HW7PAqno/tBNYFdwHrgfXBBtmkZ6dx2W085/9s
0vFYNKKAr++Msun8qD+S+9y+vcHG2ZQc2si1w1HO/2AT8MBsshkx427XSMGm
2XRzaz/FtlzBQyA+DDwim6KDY1QpYsFmYHOwJXhMNoXZdT/bhu9vUTZ9zN/y
sim393iwFXhiNlU8vDIyKUU4nqzBU7Lp5fJez6/xegKbbCo/P/9OOK+3mQ62
Bc/Kpgddz1sreLxiB56bTSMCd81W8vWGPXhBNlXNrPhowuNtB/BisGM2fZjh
unQEzzcsBTtDeZdsmv7E13cGH/+uUN4d7JFNR6raP+vK86OrwZ7q3+v+DcfZ
PJ71AnuDN2ST5fTtuwxqhfo+YF8o759N3ZxXLSpvzPkfLM4mSWSjkhs8fxmU
TTNOvby9ZhXnf3AIlA+DeAQ4EhyVTeGrpstl1wVL1MfPobH5gwsFx4Djssmp
T+NS/xLBCWApOBnqp4LT1eev86HvBmYKlkF9eTZdiLPs/oXnixTgnGx6u7vR
J6diwUpwPng3eC+4AHxAfX7697rDMR6fFarbd4/B0ZFfOP9nU1TVosn7ef6z
CHwMXJxNi0I3Nrbn4+FkNlkFzV13l8/XKoifAZ8DXwCXgC/D9q+q+2dJhkZE
d8HXwaXgW2pf+HflkH8El4HvZpP4R3a3BF5PUg5+AK4AP86mVy7vDX/1FVyp
3v7OvbZ+Tpz/wVXgF+Bq8OtsGhA9Z+H0v/k/m8bf/R7gw/c33oNr1MfjvsNr
rzTh/J9NJ110Am7x+qrabArds1a/A+fvr+r9OdXUvyWPx+og/gPi9eDfUF6U
QyG3N+3zfcPX/zlEGlNet9Li/J9D13aPnO6sx/k/h9wGGKRe599PE9wSrAX1
20BcO4dm3JzTV93QQv4H6+RQlNG7C5NqeP4f4rrgLjk0WGny/JYJ53+wfg6d
nqrtFs3rdQzAPXLo7q73A15v5vwP8d5gY3C/HLJvN7bPQT5eTXJoX/oJ5QP+
/gPBpjm0rn7EH7uzfP0P8WE5lL13wlkbPj5GwPbNcqhQ40iLIZyfzHNofnSf
8IwFnP/BY8AE9cerv8+juxfH/73+V/9+ZRfGKK4J32ci2Bo8JYcsw0aF5lRx
/s+hAzL555a/OP+DbdXHX0DEtxi+HpgFcTvw3BxSDlzkZMjrRexz6F1Ea09b
9oIcalks6fCFjzcH8GKwI9RfmkObMru4djvA1/9gF7Ar2B3skUO3+i5y+cn3
H1fn0By6fP7OauHzPMFeUN4b4htyqO2YiR3nz+b8n0M9Iz+VDuP7cb5gf/Dm
HHr81GWMF9+/FefQmn4Jiwzmcv7PoYqxPZ078PV6MMRDcuj4766nlLyeMAzi
EeDIHNL4J3fVR14PFgWWgGPAcTl0+8CklKHsBLAUnAxOzaGPGd8GHeb8kp5D
DiGjH+/l8ZcMLM+hNwcX6g7k868ih3zPnhhb2InzP8SVUD8fvDuHHiT30rp8
i6//wQXgA+DCHEq8tf2bPX//wznUdb3FqQN8/iwCH1N/X/erhUN4fXIx+GQO
9TYJ2//3fKWC+JkcGjevKP9QT87/OfRoWlb8Zz7fXACXgC+Dr+bQxpMJBZP4
fvn1HAozbKKy4HxUCr6VQ183Z02p4OO/LIdOTJjZOIrz6V1wOfgBuCKHKtsV
Pjbk891jcCX4aQ49yZib34THX1UQfwHx6hxaOGXi5SDOF68h/hb8PofaZaWJ
F/L9iBrwJ/X339L3fX2I4FqIf82hfocSdJM5n9WBf0D5+hz6kXi0eqix4N9g
US4l5N1KieX1T41zG8Y1wM1yyXeNj+xmIuf/XLrlMtGwRxTnf7BWLrXt7+sX
wNefbcDaudS/9eVj7tqc/yGuA+6US9PCN23fwOdv3Vyyux9Tdnkk53+wHlg/
l3re0Qp14/tjBhDvATbKJT95QtJGbo/eYONckj04ssOwOef/XDr59W23f3g8
ZQIemEuWn170b7RSKG+aS5cszqS/GCB4CHgYeEQuGQU/rVnP/dUMtmcOcUvw
mFw6fO7+phBen0rg8WAr8MRc0hw88GrXW4KtwVNyaXj2rNnj5wm2ySWPuuFO
Ml5/PB3ituBZYDuoPzeXCuzLX9R35fyfS+7vtj9Yncfz/2AH8GKwI3hpLvU1
1P9qze3lDHbJpV6VVcYdGwmf7wpxd4h75JLe5hCjKzx/sRrsCfYCe+dSx6gc
9778/NKGXNKe9t7qOI/PfcC+YP9cKtJ/GDWIr382q48nnX5hd9niXDo977PG
dn3O/7kUF1Pf9BE7GBwCDsul6vVPdA1Hc/4HR0L5KLBEfXwt2z1wJn+fmFza
HlJ8bznPl8eBE3JpYlhuRiyvv5Tm0uKWkvbavP4lGZwKTs+lrc9b9f7D420Z
WA7lFRDPASvB+bmkeDcj8Lsf5/9cWpYf7JPH9+v25pLx9Kn9HfU5/0P5A7l0
KOPNAAcLzv8QPwzxIvCxXBqyzuu5y1Se/8+l7s4uYZ6reP4f4iqInwGfyyX/
IyciL/vw/H8uPZnR7vU77i8luZR4/4jROH5+6zL4Kvh6Lm3TfaXawutDS3Pp
4OMVBVP5evRWLmXt9bau4vWeZVD+Lrg8l3yODLt+dyHP/0P9ilwaVrlU143n
Ix+DK8FPc+mVuI12I/4+VeAXuZST1WxZtinn/1zqd3njQ0deX/Ua/BbKvwfX
5FLkvYlxR5w5/+dSu5yz/7Xg8Vytuv1dRn7+ytc/X8F14B9Qvx78O5dK2x11
+sP3H0XKhm6sJO0rM+8fm8j5H+LNwJpKuuRb3TWA14+2BGuB2yip1c07Zr12
C9ZW0tkjlg9b8fxxe7AOuJOSok+tu3h+i2BdcBewHtTXh7iBkjYPNVuf+F5w
D7ARuLeS8oZ9PlXI1+fGSkrWrzwQvFxwPyVNuHHli/1Szv8QHwg2BQ9R0tdj
N+7O9uTrf/AIJa39Vfwwh+/vmynp6MB2/bbz+lVzJe0/u3yadkvO/+AxYFLS
t6tt5Uf5/Dse4lbgiUrS+FLkRbx+wVpJOT97H9fn32OKkvr2Low6z9cvNhCf
DnFbdfsUyZ3WnebrfyU1Hnqpqgffr7VT0uolw772XMbX/2B7Jbk51nw6acz5
H+wA5Rcrae5ysy6enE8dwUvV7X3je5vtfD3iDHYBu4LdwR7g1UrS9wgSmXL+
8wR7Kam61fyHV/j5Vm/wBiWVzWq7a98Avv5X0lijp097vhaex/aFuD94M2xP
rKRNXVcU+fL8WZCSbAeOfneE17sGg0PAYeAIJY2s2+p3l/tLpJK6rBkTccFN
cBRYAo5RUvuDPicWcT6NAyeApUqyfnp4Y0eunwzxVIing2VguZI6On+/Us3r
lxXgHLBSSZrrTnzeOorzv5KcV3Tdf+Ffzv/gvVC+AHwAyheCDyvpw70Dh8UO
nP/Bx8DFSjIcNfYf3UDO/+rfJ+v950ru7yqIn1HSuuV9D+/n51/PgS8oaZ/B
WqMUHt+WqPtP6Jdg6QPO/+CrUP86xEthe7fAZVD+rpKGOl29PaeM8786n4wV
pT7i+18PwBVQ/rGSXq2aO8eR18NXKil2QUWpxWrO/+Aq8AslaQ1+7FnmJLga
/BrKv1XSqPFnGx3bJ/g9uAb8CVwL/gquA/9Q0puFu7q85/NnvZJaVi54MJXH
s7/BoryGbpxHpoFdLx7m+VsNiDeDuCa4ZR79CXr505fHq1rgNmDtPPKLDI1I
W8P5H6wD7pRHYzS2t+jrwfkf3CWPJD9mR4zkfKkHcX2wAbgH2CiPLCY0Ml+T
xvk/j9aWPPCu5OPZOI802jcxX8jnm3559GXc4f6uvL7EBDwQbJpHU/Kvms3j
+Ywh4GHgEXl09/viDxX8PgWzPAq80KZNU54PNgdbgsfkkUPTxCezmwkm8Pg8
0sx0884YIdgKPDGPHmn6+Ebz+MkaPAVso3Zl3MbT/Dz+9DyaPzooIzqV83/e
/3V17zE1xmEcwGUhraVhJ0sZRjOXWJLijEfk0iwclTQ7pWjdtNZQUculhTSX
GLmrE/X8VEZpbCmdYqlmpXZyW0uSzZRcR5o5f7zPH75/fvb8zrtztt/v/b7n
nPd9frTrWcHYd/L8mQHqQUwVwbln4s9I/oNDmT6UHIuZliv5D/VtYCM4AhzJ
5DCY9H2LXK/ssM6/nZkR1fJ7RDQ4Bhxnnd8hvkUBcn9JAjiR6XRC4vcOuT80
CerJTL3XCpYdkfPVbvBecCp4H9MYV0PESllf6UwGY7j/hmTJfybvzNzwEfGS
/9b1sjjuoWm95kNQzwJng4+Cc5iazTy/pVjyH3wCfAqcx1TVlWoqk+vhs1A/
x5RxMs/PIs8L5cP4i+DL4Kvg60yOT4f5jXx/LmQy2Xq0BfVp11NFTLd0/CC/
VvNNcAmMV9b6QffWxlGS/+BypsOPwovGBUv+M81L043fL3lxF1zJtMbbbPdS
3m8V+D7TL3efT0viJP/h9dXgGhj/CGwGNzCl2Hh6Jcn/R0/AjeAmptf1MWFu
GyX/reeXmvoX2wMk/2F8K/g5U9oNt35nOf92gC1MX9Tbzv45kv9Qf8W0uvld
tedeyX9wF7jbasemzadkvfRAvRfcx7Spr8fFOVzyn8lsU7o1yE/yn+lxyfvG
cp3kP9QHoD7I5GV/r738izZ/vjIFvz9rt6Jf+nkyfWsYynOr0PwT6r/AQ+Bh
8F+mc7GnJ3Vmyf7fimamP8m4clfzSLCt+n/8aLCdojqntoUW2V/WXtHUTt8T
IWIHsCPYCTwejjdR0b6K34MtoZp1io43tgcOSD+9SWAXGO+qKG1/WnrpNM1T
FOn/nL8aVSf7j0N9OngG2B08S5HB4lR3IUT6/4Hngj0UPTW5GOuLNS8Ae1o/
jzEluiVfsxfYW9GepV3dhdmafaC+BOp6Rd6L6j9P+CH9/xQ5jLXfUyn7i5Ci
VZmttkGyv7afotwh1xr/A9L/T9EM/8mdkdLff7WiS3HJljLZb32totJM3TWz
7O8aoOhj7O11OXrplwoOBG8EGxRFDy+vdkqX/n+KIkx6/fEy6f8HDgWHKQoc
iFr3+7L0/4PjGa3za1vC7DtRbbX/ADwqU8s=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -0.37054998736377687`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {
      Automatic, {-0.35667494393873245`, -0.2876820724517809, \
-0.2231435513142097, -0.16251892949777494`, -0.10536051565782628`}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{
       0, 3375.}, {-0.37054998736377687`, -0.10211022285433215`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxc23tYTG/3P/CRUwghhDAI8YQQUuGNEJIQQgghiZIkSaZEpdN0ns7TzJSc
Q8h5EEIIIYQQQgghhN/8ru9en+tqPf881+uz7nvv7ll77bVPeix1n7lcSyQS
DWopEv3///+//1WPubao8mb/W1VjhP+A6T1Xhz66QdbGnfzyb54pZF20tfHa
esqFrIddJT5RWhZkfRiLDXu/+vdesAGszU1nZ34mi2HzXbygaD+5J/zde+bp
ZJANEbNM5TnNhdwHC/y8flfYkI2QMNEoP9SE3B/m6Qs9N3QnGzMPRNfpHVYq
2pBN4Nu/w2zP5uTBKM5onPyxCXkI81AscFAfs/zzTrApjGN9/SxLyMNwaqud
rdlN8nD06Fu9SH2UPAIDVxkGDz5ENoPk1IjbbpnkkZjU0lA+P5hsjllvjluY
SMgWOGI79ZnxBrIlHiY3zhCtJI9Cj8+oOeZEHo3FR1fct3Egj8FdvXvi8/ff
CgYO1fXt3uWaYAnQuE/vFT2vUHws/tzQ3vP9DMXHwuWE7tdveRQfhy477w64
fpDi4/AmVt0rlCwaDzMtG4WnguLjUVfg/r/hKRS3wtO0pNcOMopbIW3c+bI/
MRSfgDFV59e/DaL4BIw8+mHenU0UnwidrveHtPah+EQsmXj037i1FJ+Em7uW
zXtgTvFJyIk+m/vIjOLW9S2xRuO7Bpf+9198cn1LJuPnysmzMgdSfAr0V0zo
v2oAxaegeL/UWas7xadi4MuWAe06UXwqenf9fuOTLsVt6lvCLJqG1MOmk9+2
ovg0RN6ft8azOcVtMa2b2/OujSlui/DBle28/1YK8emwy58eI30jWMIsssPu
ZaN+r6kQDGaJHSofJ5+zeCBYzSyaAfeogrsoo/nMkhlYW5qen3if5s/AvhqH
B19u0/yZiDJ+v35kEc2fCf2YSN9xV2n+TFy9dn7ixAKaPxOSk4aZWRdo/izc
ODX65N4zNH8W6oyLlU8jaD6zehZeD5Ea7Amm+fb1DXtsbGTeonIbzbeHkfem
PVe303wWF82ub8zG6YgTG839aP5s7GowfvtbH5o/GxPv/+uVupHmz4HttsDK
yvU0fw7WNnr49jhZMgdHV3e/fNid5s+Beuny8zNfvBHmz8X2vpsuJz8TjLko
Mc5MnHhfsGQujqxreTLvomA1s8ihvuGAMyuGPy87Q/Md0KpX0uhFp2g+s2he
fYNZwqyehyO/12wzOEnz56PVyca/Rh2h+cyS+XjbfsJnnw40fz6mmf06mv/n
tTB/AWx2h3VfSsYCyB+OMAj5KVjCrGbjRY6Y/S3jxWKKwxEnDzSONKqm+cxq
ZtHC+sZCHI6zibxaSfMXIqnJOIOGb2j+QvStTtrm/ormL0KnIt1XieU0fxGS
tjfK/GxP85nVi7BzTq/ZwdNo/uL6BrNkMSqaHJ863Ybms7jICcszZ9wZYydY
7ISfe8bM6Dudtsfs5FR/exJmuRPuLq4a/3Y87c8JU+JHnJaMElzuhJfvR4wZ
N5j2vwSRs11vdwl6JeyfGcxOS9B5yfRxiyWCJUtg7rrH9GOAYDmzmo0vZxYt
xcgto4p2baX9L0XMmNffxnnR/pmdluL+rJcmG9fR/pfi3lDHa4/daf9L8bXP
72Zj19D+l+Ki58XY+S60/6VYmr5tcfrXCmH/y+pbvAzrRtz7cuaDYCyDpOr2
r2+vBTuxuGQZUtX5NhffCpYzq5nL2fZEzvXjYmY440eW2P/iU9q/MwJu+Buf
f0j7Z5Y7Y8Bc7bb2N2n/zgi0vHF80BzavzPyD7W2+TSV9r+8vsXMWF5/vhOz
hI2XM6uXo1fTvA1jZ9L+l2O6fvszMdNo/yvqW7wCjaJ+b2k2gfa/AjO37+my
YzztfwUmd9pv1cOS9s8sXwHtfq8dR457Kex/BQ6+0i94Okpw+QqE6DbY936Y
YNHK+hYzYyUyivyH9+wl2GklDNPybFv0FixZianGLRzu9RQsX4n+/teb9OpG
+2cuZxa5YNGanPj+XWj/Lhh+6Nq91I60fxeYT4n5sq4N7d8Fw06J9Ec2o/27
4O1P+/LNp18I+3eB/cGkoaNPCFYzl7tA/5jxjcU5gkWr6sfFq+pvD6vqj3di
lqyCzjfvNclnaP+r0Dg3M8Ixl/bPXL4Ks04tXDoxm/bvim6fBm3ql0H7Z4Yr
BvVcfmBVGu3fFatbGU+Qd6T9M8uZ1a64+ulEelV72j+zaHV9i1djmzzj1Eoy
VuPihA5nmxjQ/pklbLx8NcKSRg6b05L2z1y+GqqcVNXVFrR/t/oWuyG+56MD
4Q1p/264M7TxgR4vnwv7d0P0icdfQs8LlrhBMc515q7dguVuuF7cdpR7jmA1
i5ezuGgNmn/26b5FJVjMjDX1xzsxS9agw9mEJLss2v8aDBvRJS4gg/bPXL4G
Sb6zs7qk0P7XYu9uZ8WkBNr/WsR7/2+A2XTaP7PTWnQtnNu281Ta/1rEjbCo
6jSF9s/iauZyNl7kjnBM6nnYnPbvDr/0icdvjKT9u6PPgb+hN4bR/pkl7she
PtmmegDt3x0Ze5Y/GEVWu+PUxG/PTI1p/8wiD3zt+kQ6NaH8/6zLLGY28YDi
4ZdFryMFg8XtPGBTWXL3WpJgJ2YPDyScXZE6KVOwhFnqAfPyr51i5YLlLJ7L
rGbji5nLPWDae73rNKngag/cCu78Y56bYNE6fAlWz1k0nda/DvJZC27Zg9a/
DvP6ro3cOYbWz+JYh2ur3vXuOJ7Wz+zE7MEsWYcN++8fGEmWrkPddv9PH61o
/evg0Ez346JJtH4WVzMXr8MqnaGB98fS+tehy5YZo3o9eCasfx16vPeY/fCq
YJEnCp6fDD5UIFjXEydPS59a7BIsZnETZniirvFUn69nBNt5wthi5ZAmhwU7
MXt44t2a+y6HlYIlzFJPyNuH/mwlEyz3RK/edupVUsG5nrg+Vvx8iLdgtWZ+
jerPRA/BxZ7o/GhP3jFtweXM1cyi9fWtux5X4yLW9WlO618PlXRK+tD/0fqZ
wWy3HmlLbnvfFdP62fY8WFzCLF2PZKdhS7T+PBXWz5zLrF6PF1WW+j2OCS5e
D8t3m04sCxBczly9HocUvl08lwgWedW3rlf98WJmEy8k1J2xjHIRDGY7Zicv
+E4NMdy8XrAHs8QL71s+m+i8TrCUWc6c64VRibtf6D99IqyfudgLN2/Ftfib
J7icuZpZtKG+dZnFzCbM2ACR05uiKycE221Asy3nY57uFezE7MEs2YAIrbsd
vqcJlm6Aqp2vgU6EYPkGjDBapFcwRXAus3oDPifct44eQ+tnLmeu3oCw7q8j
P42j9XvXj+t6Y5GxX79bFrR+ZhNmeGPl574BspG0fmYnb+QPfmixeBitn1nC
LPVGO6/Yvj070PqZc70x9Z/LWxcRrd8b94YEiPX/lAnrZ/Fyb9yaEOVmpUXr
90bl/K8jR+jS+jfWt+7G+uPFLG6yEd+0Nq/wMKD1b8QuO9Qq+tP6mZ2YPTYi
ZPylyvblwt8r2Qhxi2morRIsZZYz525E+POBhi8uC1ZvhHGD0A/RD2j9GxHR
OqllTZngcubqjbDYcqVtLo0X+dSfr8ssZjbxQaOw2u5HCwXDBx91JtqkHRds
54NTowJ+n9sl2MkHw5Nsu3Uke/igfbDXYqk/rZ9Zyiz3gVOoR0qhN62fWc1c
7INqx7lTey+j9ftgdFFm6tZ5tH4fJIwPPWtmS+vfVN+6zGJmE2ZswpLp4WLd
KbT+TeiVEqGzeyCtn9mDWbIJ/Uz7eDQzpvUzyzeh9eKbplmTaf3MaubiTZi2
a+rBzv1p/ZugXHxs/OV+tH4WF/nWty6zmNnEF8PyQs+UDqD1M9sxO/kiYLXW
GKuvj4X1M0t8sbVl+6tdyVJmOXMum69mLvbFwlOpb1/XCS5nrmYWba5v3c0w
CRB7BPwQLN6M+U/9ZlRXCDbZjAmvTuxwPCAYm5HSYPfAVtMF223Gubxfa6fY
CnbajMeLL4UqetP6mSWbMfzJsTr0p/Vvxs5zpx81HEDrZ85lVjMXM5dvRsL1
QbE1lrT+zQir1d/xdzSt369+XJdZzGzih117zmdH2tD6/ZB2NvdGw2m0fj88
L+ph1YTs5Ie/0lt+aWQPZgkbL/VDoqyB6d0VtH7mXD+8+SJtOG4prd8Pa48O
bLFnKq2fudwPeQ/aHZs0n9bPLNqCkXcO7a4eS+tnFm+BuSLyi/P1R8L6t+BN
yooOrU4KBrPdFqR0Wev8NFWw0xZsfZHfoc0BwR7MEjZeugUvj13Mco8XLGfO
3YIFIwMbT9sqWL0Fk5PiE9N2Ci5mLmeuZvNF/vWtyyz2h3Ho7d6HJbR+ZjDb
+WPzgdtH/pCd/CHd/arUIYXW74/zZvmykVm0fn9sM7n0ovUuWr8/dszvME5J
ljPnMqv90aDr0g4j99L6mcv90erlo5C+SbR+f/gOv/H7vRutf2t9626FbORL
j+GBtP6tWLPtZIvwMbT+rWieEKT26knrZ7ZjdmLzPbZiUMT+wd91aP3M0q1o
IdO986MZrZ85dyvi/H/tG2dI62cuZuPLmau3olHWiKRX6ofC+iWo9ktNVGcJ
1mbWZdZnFkvw87fW0Nijgo2YTZjNJGgeddJ/02nBkEDaZEnYyoeCrZntmB2Y
nSRIvTRnm/U7wS7MHhK4RaHHkXLBPswS5hA2XyrBzulpwdLPgmUSjGoSmHT5
r2C5BO27HvjQoKHw++ZI0PXNxKvh/SlfzPnMauZC5mIJPj3xzZ3dVnCpBKKg
LRcKPgr7L5eg5+jvizrR31spQa/VrXJG0e9dzVzLLAqob21m3QDcCdyaYEb5
0g/Aq2O7z3oUUf4DYKrlorfuBuWf2SQAQZWJSxfdpvwzIwDiSeu831VQ/pnt
2HiHAAQ8dDZYl0b5Z3YJQJ/jhxPPbKX8B+Ccp25XG7JPAPQeyydFbKL8s3gI
my9lcRmbL2fxnABsG3HnvnuE4NwAbP6lnfsuVXA+szoA09TXbgR6Ci5k8WLm
0gDcHOPfZ4oX5Z+5km2vmsVrmUWB9a0diCcW6R+r/Sn/zPqBcD97Ni1gPeWf
2SgQaS8uz+rkSvlnNgtE4Iyjn18vp/wH4vHYrUmO8yn/gShtr+xq3onyz+wQ
iHvic803/SwV8s/sEohJnWor3T8J9mD2YZYEoqbL2m2nPgoOYZYyy5jlgUj0
Xt9l0nPBOcy5zPmBOLtzRaUX7V/NXBgI2b+RBh16U/6ZSwOxcL7Fk4xZlP9A
DNlXMsmafr9K5upAdG8l+zvMl/LPLNqGbWMuFlXR9rS34ZDSvVt7Z8o/i+tv
w5PR/odjp1H+t2H4rye/74yi/G+Dh1ZL27PmlP9t6PSmxPHacMo/M5it2fbs
tmHhxX1Tnoyn/G/DnISKv7enUP1vQ7jficvLHKn+t8Fh6/ybD+j48mD2YZYw
h2xDtOf3P/98qP63YbfjpOnvNlP9M8uZc9j83G1oqN1oZlOqj/xt8DbtX3Sv
K9X/Nhy5s/GOeQeqf83fM7z19UValP9t2F6CopIPwvFRyuLlzJXbMP3ZgIY/
aXw1cy2zKKi+tYPw7LDMvA8dj7osrh8EeZ/ElS5VgsVsvFEQzF8au08rF2zC
bMbGIwhrrdQr//dVsHUQDofbXNlC9WwXBKN8u2BpI8o/sxOzSxB6/Lhwwqwt
5Z/ZJwifBt7yPlRL9R+EFgNXh3ejvyckCOFhOvq731L9a/7eycP7t31B9c8s
D0LlDD3fQ3ep/oPQKSB3S/55qn/mfGY1c2EQtprLPToWCC4OgumDjTVz6e8p
DULzFt6/21ULLg9CxEiR/fsGlH/m6iBc7bTS9Wtjqn9m0fb61mbW3Q653bWw
ij+Uf2YxG2+0HR7exg6GFDfZDv+q178KX1H+t+PvatHR1jco/yxuzeJ2zA7M
Tttxam95+P4iOv9vh7HhtDvD7tD5fzs2793i9eQZnf+ZJcwhbL50O1z9y5rp
X6P8s/Hy7Qja2DRrCB0POcy5zPnbYVim79T7N+WfuXA7/nXq1tzyH+WfuVSz
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
+cynNevLcR2T3pjqn8ULWLwwCS63Q2yLW1P9MxczlzCXJsHz4OwmNyyo/pnL
NfXUMEnvezuq/ySsN120K2AC1T9zFXM1c00SrFp6tp3Uneo/CY2Dln8aSOez
OmZRcv3xjZLRYNZyc0VTqn9mHWbdZFi0PPwovSfVP7N+MhbGvOq8g86XBsxi
ZsNkPP+qbnBmDNU/ixszmyRjz+2vYcuHUf0zmzFbMiMZ0zo4n7vaRrBVMtxu
GLc8pSvYOhkjN9hLS85T/Scj8o7y+OxjVP/JcK7z3/H6qGB7Fndg8x2T0XjX
p1aplwU7adbj2eEfKO7M7MLGuyVjxjoPwy8vBXskY3DOq52T7gj2YnEfZr9k
7P7wz7XDQKr/ZPzv6MD/WcRS/SdDlpk5ehQ9fw5JxpiCjN6O9H48XHO8zGtU
9pOun6Sa9Q1d+rsHXc/EJWPfq1ZTh//3/U8ywkY9P/qInMricmYV215OMt7e
nLRpuIju/5lzk5F58VHjJ3S/k5eMxe1b/ft7i/p/Mu4/mv3jAX2fczoZL+85
brtK1xfqZNwyMY5Qz6X+n4yuxXqPplO/KmQuSsb5dneGrKXxxcwlzKVs+2XJ
ONr78ZRSB6r/ZFwxf/Hyz1Kq/2R8vbJiJ5ZQ/bN4FXM1cw1zLdteHbMoBQ90
/TY1nE/1z6ydgm6fnW9n+FH9p+BpXMKZrWFU/ynoPy3HzDaS6p9Zn9mAWZyC
uJavnrrS+xRDZqMUeDq9yo1aT/WfgvP7m7S5vIbqn9mUjTdj27NMQYrXw+pJ
1H+RgrK3KRfG+1P9M1uz8TYpqH1Q5Z1Bf78di9uz+Q7Mjim4/mhbU2e6PnZi
dk5BkbxdtIrq0YXZLQXPU2Ky/en5ikcKdBvY9JhEz4+8mH1SEP53yJYVQ+n5
P7OEOYg5JAVjRm08/KI9Pf9jljLHMctS0Fg0t0lab6r/FKibeel50fcIcmYV
cw6bv09z/F2PWP/XS1h/bgqOBQ/uLJtF9a/5vRcFLu5tQvWfgoED7FNz+lP9
s7iauYC5kLkoBa8+715n0ovqn7kkBTdTjd+C+nspcxlzeQrc+6RKSskVzJUp
WD/mzeZ5Y6n+U7C35tjvVvS+sjoFR3v8EI+ieq5JQY99aRMf0fVZbQrezz4q
T/nv/T+zKBXv/C4ef3iI6j8VSUm5W5rT8zptZh02XjcVp/fuurgzieo/FWal
xiYbqd70UxFZVqbT05vqPxXF2hZWH5ZT/TMbMhsxG6fiYdHE/fFuVP+auLxl
8zRajymzWSp+XivPkJMtU5E80Ufvz36qfxa3YnFrZptUlCvW3WhG74PtNPsz
6vZ6bxzVP4s7pKLg/JjJYZ5U/8xOzM5sey6p2G5quiQ7geo/FYuOdP0dkkr1
r/l9XyjfuO0T7MXsw+zHtidJRft2baJb0vciQcwhzOHM0lR807N90IMcl4ot
hu1O3qbnEbJUOJx1W34zR3BqKmb86XpPTc/35Kk4KWuQ0o/eb6tSUTRAdOYh
vZ/IYd6XirOV7/MG0fuQ3FSs6Z701Y2e5+exeD6Ln06F9gOtuW3p/ZY6FZ7h
y2dYULyAjS9k8aJUTJ07ujqNvlcoZi5JxbIqnUm29HyyNBUNvomG59H9Uxlz
OXMFc2Uq7rU7OP5vIdU/c7Xm7wvt6rGX7u9qUmF1ZW+/P/T+ulbze58Xf1n3
3/0/i4vS6rtRGhJCOu0IoOeB2sw6zLppOPTUo+4D3T/qMeuz8QbM4jRk9kvo
nUPPMwzT8HZ18s5N9PzZKA3RVz6PNaPvC4zTEHyqfRsvsgmLm6ahqs5//xF6
/mGWhqv3dCwX0PsRS2akYb6r8aVMslUadA1zzfbS9aQ1254Ni9sx2zM7pOFG
3IGQJdSvHZmd0tBlaKhyahHVP7NLGrpWSEK/0/tKNxb3YHEvFvdhcT9mSRpm
+uXNX071FZSG11GO14PJIWnINkp9fq2c6j8NHru1916j90nSNEyq2Zo5tC31
f83+H9bcDaXvS2Vp8IF99jlX6v/McmYVm5+TBkP/X57NKb4vDTvGuliunEfX
/8x5aQjqd7Wlz0R6/s98Og0rprR97krf86qZC9IQq73K89cQqv80tB5y5PFY
ymdRGpK2PriYRM+ji5lLmEvZ/DLN71VxonEWfb9RnoYlQy+K19L5o4K5krmK
za/W5O93O+OFtP2aNKyq/JEx77/6T4NXhsOgMHqfXscsSq/vRun1t6edjuv5
e1v/pfe/Osy66fh1aFXTh/R9vV46Gi77udRjtGB9ZgNmcTqeKcLC15MNmY2Y
jdNR/e7owLBhgk3SMcr9jSSIrldN05FhYDDiDv17GrN0OPifr5rXg57/pyPQ
59T9L2J6/s9slY4e942Wy//7/ofZhtkuHZ0mdHTsROdX+3TN/eefd+3p/tSB
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
hygwzLbtR+Ma6v/M4cyRCswds+fZerJUgdmJZzy2kmOY49j4BBaXMSdr/j7b
GxuzKB+pzOnMcgUMGvse6Un5Umj2Zx7wfAFZpcCCjuseW2kJ5+tsBXy23mnU
g643cxRImTIitj9dj+5RwEvri98+un7dp0D/9dm/ztP19QEFXCTLwz7S9W8u
82EFMNp8d7N29D078zHmfAVqFuX96NpG8EkFtrivHfWGrqdPM59l49XMFxSQ
nd01ozP12wKF5v4pdss86leXFdjYw8b3QQ+6/2e+xlzEfFOBJ6OfmU0lF2uO
R63Vm3XId5hLFOhwRvXhopj6vwLBYTv+JyWXsvgj5jI2/ilzuQKpJxY896P+
9kKB0AzfDW7U3yoU6DK0WLqU+tVr5ko2/p0C+11MBl15KriK+SNztQINT7cd
PeU59X8FEjvcKM4n1yhQ2med+aSX1P9ZvFaBxV2fukeQfzHXMf9VwOR7hcPe
TdT/lQiRbQ3eTNZSwnbIkweJPtT/lfDq/dS7+0bq/8zabHxzZh3mVsy6Skxf
+NzBdQP1f2Y9JVqPfdVTTH9fB2Z9JX7u29Q3fgv1fyXCT033TyIbKDF12KV+
Hm3p/l+JbyrL3IGd6P5fiWmXCq/8I/dUYl5VQXEYHf+GzH2YjZSwMWy9Mawr
3f+zuLES8lnp1i7kgcwmSjyJDZj2rDPd/7O4KYsPV+LZuJFOcWQzJTK6LegV
R3+/uRL+kmu/m++h/q/EKI9q+3m7qP8zg3kcm2/FPFGJpYNFvduSrZW4dKIv
rA5Q/2e2YbbVHD+9kKbYT/2feSazvRIdFGNOJtPfN4fZgXm+EtuGblvinkP9
X4nuycf+yXZT/2d2UiJgdJ9ferSepUrM/HXUKHwv9X/mFWy8C7OrEj9mGX3f
kk39n3kts4cSFeKhC+5nUf9XwijPYperivq/Eg/nh5TdVVL/19g0wyc3gfo/
sy+znxJh7222joqn/q8EMj7UHiJL2PhAJd4sn7OyjBykhOWKc+ufJFL/Zw5R
Qqba2vSpjPo/czhzpBLnOh49eCOJ+r8SCxd2NPieQv1fiaqpKc+npVP/V+L0
unFxhv/d/yvxpeTd39V0/pRpjpfXWj2G0Pk7WYkHkZt0p9L9TKoSCZOdj76n
82e6Es4tJ3o3qaD+r0SDnFYrTpIVSrQ8N3Rt9mvq/0pcD8iNeUDOVmJw9ruP
hW8E5zDvYeP3KeGwsq53yFvBB5QYdvZ1njs9z8lVoqdq/phH1YIPK7H5/d57
U0XU/5VQfve1NG5I/V+J1Rt2GHRuTP2f+aQSPS6KP/Si53+nlajWXzK8hJ5P
nlVixfDjR9bT9Yma+QJzgaaeGhq3L2tF/Z+5UAlV84Gr8+j64poSOhffPL5F
84uYb2rOz8FNnvyiv6dYidT2I3X/y88dJQ7MWelmTi5RYlF8Zdvt1G/vM5cq
cSgpdtEM6r+P2PwyFn/KXM78Qomy0+8r0v7r/yz+Wglx0QDdGXS/WqnpJ10f
JuvQ/ec7JbbMG5LblY7XKiX215jl1dHzrI9KGF+q9HpArmb+otn+40lHU+h5
WQ3zd7a9WuZfSrS1aNkrgu4H65SYOyHz0Tz6e/6yuEhV31rMjVSY8qz/vht0
f9iExbVVaF07ozqA7i+bM+uo8CjQvndfyncrFSyaNtulRceLrgrtPj3vM5Ou
P9sy66kQ8vVi+2nUvzuo8Ebuc/ciXf/qa/YX1V9hQs+LOqvwsknO/ct69Pyf
uRuzmM3vyeKGzH1U0A4ddecS7d9IBafj4q9L6O/rr0JB8Icnq+h+2Zh5oApb
mmYHlhYKNmEeokL5wJSclkWCTVUwCJCa7KD76+EqpC05jDa0PTNmc2ZLFfqO
tR2bRh7NDOZxmvWlTy4d8N/9vwrGxlVWben57kQVutgt1fEmW2vWr9v72oYX
1P9VeP3bPv44PZ+1UaHj2eMnWtDzUlsVMoNG7h9P5zs7FTzFC3v70PPQmSpI
InvX7PlC/Z95DrODCnOdLr9Pofu/+cyObPwiFfaPr+p4mfbnxLyU2VmFi8Zf
TUN/Uv9XYfJFf/M8uj92UeHrML9nO+n87KrC2wPaqZ3oeHdT4WzanO0h5LUq
JGb+VXjR/aIHsycb78W2561Cqce2GX50/+nD7Mvsx+zPLGEOVCEgKvqZM/WT
IJXm/v14F0u6X96hQhN/g5XrKH8hKshrX7jOp/cbO5nDmSOZpcwxzHGa80en
g8EXqF8maI7PmCNXnpNlLJ7M4qkq3JgwdV93en+TzixXwfSznWkMWaGCWD8g
xYDqWaU5vpfc3PGNzg/ZKrwv7H0voiPd/6twYfyp0tN0f7xHhX5PXo2d0Z3u
/5kPsPG5zIdV+DPXd7spOU+F6VsfD9AmH2POZz6pwu5/5rsz6X7kNPNZZrUK
n59c3+FL/eWCCj/m5OQZUn0XMF9mLmTzr6lg1/JeaQK5SIVDFk93VVJ/uslc
zHyHuUSF+EP+Wuup39xXoWufz/vl1I9KmR8xlzE/VaHbsZbdtefQ/b8Kq49E
/NRZSM//VdDbF5S4kVyhwq5un758XELP/1UwSr23+Dh9n1DJ/I65SuMGXtfn
0PcOH1m8WnP8WZ/9tp/8hbmG+TtzLfMvFXI3TTCJJtep8GLLH3VfCP6rwpqw
5dmzzAWLsupbKwutGlqsak5uxNwkC4mDvffuHiFYm7k5s45m/u/VHRaNpf6f
hRZ+87r8pO3pZkErd15U7Gjq/8x6zB3YfP0sOL25Wd1pJPX/LEz6UDvjEfUf
A+ZuWQh7emPEJHp/Ks5C29qSNs3p+r0nixtqXNGvzRxyH2YjNr4/255xFnrr
z22Y9Yr6fxb2DPYfmEk2ycK6Da9btiMPYTZlHs5sloXwn3+XXmpE9/9ZKMvZ
vuMUvS+3zMK3pVdHyf97/58FvbMWVe3o+gtZmFDUNno9XW+Ny0Jsow0N3pCt
mCcyWzNPYbZh27fNgmWn3rYS2r8d88wsWHXUO96Zrrfss3Ds6dV39+l8OycL
3xs8bN6b3u85ZMHWNvHjZzq/zs9CzquG9kvp+aGj5vd3Nemp01vwIs32P7V9
EN5XsFMWnjedMq/GSPDSLAy/daS6eT/BzlmorT0h1jMWvILZhdmV2Y1tb20W
CotGPm7Yh/p/FsZVr3ugbUj9PwttBuccbkF/v1cW9i7zfDpwlZBvb2afLODu
jYapLoJ9mf3YeP8snC55bHXYXbAkCxm910x/tk5wIHMQ8w7mELa9nVno2vPP
qyWrqf8zRzJLs9D6YjPtK/S8L4Y5Lgv6M0ResfS8MSELFkdftHPYTP0/C+5T
V6aqAqn/M6dqjq8LTn02baP+z+LyLBz4MC52CVnBrMrCUNsBDvsCBGcz57Dx
e5j3aY7/Rbe2ZoQLPpAF8c2K4ZtjBedmYcSVDXt06fuzw1mo9Pt308WR+j/z
MeZ85pNZWFAy/Uzz+dT/mc8yq5kvZOHwTbVPJLkgCwN+GLfxWkD3/1m4tb7W
dNViuv9nvsbGFzHfzMKW+EPbRfS+qTgLCZ5au0/Q+7E7zCXM97MQZDjQ9ipd
f5cyP2IuY36aBZ+1uSnvyeXMLzT9ZoF93znkiiwMHmK49Ttd/7/OQsvjrUpX
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
r7T5eJnrP46CXy63X8XnXynEo+No1P1609NZvP6Dk8GyOJoZcXPZfV4/lHE0
uvjynu7xvP7HUTOjbRurXXn9j6Nq78GDvGbz+g/OA+eDCxrmV9dpJwp4PS+M
o6tNl79bzvsviqPlR/MtNvH1WXEcxW+aN3Upn/9L4uin297E3zyfSsFl4HJw
RRxp/BUz/206138c9bXv43bqz/P/OFI8eqGazM/vK+PIwr+NtGsAr/9x5H7u
dscT7rz+x9H9a/LO/6zk9R9cB66Po09HA/ZdZIviqcOsK2lv+PhqgLXA2mCd
ePKoX9pzBVsXrBdPTxI0RbN5f/rxNEn+/Nj65Vz/8VSb5e3rxffr/SBuAP0N
wSbx9OCWSYu23lz/YHOwRTxlGp3cYcwmiFtC3ApsE08X4jdUhvLxtwPbgx3i
aWvxoFTi+3lHsFPDeN1LRcsHcf3H04stewI/9+X6B7s1/N4xhWMHduD6B3tC
e+94stzcP8yC7yd8wBJwQDxdffnMVGnH9Q8ObTj+2pYvn/P9tBQcHU/6k3+0
k7Lj46mN9Sg7m2Fc//Hk2uv8nby6O0L9g5XxtHrHlpMyfa7/eHrvbth8RSeu
/3j6KlutVagW2udCPC+eFrVsI9vBzgcXgAuhf1E8ubS6aXtVl+sfXBJPc2ua
dejIx7s0nuJu1Fo/b8X1H0/W1rqqJ9pc/xCvgLga/AJcGU/f//bZoTeE6z+e
9gwI+3RgONd/PLWadn225Tiuf3Bdw3zrvf/2Gn4eUR9PGhMCtX+P4PpPaGyN
BErfX3zUls+XWgm0b8eT5K38vEob4jpg3QSaZhuot5jns14CTT7stncnPy/S
T6AH3+5OLejN9Q/ul0CXn6nXd+vG9Q9xwwQKcUvsptGf6z+Buq3/fDziL65/
iJtD3AJMCdR52sgpnxZx/YOtwDYJ5FZ67tiND8L8s0sg7wujSqfcE2wPdgA7
gp0SqO261SMmvhLsDHZJoO3fIhf8/CHYLYG6aj358X0w138Cdejrf7gVj8cT
7A32SaC685GtrMVc/xAPAAdB+9AEUmVlFrTi+SyFeHQC7VylK9LleDw4GfrL
wEpon5VAZ0ZfTbbn+Z8Dzk0gq6+iZ1uMuf7B+eACcCG4KIGeN+3a6ROfD4rB
JeBScFlDPXyszOrelesfXNGQz98rw2Q9uf7BL6B9JbgaXJNAI+XnHQJ4/7UJ
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
paLWzA==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.23847083396129198`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {
      Automatic, {0.4054651081081644, 0.5596157879354227, 0.6931471805599453, 
       0.8109302162163288, 0.9162907318741551}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3375.}, {0.23847083396129198`, 0.9021604514282564}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.799209717275546*^9, 3.799209870780313*^9}, 
   3.79921307797116*^9, 3.799244541034256*^9, 3.799251979420261*^9, 
   3.799254333781261*^9, 3.799256397270149*^9, {3.7992566744136143`*^9, 
   3.799256691823999*^9}, {3.799256741500101*^9, 3.7992567607922497`*^9}, 
   3.799257750162216*^9, 3.7992590515701447`*^9, {3.799260921385152*^9, 
   3.799260937323626*^9}, 3.799263156924345*^9, 3.799274385092108*^9, 
   3.799283325340097*^9, 3.799298120292604*^9, 3.799323470773568*^9, 
   3.799336248313162*^9, {3.799337491346182*^9, 3.799337506442878*^9}, 
   3.7993784332373857`*^9, 3.7993787414348383`*^9, 3.7993787899655743`*^9, 
   3.799382558991856*^9, 3.799385086130617*^9, 3.799386834754423*^9, 
   3.79939305492345*^9, 3.799393627065052*^9, 3.7993969345214043`*^9, 
   3.7994005996421423`*^9, 3.79940277484553*^9, 3.799424780528295*^9, 
   3.79942840301405*^9, 3.79943308952658*^9, {3.799435674307345*^9, 
   3.799435700816437*^9}, {3.7994362863125153`*^9, 3.799436313351141*^9}, {
   3.79943642986873*^9, 3.799436442681067*^9}, 3.799436799461906*^9, 
   3.799439212851448*^9, 3.799441298781433*^9, 3.799444617713077*^9, 
   3.799450453543002*^9, 3.7994520845087233`*^9, 3.7994522585079107`*^9, 
   3.799453548888955*^9, 3.7994542843505573`*^9, 3.799456707262389*^9, 
   3.7994596310672693`*^9, 3.79946152337008*^9, 3.7994635782794237`*^9, 
   3.799465481815955*^9, 3.799466309630625*^9, 3.799471520398623*^9, {
   3.799473505869226*^9, 3.799473553422577*^9}, 3.799475714763833*^9, 
   3.799475754218528*^9, 3.799506367212181*^9, 3.799509261943041*^9, 
   3.799519395984384*^9, 3.799521212321011*^9, 3.799523108112433*^9, 
   3.799524296336038*^9, 3.799525821155312*^9, 3.7995264055492268`*^9, 
   3.799529931140479*^9, 3.799533154049931*^9, 3.799533653782638*^9, 
   3.799536199913368*^9, 3.7995402483044558`*^9, 3.799541700431669*^9, 
   3.799545713250401*^9, 3.7995516554245977`*^9, 3.799552821883593*^9, 
   3.799554949301216*^9, 3.799563737085631*^9, 3.799594425327849*^9, 
   3.799596701349523*^9, 3.799600920707995*^9, 3.79960146857541*^9, 
   3.7996147846310253`*^9, 3.799621615601192*^9, 3.799628799913666*^9, 
   3.799631890992489*^9, 3.7996444747124863`*^9, 3.7996528428689613`*^9, 
   3.79965767866182*^9, {3.799666179448105*^9, 3.7996662007799253`*^9}, 
   3.799666285139969*^9, 3.799682989334515*^9, 3.7996971881348677`*^9, 
   3.799699440350156*^9, 3.799701524844447*^9, 3.799703066803056*^9, 
   3.799716636327158*^9, 3.799719842525786*^9, 3.799722178320063*^9, 
   3.7997242972891827`*^9, 3.799726551593611*^9, 3.799767876986124*^9, 
   3.799771938867021*^9, 3.799782953268528*^9, 3.7997851519336243`*^9, 
   3.7997897098266773`*^9, 3.799804309522143*^9, 3.7998061955676327`*^9, 
   3.799809139121847*^9, 3.799810504744204*^9, 3.799812072832315*^9, 
   3.799850923255023*^9, 3.799859638587035*^9, 3.799875146326836*^9, 
   3.7998824607560377`*^9, 3.7999012907285967`*^9, 3.799941253234788*^9, 
   3.79995380817776*^9, 3.7999564946003017`*^9, 3.7999611221032133`*^9, 
   3.79997134392465*^9, {3.7999714242229147`*^9, 3.799971432405105*^9}, 
   3.7999735457734632`*^9, 3.799983091784337*^9, 3.7999853149610662`*^9, 
   3.800022534272999*^9, 3.800027689264086*^9, 3.800034041622604*^9, 
   3.8000370238086157`*^9, 3.800054038008803*^9, 3.80006089202962*^9, 
   3.800068987194583*^9, 3.800069319155107*^9, 3.800076883812776*^9, {
   3.800112296382401*^9, 3.8001123177779093`*^9}, 3.8001227277967443`*^9, 
   3.800132325987167*^9, 3.8001337048994427`*^9, 3.800155179210227*^9, 
   3.8001597327359877`*^9, 3.800162565084408*^9, 3.800181321695426*^9, 
   3.800196468495852*^9, 3.800238169649178*^9, 3.800239493086597*^9, 
   3.8002432865008707`*^9, 3.8002833180537233`*^9, 3.800313726358149*^9, 
   3.800321932245326*^9, 3.800322844433599*^9, 3.800327024599732*^9, 
   3.8003815321937847`*^9, 3.800398481902755*^9, 3.800441152589233*^9, 
   3.80045719865241*^9, 3.8004684492768173`*^9, 3.8004853978430367`*^9, 
   3.800502197660049*^9, 3.800508275668982*^9, 3.80054926015836*^9, 
   3.800559101009893*^9, 3.800571576607525*^9, 3.8005837041955633`*^9, 
   3.80058489096482*^9, 3.8005894063388233`*^9, 3.8006321426752357`*^9, 
   3.800652165437056*^9, {3.800658306522114*^9, 3.800658318554749*^9}, 
   3.800679838024921*^9, 3.8007977137357817`*^9, 3.800800837691802*^9, 
   3.8008086954293337`*^9, 3.800811637810212*^9, 3.800816030819326*^9, 
   3.8008162102976437`*^9, 3.800836502629128*^9},
 CellLabel->
  "Out[921]=",ExpressionUUID->"9ef93d9b-19cb-4563-b784-9dde04cd591d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"$round", "=", "r"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Echo", "[", 
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<current round = \>\"", ",", "$round"}], "}"}], "]"}], 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Echo", "[", 
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringCount", "[", 
         RowBox[{"#", ",", "\"\<.\>\""}], "]"}], "&"}], "@", 
       RowBox[{
        RowBox[{"runselfplay", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"$run", ",", "$round"}], "}"}], ",", "$gamesperbatch", ",",
           "5"}], "]"}], "[", "\"\<StandardOutput\>\"", "]"}]}], "]"}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"savegames", "[", 
     RowBox[{"{", 
      RowBox[{"$run", ",", "$round"}], "}"}], "]"}], ";", 
    RowBox[{"deletetempgames", "[", 
     RowBox[{"{", 
      RowBox[{"$run", ",", "$round"}], "}"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"games", ",", "validgames"}], "}"}], "=", 
     RowBox[{"getgames", "[", 
      RowBox[{"$run", ",", "$netdependencylength"}], "]"}]}], ";", 
    RowBox[{"$npositions", "=", 
     RowBox[{"Length", "@", 
      RowBox[{"games", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"trainingsampler", "=", 
     RowBox[{"sampler", "[", "games", "]"}]}], ";", 
    RowBox[{"validationset", "=", 
     RowBox[{
      RowBox[{"sampler", "[", "validgames", "]"}], "[", 
      RowBox[{"<|", 
       RowBox[{"\"\<BatchSize\>\"", "\[Rule]", "80000"}], "|>"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"trained", ",", "validlists", ",", "roundlists"}], "}"}], "=", 
     RowBox[{"NetTrain", "[", 
      RowBox[{
       RowBox[{"lossnet", "[", 
        RowBox[{"getnet", "[", 
         RowBox[{"{", 
          RowBox[{"$run", ",", "$round"}], "}"}], "]"}], "]"}], ",", 
       "trainingsampler", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<FinalNet\>\"", ",", "\"\<ValidationMeasurementsLists\>\"", ",", 
         "\"\<RoundMeasurementsLists\>\""}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LossFunction", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<ValueLoss\>\"", "\[Rule]", 
           RowBox[{"Scaled", "[", "4.0", "]"}]}], ",", "\"\<PolicyLoss\>\""}],
          "}"}]}], ",", 
       RowBox[{"ValidationSet", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"validationset", ",", 
          RowBox[{"\"\<Interval\>\"", "\[Rule]", "50"}]}], "}"}]}], ",", 
       RowBox[{"BatchSize", "\[Rule]", "$batchsize"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Method", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<SGD\>\"", ",", 
          RowBox[{"\"\<Momentum\>\"", "\[Rule]", "0.96"}], ",", 
          RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "0.002"}], ",", 
          RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", "0.0001"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<LearningRateSchedule\>\"", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", "<", "100"}], ",", 
               RowBox[{"Clip", "[", 
                RowBox[{
                 RowBox[{"1.0", "-", 
                  RowBox[{"0.96", "^", "#"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.00001", ",", "1.0"}], "}"}]}], "]"}], ",", 
               "1.0"}], "]"}], "&"}], ")"}]}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"MaxTrainingRounds", "\[Rule]", 
        RowBox[{"Round", "[", 
         RowBox[{"$npositions", "*", "$maxroundsfactor"}], "]"}]}], ",", 
       RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"validlistsdata", ",", "validlists"}], "]"}], ";", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"roundlistsdata", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ToPackedArray", "[", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Partition", "[", 
           RowBox[{"#", ",", 
            RowBox[{"UpTo", "[", "50", "]"}]}], "]"}]}], "]"}], "&"}], "/@", 
       "roundlists"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"savenet", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"$run", ",", 
        RowBox[{"$round", "+", "1"}]}], "}"}], ",", 
      RowBox[{"NetExtract", "[", 
       RowBox[{"trained", ",", "1"}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"testnewnet", "[", 
     RowBox[{"400", ",", "5"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "214", ",", "217"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800054025825109*^9, 3.8000540316136312`*^9}, {
   3.800069612681651*^9, 3.800069613128894*^9}, {3.800069659414569*^9, 
   3.800069662214982*^9}, {3.800122719145959*^9, 3.800122719830619*^9}, {
   3.800133692642191*^9, 3.800133696527152*^9}, {3.800155185435907*^9, 
   3.800155190796617*^9}, {3.8001597200398817`*^9, 3.800159724030978*^9}, {
   3.800220945646493*^9, 3.800220951419423*^9}, {3.800239713363545*^9, 
   3.800239714470978*^9}, {3.800241828917211*^9, 3.800241831917856*^9}, {
   3.800313731359323*^9, 3.8003137358926363`*^9}, {3.8003225031829357`*^9, 
   3.800322505075729*^9}, {3.800322980669692*^9, 3.800322989402008*^9}, {
   3.8003314596475687`*^9, 3.800331462344832*^9}, {3.8003816256045313`*^9, 
   3.800381634682279*^9}, {3.800398952226037*^9, 3.800398953375388*^9}, {
   3.8004173229540453`*^9, 3.800417323618156*^9}, {3.8004578443235817`*^9, 
   3.8004578496278477`*^9}, {3.80049309722754*^9, 3.800493151673012*^9}, {
   3.800508281061747*^9, 3.80050828423353*^9}, {3.800560019106105*^9, 
   3.800560019696741*^9}, {3.800584901686043*^9, 3.800584905546096*^9}, {
   3.800592493011222*^9, 3.800592511948711*^9}, {3.8006321355169897`*^9, 
   3.800632135720645*^9}, 3.8006321726393127`*^9, {3.800638424650999*^9, 
   3.800638437759099*^9}, {3.8006586257699137`*^9, 3.800658626836975*^9}, {
   3.800679891457947*^9, 3.8006798999169407`*^9}, {3.8007578977618923`*^9, 
   3.800757901946426*^9}, {3.800800885237071*^9, 3.800800887720093*^9}, 
   3.8008116913157263`*^9, {3.800816399035231*^9, 3.800816410692957*^9}},
 CellLabel->
  "In[920]:=",ExpressionUUID->"fd56b94f-1099-4cfc-bc3d-abd907961de4"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"current round = \"", "214"},
  "RowDefault"]], "Echo",
 CellChangeTimes->{
  3.800816413270093*^9},ExpressionUUID->"52705759-63d7-4e4a-97da-\
0df0775376b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1935.833309`", ",", "2505"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.800818349106978*^9},ExpressionUUID->"060e3672-5d47-4407-a5f8-\
490b26a1e0ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"run5/games/games-0214.txt\"\>", 
   ",", "\<\"run5/games/games-0213.txt\"\>", 
   ",", "\<\"run5/games/games-0212.txt\"\>", 
   ",", "\<\"run5/games/games-0211.txt\"\>", 
   ",", "\<\"run5/games/games-0210.txt\"\>", 
   ",", "\<\"run5/games/games-0209.txt\"\>", 
   ",", "\<\"run5/games/games-0208.txt\"\>", 
   ",", "\<\"run5/games/games-0207.txt\"\>"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.800818354299404*^9},ExpressionUUID->"39b98a41-6922-4365-92b3-\
13ec4934b655"],

Cell[BoxData[
 TemplateBox[{"\"current round = \"", "215"},
  "RowDefault"]], "Echo",
 CellChangeTimes->{
  3.800818672486985*^9},ExpressionUUID->"cf809f6c-6857-4b98-9465-\
ee61143c56ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1934.10479`", ",", "2505"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.800820606599428*^9},ExpressionUUID->"0cf95906-5c06-43aa-91ac-\
566788a86055"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"run5/games/games-0215.txt\"\>", 
   ",", "\<\"run5/games/games-0214.txt\"\>", 
   ",", "\<\"run5/games/games-0213.txt\"\>", 
   ",", "\<\"run5/games/games-0212.txt\"\>", 
   ",", "\<\"run5/games/games-0211.txt\"\>", 
   ",", "\<\"run5/games/games-0210.txt\"\>", 
   ",", "\<\"run5/games/games-0209.txt\"\>", 
   ",", "\<\"run5/games/games-0208.txt\"\>"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.800820611790097*^9},ExpressionUUID->"51e53854-58c9-4ece-909b-\
71dffec2ed5a"],

Cell[BoxData[
 TemplateBox[{"\"current round = \"", "216"},
  "RowDefault"]], "Echo",
 CellChangeTimes->{
  3.8008209292067757`*^9},ExpressionUUID->"0a9a3a99-7ff7-4c22-9d7a-\
f5041331d1f7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1905.308386`", ",", "2505"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.800822834530669*^9},ExpressionUUID->"ed9e6234-2e33-4f22-86b2-\
accea1524549"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"run5/games/games-0216.txt\"\>", 
   ",", "\<\"run5/games/games-0215.txt\"\>", 
   ",", "\<\"run5/games/games-0214.txt\"\>", 
   ",", "\<\"run5/games/games-0213.txt\"\>", 
   ",", "\<\"run5/games/games-0212.txt\"\>", 
   ",", "\<\"run5/games/games-0211.txt\"\>", 
   ",", "\<\"run5/games/games-0210.txt\"\>", 
   ",", "\<\"run5/games/games-0209.txt\"\>"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.8008228397082767`*^9},ExpressionUUID->"dd8b5a5e-46ae-4753-9d95-\
7b14141368c2"],

Cell[BoxData[
 TemplateBox[{"\"current round = \"", "217"},
  "RowDefault"]], "Echo",
 CellChangeTimes->{
  3.800823156873928*^9},ExpressionUUID->"c95079e8-d816-4aa6-860c-\
d942d238fd2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1901.386872`", ",", "2505"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.800825058264624*^9},ExpressionUUID->"d9b50a9e-21a8-4cf6-86cc-\
15dcc39353cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"run5/games/games-0217.txt\"\>", 
   ",", "\<\"run5/games/games-0216.txt\"\>", 
   ",", "\<\"run5/games/games-0215.txt\"\>", 
   ",", "\<\"run5/games/games-0214.txt\"\>", 
   ",", "\<\"run5/games/games-0213.txt\"\>", 
   ",", "\<\"run5/games/games-0212.txt\"\>", 
   ",", "\<\"run5/games/games-0211.txt\"\>", 
   ",", "\<\"run5/games/games-0210.txt\"\>"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.800825063615254*^9},ExpressionUUID->"2d5f089f-771b-447a-bae2-\
583496287482"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PyTorch", "Subsection",
 CellChangeTimes->{{3.798909418661852*^9, 
  3.7989094206337147`*^9}},ExpressionUUID->"9d0c1bd5-8ae9-4711-a57e-\
021d74550e6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"inputblock", "[", "filters_", "]"}], ":=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<_1\>\"", "\[Rule]", 
       RowBox[{"ReshapeLayer", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "8", ",", "8"}], "}"}], "]"}]}], ",", 
      RowBox[{"\"\<conv1\>\"", "\[Rule]", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"filters", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"\"\<_3\>\"", "\[Rule]", "Ramp"}]}], "|>"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"residualblock", "[", "filters_", "]"}], ":=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"filters", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bn1\>\"", "\[Rule]", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<_3\>\"", "\[Rule]", "Ramp"}], ",", 
       RowBox[{"\"\<conv2\>\"", "\[Rule]", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"filters", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bn2\>\"", "\[Rule]", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<_6\>\"", "\[Rule]", 
        RowBox[{"ThreadingLayer", "[", "Plus", "]"}]}], ",", 
       RowBox[{"\"\<_7\>\"", "\[Rule]", "Ramp"}]}], "|>"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], ",", 
         RowBox[{"\"\<conv1\>\"", "\[Rule]", 
          RowBox[{"\"\<bn1\>\"", "\[Rule]", 
           RowBox[{"\"\<_3\>\"", "\[Rule]", 
            RowBox[{"\"\<conv2\>\"", "\[Rule]", "\"\<bn2\>\""}]}]}]}]}], 
        "}"}], "\[Rule]", 
       RowBox[{"\"\<_6\>\"", "\[Rule]", "\"\<_7\>\""}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"valuehead", "[", "filters_", "]"}], ":=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<conv1\>\"", "\[Rule]", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"filters", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"\"\<_2\>\"", "\[Rule]", 
       RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
      RowBox[{"\"\<_3\>\"", "\[Rule]", "Tanh"}], ",", 
      RowBox[{"\"\<fc1\>\"", "\[Rule]", "64"}], ",", 
      RowBox[{"\"\<_5\>\"", "\[Rule]", "Tanh"}], ",", 
      RowBox[{"\"\<fc2\>\"", "\[Rule]", "1"}], ",", 
      RowBox[{"\"\<_7\>\"", "\[Rule]", "Tanh"}]}], "|>"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"policyhead", "[", "filters_", "]"}], ":=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<conv1\>\"", "\[Rule]", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"filters", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"\"\<_2\>\"", "\[Rule]", 
       RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
      RowBox[{"\"\<_3\>\"", "\[Rule]", "Ramp"}], ",", 
      RowBox[{"\"\<fc1\>\"", "\[Rule]", "64"}], ",", 
      RowBox[{"\"\<_5\>\"", "\[Rule]", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.798909421691331*^9, 3.7989094216917562`*^9}, {
  3.799179165170814*^9, 3.7991791687876883`*^9}, {3.7991792041463213`*^9, 
  3.7991792224957*^9}, {3.799181050038679*^9, 3.7991811440508633`*^9}, {
  3.799181189325276*^9, 3.799181352169532*^9}, {3.7992056160327997`*^9, 
  3.799205619111528*^9}, {3.799205772205287*^9, 3.799205774855582*^9}, {
  3.799205860856963*^9, 3.799205863391922*^9}},
 CellLabel->
  "In[1904]:=",ExpressionUUID->"c2e39b94-51a2-4052-ad5c-9c645d46d098"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<input\>\"", "\[Rule]", 
         RowBox[{"inputblock", "[", "32", "]"}]}], ",", 
        RowBox[{"\"\<res1\>\"", "\[Rule]", 
         RowBox[{"residualblock", "[", "32", "]"}]}], ",", 
        RowBox[{"\"\<res2\>\"", "\[Rule]", 
         RowBox[{"residualblock", "[", "32", "]"}]}], ",", 
        RowBox[{"\"\<res3\>\"", "\[Rule]", 
         RowBox[{"residualblock", "[", "32", "]"}]}], ",", 
        RowBox[{"\"\<res4\>\"", "\[Rule]", 
         RowBox[{"residualblock", "[", "32", "]"}]}], ",", 
        RowBox[{"\"\<value\>\"", "\[Rule]", 
         RowBox[{"valuehead", "[", "2", "]"}]}], ",", 
        RowBox[{"\"\<policy\>\"", "\[Rule]", 
         RowBox[{"policyhead", "[", "4", "]"}]}]}], "|>"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<input\>\"", "\[Rule]", 
        RowBox[{"\"\<res1\>\"", "\[Rule]", 
         RowBox[{"\"\<res2\>\"", "\[Rule]", 
          RowBox[{"\"\<res3\>\"", "\[Rule]", 
           RowBox[{"\"\<res4\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<value\>\"", "\[Rule]", 
               RowBox[{"NetPort", "[", "\"\<Value\>\"", "]"}]}], ",", 
              RowBox[{"\"\<policy\>\"", "\[Rule]", 
               RowBox[{"NetPort", "[", "\"\<Policy\>\"", "]"}]}]}], 
             "}"}]}]}]}]}]}], "}"}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", "64"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.798909428575025*^9, 3.798909610308692*^9}, {
  3.7989137999095993`*^9, 3.798913828618729*^9}, {3.798919881554274*^9, 
  3.798919907215682*^9}, {3.798920647211903*^9, 3.798920662187851*^9}, {
  3.798921880914671*^9, 3.798921885930799*^9}, {3.7989243501928473`*^9, 
  3.798924355929914*^9}, {3.7989499082992067`*^9, 3.798949912860601*^9}},
 CellLabel->
  "In[1908]:=",ExpressionUUID->"26321b8d-243a-4289-bd9e-aa5fd191d079"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"savenet", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"$run", ",", "7"}], "}"}], ",", "net"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7991838885939617`*^9, 3.799183898346574*^9}, {
   3.799199323443655*^9, 3.799199338549563*^9}, 3.79920562720336*^9},
 CellLabel->
  "In[1909]:=",ExpressionUUID->"48d22bf0-9408-4b74-b85b-bb3590f9d058"],

Cell[BoxData[
 TemplateBox[{
  "CreateDirectory", "filex", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/home/tlu/Documents/git/neuralothello/run1/\
nets/net-0007\\\\\\\"\\\"}]\\) already exists.\"", 2, 1909, 181, 
   16703727020889989685, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7992056290970097`*^9, 3.799205786407064*^9, 
  3.799205879124984*^9},
 CellLabel->
  "During evaluation of \
In[1909]:=",ExpressionUUID->"cd21ab22-e25d-48a7-9929-d4c2c7f012b8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getlayerparams", "[", "l_ConvolutionLayer", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"NetExtract", "[", 
      RowBox[{"l", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<weight\>\"", "\[Rule]", "\"\<Weights\>\""}], ",", 
      RowBox[{"\"\<bias\>\"", "\[Rule]", "\"\<Biases\>\""}]}], "|>"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getlayerparams", "[", "l_BatchNormalizationLayer", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"NetExtract", "[", 
      RowBox[{"l", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<weight\>\"", "\[Rule]", "\"\<Scaling\>\""}], ",", 
      RowBox[{"\"\<bias\>\"", "\[Rule]", "\"\<Biases\>\""}], ",", 
      RowBox[{"\"\<running_mean\>\"", "\[Rule]", "\"\<MovingMean\>\""}], ",", 
      RowBox[{"\"\<running_var\>\"", "\[Rule]", "\"\<MovingVariance\>\""}]}], 
     "|>"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getlayerparams", "[", "l_LinearLayer", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"NetExtract", "[", 
      RowBox[{"l", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<weight\>\"", "\[Rule]", "\"\<Weights\>\""}], ",", 
      RowBox[{"\"\<bias\>\"", "\[Rule]", "\"\<Biases\>\""}]}], "|>"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getlayerparams", "[", "___", "]"}], ":=", 
   RowBox[{"<|", "|>"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getnetparams", "[", 
    RowBox[{"prefix_", ",", "net_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"NetChain", ",", "NetGraph"}], "}"}], ",", 
       RowBox[{"Head", "[", "net", "]"}]}], "]"}], ",", 
     RowBox[{"Join", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"getnetparams", "[", 
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"prefix", ",", "#1"}], "]"}], ",", "#2"}], "]"}], "&"}], "@@@", 
        RowBox[{"Normal", "@", 
         RowBox[{"NetExtract", "[", 
          RowBox[{"net", ",", "All"}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"KeyMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"prefix", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"getlayerparams", "@", "net"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getnetparams", "[", "net_", "]"}], ":=", 
   RowBox[{"KeyMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringRiffle", "[", 
       RowBox[{"#", ",", "\"\<.\>\""}], "]"}], "&"}], ",", 
     RowBox[{"getnetparams", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "net"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.799181527670061*^9, 3.799181688590631*^9}, {
   3.799181774565291*^9, 3.7991818100122013`*^9}, {3.7991819893252163`*^9, 
   3.799182004931793*^9}, {3.799182215764804*^9, 3.799182254277594*^9}, {
   3.79918245901519*^9, 3.799182474554434*^9}, {3.7991825087398367`*^9, 
   3.799182565514345*^9}, {3.7991913986919203`*^9, 3.799191421159452*^9}, 
   3.799199353482885*^9},
 CellLabel->
  "In[533]:=",ExpressionUUID->"20f58346-ff4c-44fe-a347-757d35888a21"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ELO estimates", "Subsection",
 CellChangeTimes->{{3.799289673969996*^9, 
  3.7992896837497997`*^9}},ExpressionUUID->"d9887490-d07e-4d57-9710-\
41a4c45479a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$round", "=", "7"}], ";"}]], "Input",
 CellChangeTimes->{{3.79966657829021*^9, 3.799666579746972*^9}},
 CellLabel->
  "In[566]:=",ExpressionUUID->"85a3fa9b-f087-4348-a6c3-bf520c71b0eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testnewnet", "[", 
   RowBox[{"400", ",", "5"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.7996665873668127`*^9},
 CellLabel->
  "In[567]:=",ExpressionUUID->"233af1b6-cf23-4ced-82bc-943f27a9ea02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"$round", "=", "r"}], ";", 
     RowBox[{"testnewnet", "[", 
      RowBox[{"400", ",", "5"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "8", ",", "34"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.79928277127136*^9, 3.7992828641103773`*^9}, {
  3.799282896265871*^9, 3.799283015176221*^9}, {3.799283081983286*^9, 
  3.799283086734539*^9}, {3.7992832576830053`*^9, 3.799283267747836*^9}, {
  3.799289647075224*^9, 3.799289659530251*^9}, {3.7992915430977182`*^9, 
  3.799291544418728*^9}},ExpressionUUID->"6d7cac00-8e15-4492-8993-\
78b4acae1611"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testresults", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"StringRiffle", "[", 
     RowBox[{
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"Import", "[", "\"\<run5/testresults.txt\>\"", "]"}], ",", 
        "\"\<\\n\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<{\>\"", ",", "\"\<,\>\"", ",", "\"\<}\>\""}], "}"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$firstnetoffset", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"testresults", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$numnets", "=", 
   RowBox[{"Length", "@", 
    RowBox[{"Union", "@", 
     RowBox[{"Flatten", "[", 
      RowBox[{"testresults", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.799289689710681*^9, 3.799289705287421*^9}, {
   3.7992897591512527`*^9, 3.799289810821951*^9}, {3.799289908573935*^9, 
   3.7992899184803*^9}, {3.799289963270652*^9, 3.799289979029085*^9}, {
   3.7993380506464376`*^9, 3.799338071499859*^9}, 3.799452147249612*^9, 
   3.799465619061956*^9, 3.799465754006506*^9, 3.799666697400619*^9, 
   3.799696721625826*^9, 3.79971687593574*^9, 3.7997169451440773`*^9, 
   3.799726632288803*^9, 3.7999565059975863`*^9, 3.8000341055793*^9, 
   3.8000370373098717`*^9, {3.8003314131331873`*^9, 3.800331413370981*^9}, {
   3.800718270847712*^9, 3.800718274874794*^9}, {3.800797877411767*^9, 
   3.8007978790202723`*^9}, {3.8008002909276237`*^9, 3.800800291566752*^9}, 
   3.8485114049110813`*^9, 3.8485123092870693`*^9, {3.848512401748744*^9, 
   3.848512410580723*^9}, 3.8485144564765*^9, 3.8485148920156393`*^9, 
   3.8485152693462763`*^9, 3.8485186014637814`*^9, 3.848518786030175*^9},
 CellLabel->
  "In[717]:=",ExpressionUUID->"90a9111b-f328-427a-98ab-faf8c08b4af8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "mcmc.wl"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"binomialpdf", "[", 
    RowBox[{"p_", ",", "n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "-", "x"}], ")"}], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "p"}], "]"}]}], "+", 
    RowBox[{"x", " ", 
     RowBox[{"Log", "[", "p", "]"}]}], "+", 
    RowBox[{"LogGamma", "[", 
     RowBox[{"1", "+", "n"}], "]"}], "-", 
    RowBox[{"LogGamma", "[", 
     RowBox[{"1", "+", "n", "-", "x"}], "]"}], "-", 
    RowBox[{"LogGamma", "[", 
     RowBox[{"1", "+", "x"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "=", 
      RowBox[{"ToPackedArray", "[", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"testresults", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "-", "$firstnetoffset", 
        "+", "1"}], "]"}]}], ",", 
     RowBox[{"a2", "=", 
      RowBox[{"ToPackedArray", "[", 
       RowBox[{"Total", "/@", 
        RowBox[{"testresults", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"a3", "=", 
      RowBox[{"ToPackedArray", "[", 
       RowBox[{
        RowBox[{"testresults", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{"1.0", ",", "0.5", ",", "0.0"}], "}"}]}], "]"}]}]}], "}"}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"logp", "[", "elos_", "]"}], ":=", 
     RowBox[{"Total", "[", 
      RowBox[{"binomialpdf", "[", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{"elos", "[", 
                  RowBox[{"[", "a1", "]"}], "]"}], ",", "2"}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "/", "400.0"}], 
             ")"}]}]}], ")"}]}], ",", "a2", ",", "a3"}], "]"}], "]"}]}], 
    ";"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"chain", "=", 
   RowBox[{"MonteCarloSample", "[", 
    RowBox[{
     RowBox[{"logp", "@*", "List"}], ",", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "20"}], "]"}], ",", 
       RowBox[{"{", "$numnets", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"400000", ",", "Automatic", ",", "Automatic"}], "}"}], ",", 
     RowBox[{"\"\<LogProbability\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<RandomWalk\>\"", ",", 
        RowBox[{"\"\<JumpDistribution\>\"", "\[Rule]", 
         RowBox[{"MultinormalDistribution", "[", 
          RowBox[{"N", "@", 
           RowBox[{"IdentityMatrix", "[", "$numnets", "]"}]}], "]"}]}]}], 
       "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.848512584209312*^9, 3.848512595121022*^9}, 
   3.84851446175281*^9, 3.848518790579976*^9},
 CellLabel->
  "In[720]:=",ExpressionUUID->"bb069d13-e5f1-41b6-82d3-0b8d711f8093"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "-", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "&"}], "@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Around", "[", 
         RowBox[{
          RowBox[{"Mean", "[", "#", "]"}], ",", 
          RowBox[{"StandardDeviation", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
       RowBox[{"Transpose", "@", "chain"}]}], ")"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"All", ",", "All"}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.6"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"14", ",", "Black"}], "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "10"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "All"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Epoch\>\"", ",", "\"\<Relative Elo\>\""}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.799291473656416*^9, 3.799291494530911*^9}, {
   3.7992915965810337`*^9, 3.7992916057752953`*^9}, {3.799342316080673*^9, 
   3.799342325788932*^9}, {3.799536704284699*^9, 3.799536732680797*^9}, {
   3.7995552446547127`*^9, 3.799555254751989*^9}, {3.799666710898677*^9, 
   3.799666711321433*^9}, {3.799726708155738*^9, 3.799726708685583*^9}, {
   3.799782926396276*^9, 3.79978293803655*^9}, {3.799956542972167*^9, 
   3.799956543274082*^9}, {3.800023222877717*^9, 3.80002322634079*^9}, {
   3.800121533960093*^9, 3.8001215343048277`*^9}, {3.8001226029411077`*^9, 
   3.800122603687955*^9}, 3.8003314380336246`*^9, {3.800369739187113*^9, 
   3.8003697425012693`*^9}, {3.800718379028981*^9, 3.800718379745862*^9}, {
   3.800800584245184*^9, 3.8008005845301123`*^9}, {3.8485119108002453`*^9, 
   3.848512088045726*^9}, {3.84851225995446*^9, 3.848512299941001*^9}},
 CellLabel->
  "In[724]:=",ExpressionUUID->"e0714484-8636-40ca-897b-e9b66d04963b"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {LineBox[{{1., -22.937659080821657`}, {1., 0.}}], 
        LineBox[{{1., 0.}, {1., 22.937659080821657`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{2., 124.6871946278192}, {2., 145.74225522121583`}}], 
        LineBox[{{2., 145.74225522121583`}, {2., 166.79731581461246`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{3., 290.1664396901849}, {3., 310.40479170660774`}}], 
        LineBox[{{3., 310.40479170660774`}, {3., 330.64314372303056`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{4., 211.5117558031648}, {4., 231.2908225709259}}], 
        LineBox[{{4., 231.2908225709259}, {4., 251.06988933868703`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{5., 572.2715754048359}, {5., 591.7509864989457}}], 
        LineBox[{{5., 591.7509864989457}, {5., 611.2303975930556}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{6., 650.8973077000281}, {6., 670.5355972416943}}], 
        LineBox[{{6., 670.5355972416943}, {6., 690.1738867833604}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{7., 721.992102456166}, {7., 741.5539957593318}}], 
        LineBox[{{7., 741.5539957593318}, {7., 761.1158890624976}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{8., 735.4395984402948}, {8., 753.7718054739541}}], 
        LineBox[{{8., 753.7718054739541}, {8., 772.1040125076134}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{9., 869.1341806405268}, {9., 886.4118647080846}}], 
        LineBox[{{9., 886.4118647080846}, {9., 903.6895487756425}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{10., 905.2196001761721}, {10., 922.3752851158062}}], 
        LineBox[{{10., 922.3752851158062}, {10., 939.5309700554402}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{11., 944.9620504644796}, {11., 961.4703705572979}}], 
        LineBox[{{11., 961.4703705572979}, {11., 977.9786906501162}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{12., 1024.2630288789417`}, {12., 1040.7290385305064`}}], 
        LineBox[{{12., 1040.7290385305064`}, {12., 1057.195048182071}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{13., 1053.0569027215765`}, {13., 1069.5487951197024`}}], 
        LineBox[{{13., 1069.5487951197024`}, {13., 1086.0406875178282`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{14., 1070.4075431595688`}, {14., 1087.0352483089932`}}], 
        LineBox[{{14., 1087.0352483089932`}, {14., 1103.6629534584176`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{15., 1131.3367216158333`}, {15., 1147.7485435343983`}}], 
        LineBox[{{15., 1147.7485435343983`}, {15., 1164.1603654529633`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{16., 1144.326155147373}, {16., 1160.8410730069427`}}], 
        LineBox[{{16., 1160.8410730069427`}, {16., 1177.3559908665125`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{17., 1178.9922808801102`}, {17., 1195.7631351712103`}}], 
        LineBox[{{17., 1195.7631351712103`}, {17., 1212.5339894623103`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{18., 1229.6118148498213`}, {18., 1245.893498864974}}], 
        LineBox[{{18., 1245.893498864974}, {18., 1262.1751828801266`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{19., 1240.8926711757338`}, {19., 1257.1194209594917`}}], 
        LineBox[{{19., 1257.1194209594917`}, {19., 1273.3461707432496`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{20., 1268.1475650990926`}, {20., 1284.3328195591994`}}], 
        LineBox[{{20., 1284.3328195591994`}, {20., 1300.5180740193061`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{21., 1268.4412725331833`}, {21., 1283.9059144226374`}}], 
        LineBox[{{21., 1283.9059144226374`}, {21., 1299.3705563120914`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{22., 1306.3149917801375`}, {22., 1321.8742529038316`}}], 
        LineBox[{{22., 1321.8742529038316`}, {22., 1337.4335140275257`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{23., 1235.465339509488}, {23., 1251.113268147038}}], 
        LineBox[{{23., 1251.113268147038}, {23., 1266.761196784588}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{24., 1325.1820046574303`}, {24., 1340.6749384736142`}}], 
        LineBox[{{24., 1340.6749384736142`}, {24., 1356.1678722897982`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{25., 1355.01439109255}, {25., 1370.7402035978866`}}], 
        LineBox[{{25., 1370.7402035978866`}, {25., 1386.4660161032232`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{26., 1337.2477100452932`}, {26., 1353.2177116810465`}}], 
        LineBox[{{26., 1353.2177116810465`}, {26., 1369.1877133167998`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{27., 1333.6113965866957`}, {27., 1350.1246006264457`}}], 
        LineBox[{{27., 1350.1246006264457`}, {27., 1366.6378046661957`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{28., 1386.457421702233}, {28., 1402.3908649884738`}}], 
        LineBox[{{28., 1402.3908649884738`}, {28., 1418.3243082747147`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{29., 1404.8486138263704`}, {29., 1420.8218020435763`}}], 
        LineBox[{{29., 1420.8218020435763`}, {29., 1436.7949902607822`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{30., 1402.0906135185048`}, {30., 1418.0176061848197`}}], 
        LineBox[{{30., 1418.0176061848197`}, {30., 1433.9445988511345`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{31., 1406.7063076045115`}, {31., 1422.648850448306}}], 
        LineBox[{{31., 1422.648850448306}, {31., 1438.5913932921003`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{32., 1409.6918128600184`}, {32., 1424.6542986140337`}}], 
        LineBox[{{32., 1424.6542986140337`}, {32., 1439.616784368049}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{33., 1442.751719525426}, {33., 1457.9745707868958`}}], 
        LineBox[{{33., 1457.9745707868958`}, {33., 1473.1974220483655`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{34., 1448.0266994547533`}, {34., 1463.2051448265665`}}], 
        LineBox[{{34., 1463.2051448265665`}, {34., 1478.3835901983798`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{35., 1440.5637356544923`}, {35., 1455.400922341384}}], 
        LineBox[{{35., 1455.400922341384}, {35., 1470.2381090282759`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{36., 1405.7425720599167`}, {36., 1421.6972384773585`}}], 
        LineBox[{{36., 1421.6972384773585`}, {36., 1437.6519048948003`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{37., 1439.0330516139704`}, {37., 1454.5283310755003`}}], 
        LineBox[{{37., 1454.5283310755003`}, {37., 1470.0236105370302`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{38., 1420.6581653530584`}, {38., 1435.7669224037143`}}], 
        LineBox[{{38., 1435.7669224037143`}, {38., 1450.8756794543701`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{39., 1468.2151994839862`}, {39., 1483.9877650853007`}}], 
        LineBox[{{39., 1483.9877650853007`}, {39., 1499.7603306866151`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{40., 1460.3838749847796`}, {40., 1475.97738186992}}], 
        LineBox[{{40., 1475.97738186992}, {40., 1491.5708887550604`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{41., 1463.3752062619699`}, {41., 1478.6842035497475`}}], 
        LineBox[{{41., 1478.6842035497475`}, {41., 1493.9932008375251`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{42., 1466.5524105829836`}, {42., 1482.2285824488686`}}], 
        LineBox[{{42., 1482.2285824488686`}, {42., 1497.9047543147535`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{43., 1487.3827698527168`}, {43., 1502.5318268187084`}}], 
        LineBox[{{43., 1502.5318268187084`}, {43., 1517.6808837847}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{44., 1494.3818061928835`}, {44., 1509.4647933859999`}}], 
        LineBox[{{44., 1509.4647933859999`}, {44., 1524.5477805791163`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{45., 1513.0179715346378`}, {45., 1527.9321173364879`}}], 
        LineBox[{{45., 1527.9321173364879`}, {45., 1542.846263138338}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{46., 1510.6688391769374`}, {46., 1525.808877103738}}], 
        LineBox[{{46., 1525.808877103738}, {46., 1540.9489150305387`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{47., 1488.4307965176083`}, {47., 1503.5515612717309`}}], 
        LineBox[{{47., 1503.5515612717309`}, {47., 1518.6723260258534`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{48., 1539.5536153536932`}, {48., 1555.4670987009977`}}], 
        LineBox[{{48., 1555.4670987009977`}, {48., 1571.3805820483021`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{49., 1536.3101400747823`}, {49., 1551.9355880947007`}}], 
        LineBox[{{49., 1551.9355880947007`}, {49., 1567.5610361146191`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{50., 1494.9493051984768`}, {50., 1509.742584579019}}], 
        LineBox[{{50., 1509.742584579019}, {50., 1524.535863959561}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{51., 1522.7127057347877`}, {51., 1537.7224043949898`}}], 
        LineBox[{{51., 1537.7224043949898`}, {51., 1552.7321030551918`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{52., 1512.9303952865112`}, {52., 1527.4631975324075`}}], 
        LineBox[{{52., 1527.4631975324075`}, {52., 1541.995999778304}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{53., 1509.2264623164488`}, {53., 1523.09047911934}}], 
        LineBox[{{53., 1523.09047911934}, {53., 1536.9544959222312`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{54., 1512.4627092880069`}, {54., 1527.0252162053794`}}], 
        LineBox[{{54., 1527.0252162053794`}, {54., 1541.5877231227519`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{55., 1519.144573660644}, {55., 1533.8205182759118`}}], 
        LineBox[{{55., 1533.8205182759118`}, {55., 1548.4964628911796`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{56., 1534.709076380022}, {56., 1548.3138097159474`}}], 
        LineBox[{{56., 1548.3138097159474`}, {56., 1561.9185430518728`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{57., 1492.6991544030545`}, {57., 1506.4177358616507`}}], 
        LineBox[{{57., 1506.4177358616507`}, {57., 1520.136317320247}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{58., 1519.409970120782}, {58., 1534.0287222503525`}}], 
        LineBox[{{58., 1534.0287222503525`}, {58., 1548.647474379923}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{59., 1543.23641415899}, {59., 1558.169161010429}}], 
        LineBox[{{59., 1558.169161010429}, {59., 1573.1019078618679`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{60., 1550.624163140519}, {60., 1564.5367156423413`}}], 
        LineBox[{{60., 1564.5367156423413`}, {60., 1578.4492681441636`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{61., 1539.6952360177104`}, {61., 1554.4228626635263`}}], 
        LineBox[{{61., 1554.4228626635263`}, {61., 1569.1504893093422`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{62., 1525.4548721211847`}, {62., 1540.726025214727}}], 
        LineBox[{{62., 1540.726025214727}, {62., 1555.9971783082694`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{63., 1556.086477964394}, {63., 1570.0914454441545`}}], 
        LineBox[{{63., 1570.0914454441545`}, {63., 1584.096412923915}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{64., 1518.242156016756}, {64., 1533.0558291290697`}}], 
        LineBox[{{64., 1533.0558291290697`}, {64., 1547.8695022413833`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{65., 1521.3471300573965`}, {65., 1536.5491435029696`}}], 
        LineBox[{{65., 1536.5491435029696`}, {65., 1551.7511569485428`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{66., 1556.2815400383965`}, {66., 1570.741845998475}}], 
        LineBox[{{66., 1570.741845998475}, {66., 1585.2021519585533`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{67., 1541.6745645697874`}, {67., 1555.7478173648867`}}], 
        LineBox[{{67., 1555.7478173648867`}, {67., 1569.821070159986}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{68., 1547.2990864028643`}, {68., 1561.099028254408}}], 
        LineBox[{{68., 1561.099028254408}, {68., 1574.8989701059518`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{69., 1544.2759115389993`}, {69., 1558.2527134447162`}}], 
        LineBox[{{69., 1558.2527134447162`}, {69., 1572.229515350433}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{70., 1562.4888650838186`}, {70., 1576.3314049415058`}}], 
        LineBox[{{70., 1576.3314049415058`}, {70., 1590.173944799193}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{71., 1562.1094247101303`}, {71., 1575.8935895674967`}}], 
        LineBox[{{71., 1575.8935895674967`}, {71., 1589.6777544248632`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{72., 1574.5887523862034`}, {72., 1588.4819465947285`}}], 
        LineBox[{{72., 1588.4819465947285`}, {72., 1602.3751408032535`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{73., 1582.580585529548}, {73., 1596.5606601484483`}}], 
        LineBox[{{73., 1596.5606601484483`}, {73., 1610.5407347673486`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{74., 1599.9284023753787`}, {74., 1614.6167362257063`}}], 
        LineBox[{{74., 1614.6167362257063`}, {74., 1629.3050700760339`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{75., 1563.6327756040616`}, {75., 1577.9853697970607`}}], 
        LineBox[{{75., 1577.9853697970607`}, {75., 1592.3379639900597`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{76., 1576.5510653391393`}, {76., 1591.10827606289}}], 
        LineBox[{{76., 1591.10827606289}, {76., 1605.6654867866405`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{77., 1504.947243465471}, {77., 1519.4962298970152`}}], 
        LineBox[{{77., 1519.4962298970152`}, {77., 1534.0452163285593`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{78., 1554.5354274878853`}, {78., 1568.5710919758826`}}], 
        LineBox[{{78., 1568.5710919758826`}, {78., 1582.60675646388}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{79., 1519.3830528851956`}, {79., 1532.866830717011}}], 
        LineBox[{{79., 1532.866830717011}, {79., 1546.3506085488264`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{80., 1569.2081360608795`}, {80., 1583.0390673263098`}}], 
        LineBox[{{80., 1583.0390673263098`}, {80., 1596.86999859174}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{81., 1555.2325576603375`}, {81., 1569.4909687086554`}}], 
        LineBox[{{81., 1569.4909687086554`}, {81., 1583.7493797569732`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{82., 1585.109943381819}, {82., 1598.0851874952893`}}], 
        LineBox[{{82., 1598.0851874952893`}, {82., 1611.0604316087597`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{83., 1599.615323645958}, {83., 1612.9529970797694`}}], 
        LineBox[{{83., 1612.9529970797694`}, {83., 1626.2906705135808`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{84., 1564.0500900971954`}, {84., 1578.093976814433}}], 
        LineBox[{{84., 1578.093976814433}, {84., 1592.1378635316707`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{85., 1571.7346871412185`}, {85., 1584.9102254079073`}}], 
        LineBox[{{85., 1584.9102254079073`}, {85., 1598.0857636745961`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{86., 1536.6197351126852`}, {86., 1550.3127611306343`}}], 
        LineBox[{{86., 1550.3127611306343`}, {86., 1564.0057871485833`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{87., 1564.1221575426612`}, {87., 1577.606147294468}}], 
        LineBox[{{87., 1577.606147294468}, {87., 1591.0901370462748`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{88., 1612.1072768619877`}, {88., 1625.646165450796}}], 
        LineBox[{{88., 1625.646165450796}, {88., 1639.1850540396042`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{89., 1593.3017901781977`}, {89., 1606.2728581859772`}}], 
        LineBox[{{89., 1606.2728581859772`}, {89., 1619.2439261937566`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{90., 1578.8306494925212`}, {90., 1591.4398622684018`}}], 
        LineBox[{{90., 1591.4398622684018`}, {90., 1604.0490750442825`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{91., 1560.8120514176242`}, {91., 1574.099618275253}}], 
        LineBox[{{91., 1574.099618275253}, {91., 1587.387185132882}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{92., 1586.6258512677425`}, {92., 1599.7668556761937`}}], 
        LineBox[{{92., 1599.7668556761937`}, {92., 1612.9078600846449`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{93., 1607.063999796419}, {93., 1619.5993424987525`}}], 
        LineBox[{{93., 1619.5993424987525`}, {93., 1632.134685201086}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{94., 1571.6999655028942`}, {94., 1584.3752929686054`}}], 
        LineBox[{{94., 1584.3752929686054`}, {94., 1597.0506204343167`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{95., 1605.3054771659151`}, {95., 1617.913140518721}}], 
        LineBox[{{95., 1617.913140518721}, {95., 1630.520803871527}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{96., 1605.889934427531}, {96., 1618.3513558515535`}}], 
        LineBox[{{96., 1618.3513558515535`}, {96., 1630.812777275576}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{97., 1595.159838821027}, {97., 1607.863664137983}}], 
        LineBox[{{97., 1607.863664137983}, {97., 1620.567489454939}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{98., 1554.6009083144625`}, {98., 1567.1243361235283`}}], 
        LineBox[{{98., 1567.1243361235283`}, {98., 1579.6477639325942`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{99., 1569.646600202399}, {99., 1581.6872531498004`}}], 
        LineBox[{{99., 1581.6872531498004`}, {99., 1593.7279060972019`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{100., 1592.251749078616}, {100., 1603.8070632403653`}}], 
        LineBox[{{100., 1603.8070632403653`}, {100., 1615.3623774021146`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{101., 1616.2579789132058`}, {101., 1628.2581340279123`}}], 
        LineBox[{{101., 1628.2581340279123`}, {101., 1640.2582891426189`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{102., 1589.245491908504}, {102., 1601.5205955958497`}}], 
        LineBox[{{102., 1601.5205955958497`}, {102., 1613.7956992831955`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{103., 1612.1545067135855`}, {103., 1623.77005560621}}], 
        LineBox[{{103., 1623.77005560621}, {103., 1635.3856044988345`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{104., 1624.3440871518023`}, {104., 1636.3079141917337`}}], 
        LineBox[{{104., 1636.3079141917337`}, {104., 1648.2717412316651`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{105., 1619.046148142049}, {105., 1631.3137791210743`}}], 
        LineBox[{{105., 1631.3137791210743`}, {105., 1643.5814101000994`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{106., 1628.9656656908812`}, {106., 1641.5534178524792`}}], 
        LineBox[{{106., 1641.5534178524792`}, {106., 1654.1411700140773`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{107., 1611.9996912445633`}, {107., 1624.3652869532523`}}], 
        LineBox[{{107., 1624.3652869532523`}, {107., 1636.7308826619412`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{108., 1592.0944739775182`}, {108., 1604.4412627495192`}}], 
        LineBox[{{108., 1604.4412627495192`}, {108., 1616.7880515215202`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{109., 1615.7391907580968`}, {109., 1627.4531070374924`}}], 
        LineBox[{{109., 1627.4531070374924`}, {109., 1639.167023316888}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{110., 1601.9724417343882`}, {110., 1613.0754846047291`}}], 
        LineBox[{{110., 1613.0754846047291`}, {110., 1624.17852747507}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{111., 1605.9733720966458`}, {111., 1618.0395621553369`}}], 
        LineBox[{{111., 1618.0395621553369`}, {111., 1630.105752214028}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{112., 1617.3214798568506`}, {112., 1628.554186745034}}], 
        LineBox[{{112., 1628.554186745034}, {112., 1639.7868936332175`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{113., 1611.8897371594976`}, {113., 1623.01901228398}}], 
        LineBox[{{113., 1623.01901228398}, {113., 1634.1482874084622`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{114., 1603.1985837657514`}, {114., 1614.041351208813}}], 
        LineBox[{{114., 1614.041351208813}, {114., 1624.8841186518746`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{115., 1610.0652628048074`}, {115., 1621.4208170968307`}}], 
        LineBox[{{115., 1621.4208170968307`}, {115., 1632.776371388854}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{116., 1608.9639667964564`}, {116., 1619.7531528805155`}}], 
        LineBox[{{116., 1619.7531528805155`}, {116., 1630.5423389645746`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{117., 1635.0201923709608`}, {117., 1645.7203651014306`}}], 
        LineBox[{{117., 1645.7203651014306`}, {117., 1656.4205378319004`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{118., 1554.1684281888445`}, {118., 1564.8267200898126`}}], 
        LineBox[{{118., 1564.8267200898126`}, {118., 1575.4850119907808`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{119., 1589.7022789590317`}, {119., 1600.4743293369688`}}], 
        LineBox[{{119., 1600.4743293369688`}, {119., 1611.246379714906}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{120., 1628.470015945153}, {120., 1639.017023607683}}], 
        LineBox[{{120., 1639.017023607683}, {120., 1649.5640312702133`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{121., 1586.6024568977273`}, {121., 1596.6555106527521`}}], 
        LineBox[{{121., 1596.6555106527521`}, {121., 1606.708564407777}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{122., 1590.5218262372027`}, {122., 1601.2054981837855`}}], 
        LineBox[{{122., 1601.2054981837855`}, {122., 1611.8891701303683`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{123., 1609.57768346621}, {123., 1619.263771165933}}], 
        LineBox[{{123., 1619.263771165933}, {123., 1628.9498588656559`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{124., 1605.7315616828384`}, {124., 1616.0728035535908`}}], 
        LineBox[{{124., 1616.0728035535908`}, {124., 1626.4140454243432`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{125., 1625.8285009287292`}, {125., 1636.6156295783676`}}], 
        LineBox[{{125., 1636.6156295783676`}, {125., 1647.402758228006}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{126., 1611.1533797648408`}, {126., 1622.2110845271402`}}], 
        LineBox[{{126., 1622.2110845271402`}, {126., 1633.2687892894396`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{127., 1629.2579583535644`}, {127., 1639.9851309634537`}}], 
        LineBox[{{127., 1639.9851309634537`}, {127., 1650.712303573343}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{128., 1608.9076377678903`}, {128., 1619.567997859843}}], 
        LineBox[{{128., 1619.567997859843}, {128., 1630.2283579517957`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{129., 1606.8997237171807`}, {129., 1617.0900851067713`}}], 
        LineBox[{{129., 1617.0900851067713`}, {129., 1627.280446496362}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{130., 1621.8078050715544`}, {130., 1632.3518014950826`}}], 
        LineBox[{{130., 1632.3518014950826`}, {130., 1642.8957979186107`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{131., 1637.6494143875607`}, {131., 1648.5918044850491`}}], 
        LineBox[{{131., 1648.5918044850491`}, {131., 1659.5341945825376`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{132., 1657.277840249055}, {132., 1668.0520851473816`}}], 
        LineBox[{{132., 1668.0520851473816`}, {132., 1678.8263300457081`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{133., 1661.3382656176989`}, {133., 1671.3062923910998`}}], 
        LineBox[{{133., 1671.3062923910998`}, {133., 1681.2743191645006`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{134., 1671.4273021362274`}, {134., 1682.1510239427687`}}], 
        LineBox[{{134., 1682.1510239427687`}, {134., 1692.87474574931}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{135., 1666.9090810422153`}, {135., 1677.7650223403996`}}], 
        LineBox[{{135., 1677.7650223403996`}, {135., 1688.6209636385838`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{136., 1686.617467094631}, {136., 1698.0011258877673`}}], 
        LineBox[{{136., 1698.0011258877673`}, {136., 1709.3847846809037`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{137., 1703.810762778203}, {137., 1715.4422899647575`}}], 
        LineBox[{{137., 1715.4422899647575`}, {137., 1727.073817151312}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{138., 1684.60078065203}, {138., 1695.386796132544}}], 
        LineBox[{{138., 1695.386796132544}, {138., 1706.1728116130582`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{139., 1692.9377305260905`}, {139., 1703.7766193209263`}}], 
        LineBox[{{139., 1703.7766193209263`}, {139., 1714.6155081157622`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{140., 1690.8549461033926`}, {140., 1701.678316564872}}], 
        LineBox[{{140., 1701.678316564872}, {140., 1712.5016870263512`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{141., 1669.4520170842404`}, {141., 1680.4385660693606`}}], 
        LineBox[{{141., 1680.4385660693606`}, {141., 1691.4251150544808`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{142., 1713.2547263128765`}, {142., 1724.3303325195457`}}], 
        LineBox[{{142., 1724.3303325195457`}, {142., 1735.4059387262148`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{143., 1702.0031256820319`}, {143., 1712.6396422569317`}}], 
        LineBox[{{143., 1712.6396422569317`}, {143., 1723.2761588318315`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{144., 1685.4735353452954`}, {144., 1695.757723005232}}], 
        LineBox[{{144., 1695.757723005232}, {144., 1706.0419106651686`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{145., 1699.164033960374}, {145., 1710.0920054850344`}}], 
        LineBox[{{145., 1710.0920054850344`}, {145., 1721.019977009695}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{146., 1702.6435616222627`}, {146., 1713.4298501684082`}}], 
        LineBox[{{146., 1713.4298501684082`}, {146., 1724.2161387145536`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{147., 1690.6300257879639`}, {147., 1701.7773143360869`}}], 
        LineBox[{{147., 1701.7773143360869`}, {147., 1712.92460288421}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{148., 1692.6245407422464`}, {148., 1703.9354557731724`}}], 
        LineBox[{{148., 1703.9354557731724`}, {148., 1715.2463708040984`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{149., 1722.9057871103973`}, {149., 1733.9063452244707`}}], 
        LineBox[{{149., 1733.9063452244707`}, {149., 1744.906903338544}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{150., 1684.426754150963}, {150., 1695.5551080447642`}}], 
        LineBox[{{150., 1695.5551080447642`}, {150., 1706.6834619385654`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{151., 1702.8041277810507`}, {151., 1714.0746347752029`}}], 
        LineBox[{{151., 1714.0746347752029`}, {151., 1725.345141769355}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{152., 1717.7154869635551`}, {152., 1728.8635669937096`}}], 
        LineBox[{{152., 1728.8635669937096`}, {152., 1740.011647023864}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{153., 1699.3412904597974`}, {153., 1711.0521513052045`}}], 
        LineBox[{{153., 1711.0521513052045`}, {153., 1722.7630121506115`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{154., 1689.8466565437502`}, {154., 1701.3614097508853`}}], 
        LineBox[{{154., 1701.3614097508853`}, {154., 1712.8761629580204`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{155., 1700.0805300666048`}, {155., 1711.7248985077897`}}], 
        LineBox[{{155., 1711.7248985077897`}, {155., 1723.3692669489747`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{156., 1704.717256172894}, {156., 1716.8483986436881`}}], 
        LineBox[{{156., 1716.8483986436881`}, {156., 1728.9795411144823`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{157., 1713.3322653374044`}, {157., 1725.4066777523694`}}], 
        LineBox[{{157., 1725.4066777523694`}, {157., 1737.4810901673345`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{158., 1709.0848269183034`}, {158., 1720.9547318048612`}}], 
        LineBox[{{158., 1720.9547318048612`}, {158., 1732.824636691419}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{159., 1700.6667043929208`}, {159., 1712.793539741868}}], 
        LineBox[{{159., 1712.793539741868}, {159., 1724.9203750908152`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{160., 1700.4174942517416`}, {160., 1713.2298835511488`}}], 
        LineBox[{{160., 1713.2298835511488`}, {160., 1726.042272850556}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{161., 1706.867410924894}, {161., 1720.4340497997346`}}], 
        LineBox[{{161., 1720.4340497997346`}, {161., 1734.000688674575}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{162., 1704.9611091598006`}, {162., 1717.2195591957015`}}], 
        LineBox[{{162., 1717.2195591957015`}, {162., 1729.4780092316025`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{163., 1712.4263104365095`}, {163., 1725.013938780937}}], 
        LineBox[{{163., 1725.013938780937}, {163., 1737.6015671253645`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{164., 1709.440722830635}, {164., 1722.2505520019656`}}], 
        LineBox[{{164., 1722.2505520019656`}, {164., 1735.0603811732963`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{165., 1708.5506162625113`}, {165., 1720.6775826609914`}}], 
        LineBox[{{165., 1720.6775826609914`}, {165., 1732.8045490594716`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{166., 1704.8406370426305`}, {166., 1717.9821071066756`}}], 
        LineBox[{{166., 1717.9821071066756`}, {166., 1731.1235771707206`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{167., 1703.1593498959141`}, {167., 1716.5060429069285`}}], 
        LineBox[{{167., 1716.5060429069285`}, {167., 1729.852735917943}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{168., 1695.3093421678732`}, {168., 1708.0138541093086`}}], 
        LineBox[{{168., 1708.0138541093086`}, {168., 1720.718366050744}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{169., 1710.0970704899923`}, {169., 1722.6904928648073`}}], 
        LineBox[{{169., 1722.6904928648073`}, {169., 1735.2839152396223`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{170., 1705.716244480314}, {170., 1719.5424363184322`}}], 
        LineBox[{{170., 1719.5424363184322`}, {170., 1733.3686281565506`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{171., 1702.953569768772}, {171., 1716.9724485452082`}}], 
        LineBox[{{171., 1716.9724485452082`}, {171., 1730.9913273216443`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{172., 1726.6262009534014`}, {172., 1739.8343540993442`}}], 
        LineBox[{{172., 1739.8343540993442`}, {172., 1753.042507245287}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{173., 1716.3195058867125`}, {173., 1730.0424159287763`}}], 
        LineBox[{{173., 1730.0424159287763`}, {173., 1743.7653259708402`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{174., 1707.5427250674982`}, {174., 1721.6369316915743`}}], 
        LineBox[{{174., 1721.6369316915743`}, {174., 1735.7311383156505`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{175., 1712.9475577709911`}, {175., 1726.7034537221411`}}], 
        LineBox[{{175., 1726.7034537221411`}, {175., 1740.4593496732912`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{176., 1711.710942181378}, {176., 1724.921437182098}}], 
        LineBox[{{176., 1724.921437182098}, {176., 1738.1319321828182`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{177., 1700.437773348331}, {177., 1714.4172696937085`}}], 
        LineBox[{{177., 1714.4172696937085`}, {177., 1728.396766039086}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{178., 1705.0218025263562`}, {178., 1719.5388343385125`}}], 
        LineBox[{{178., 1719.5388343385125`}, {178., 1734.0558661506689`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{179., 1707.9117442476165`}, {179., 1721.6412767425786`}}], 
        LineBox[{{179., 1721.6412767425786`}, {179., 1735.3708092375407`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{180., 1694.333483879752}, {180., 1709.0613814257752`}}], 
        LineBox[{{180., 1709.0613814257752`}, {180., 1723.7892789717982`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{181., 1708.4301334563913`}, {181., 1722.1995479022248`}}], 
        LineBox[{{181., 1722.1995479022248`}, {181., 1735.9689623480583`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{182., 1716.1927482455342`}, {182., 1729.4423067572523`}}], 
        LineBox[{{182., 1729.4423067572523`}, {182., 1742.6918652689703`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{183., 1696.9469821921996`}, {183., 1711.775566684558}}], 
        LineBox[{{183., 1711.775566684558}, {183., 1726.6041511769165`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{184., 1710.4205829840223`}, {184., 1724.5121898882128`}}], 
        LineBox[{{184., 1724.5121898882128`}, {184., 1738.6037967924033`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{185., 1708.3174159281916`}, {185., 1722.239079319014}}], 
        LineBox[{{185., 1722.239079319014}, {185., 1736.1607427098365`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{186., 1719.199798924258}, {186., 1733.622276332497}}], 
        LineBox[{{186., 1733.622276332497}, {186., 1748.044753740736}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{187., 1718.1810345724746`}, {187., 1733.170404945201}}], 
        LineBox[{{187., 1733.170404945201}, {187., 1748.1597753179274`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{188., 1708.275521696793}, {188., 1723.144404218414}}], 
        LineBox[{{188., 1723.144404218414}, {188., 1738.0132867400348`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{189., 1715.4090934106248`}, {189., 1730.187861126985}}], 
        LineBox[{{189., 1730.187861126985}, {189., 1744.966628843345}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{190., 1723.3514312398693`}, {190., 1738.89999049858}}], 
        LineBox[{{190., 1738.89999049858}, {190., 1754.448549757291}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{191., 1705.6414852236242`}, {191., 1720.120915562601}}], 
        LineBox[{{191., 1720.120915562601}, {191., 1734.600345901578}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{192., 1721.804273481133}, {192., 1736.444069343769}}], 
        LineBox[{{192., 1736.444069343769}, {192., 1751.0838652064049`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{193., 1735.7023262805408`}, {193., 1750.8240352889486`}}], 
        LineBox[{{193., 1750.8240352889486`}, {193., 1765.9457442973564`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{194., 1728.5764522636346`}, {194., 1743.4537685314626`}}], 
        LineBox[{{194., 1743.4537685314626`}, {194., 1758.3310847992907`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{195., 1715.088845709178}, {195., 1730.3159969743203`}}], 
        LineBox[{{195., 1730.3159969743203`}, {195., 1745.5431482394627`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{196., 1708.675953379736}, {196., 1723.1832309528302`}}], 
        LineBox[{{196., 1723.1832309528302`}, {196., 1737.6905085259243`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{197., 1710.8851865613244`}, {197., 1725.629103849498}}], 
        LineBox[{{197., 1725.629103849498}, {197., 1740.3730211376717`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{198., 1713.1970117841688`}, {198., 1728.3507390993375`}}], 
        LineBox[{{198., 1728.3507390993375`}, {198., 1743.5044664145062`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{199., 1702.0154238021}, {199., 1717.0067980258393`}}], 
        LineBox[{{199., 1717.0067980258393`}, {199., 1731.9981722495786`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{200., 1712.7452989234043`}, {200., 1727.8602007855293`}}], 
        LineBox[{{200., 1727.8602007855293`}, {200., 1742.9751026476542`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{201., 1704.1619213287527`}, {201., 1719.4647924603414`}}], 
        LineBox[{{201., 1719.4647924603414`}, {201., 1734.7676635919302`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{202., 1712.2301124458704`}, {202., 1727.4937571483586`}}], 
        LineBox[{{202., 1727.4937571483586`}, {202., 1742.7574018508467`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{203., 1721.1729834298562`}, {203., 1737.3457323064422`}}], 
        LineBox[{{203., 1737.3457323064422`}, {203., 1753.5184811830281`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{204., 1708.7764637508408`}, {204., 1724.1550153737398`}}], 
        LineBox[{{204., 1724.1550153737398`}, {204., 1739.533566996639}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{205., 1725.1923145817123`}, {205., 1741.276719406745}}], 
        LineBox[{{205., 1741.276719406745}, {205., 1757.361124231778}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{206., 1702.5975008840367`}, {206., 1717.899063261726}}], 
        LineBox[{{206., 1717.899063261726}, {206., 1733.2006256394154`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{207., 1722.9585550404804`}, {207., 1739.441442434898}}], 
        LineBox[{{207., 1739.441442434898}, {207., 1755.9243298293154`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{208., 1713.3113823936812`}, {208., 1729.8608389009244`}}], 
        LineBox[{{208., 1729.8608389009244`}, {208., 1746.4102954081675`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{209., 1715.6492865874773`}, {209., 1731.7331425037437`}}], 
        LineBox[{{209., 1731.7331425037437`}, {209., 1747.8169984200101`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{210., 1720.1771501748892`}, {210., 1736.6926223193977`}}], 
        LineBox[{{210., 1736.6926223193977`}, {210., 1753.2080944639063`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{211., 1721.1122629919635`}, {211., 1738.7427184014425`}}], 
        LineBox[{{211., 1738.7427184014425`}, {211., 1756.3731738109216`}}]}},
      Antialiasing->False]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], 
     StyleBox[{{}, {
        LineBox[{{212., 1713.0062715871363`}, {212., 1730.1209238936613`}}], 
        LineBox[{{212., 1730.1209238936613`}, {212., 1747.2355762001862`}}]}},
      Antialiasing->False]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
CJ0cNg/aUT8JYVMzrq/6dN//BdQq02s=
      "]]}}, {{}, {}}},
  AspectRatio->0.6,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Relative Elo\"", TraditionalForm], None}, {
     FormBox["\"Epoch\"", TraditionalForm], None}},
  FrameStyle->Directive[14, 
    GrayLevel[0]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0., 20., 40., 60., 80., 100., 120., 140., 160., 180., 
    200.}, {-100., 0., 100., 200., 300., 400., 500., 600., 700., 800., 900., 
    1000., 1100., 1200., 1300., 1400., 1500., 1600., 1700., 1800.}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{Automatic, 10}, {Automatic, 10}},
  ImageSize->600,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 212.}, {-22.937659080821657`, 1765.9457442973564`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.799291479582856*^9, 3.799291495018508*^9}, 
   3.799338437193363*^9, 3.79933855537427*^9, 3.79934003299986*^9, {
   3.799342323785734*^9, 3.799342326250127*^9}, 3.799398523477084*^9, 
   3.799433280148981*^9, 3.799433742915462*^9, 3.79943388789494*^9, 
   3.799434166100457*^9, 3.799452182319565*^9, 3.799465590882105*^9, 
   3.799509327380734*^9, 3.799536628437585*^9, {3.799536713110365*^9, 
   3.799536733207885*^9}, 3.799545688298736*^9, 3.7995550817433662`*^9, {
   3.799555219906704*^9, 3.799555255715013*^9}, 3.799594526703459*^9, 
   3.799614750542238*^9, 3.799621603805296*^9, 3.799642312269185*^9, 
   3.799660069035101*^9, {3.799666706729138*^9, 3.7996667117868023`*^9}, 
   3.799696656912578*^9, 3.799716908957399*^9, {3.7997267010010233`*^9, 
   3.799726709185791*^9}, 3.799767784231927*^9, 3.799782574020254*^9, {
   3.799782926834352*^9, 3.799782938915615*^9}, 3.799789853160633*^9, 
   3.799811904123638*^9, 3.799851111259408*^9, 3.799863036995491*^9, 
   3.7998669064138308`*^9, 3.799870499674356*^9, 3.799872584844439*^9, 
   3.799872967363791*^9, 3.799873265353228*^9, 3.7998735577576437`*^9, 
   3.7998737022913218`*^9, 3.799873916733231*^9, 3.799901085487864*^9, 
   3.799941214676125*^9, {3.799956518962607*^9, 3.79995655880243*^9}, 
   3.7999603500396976`*^9, 3.799962414451405*^9, 3.79996399324513*^9, 
   3.799971315243782*^9, 3.799974050649642*^9, {3.799975249901535*^9, 
   3.7999752628328*^9}, 3.799979626223033*^9, 3.799983013925006*^9, 
   3.799990145861162*^9, 3.800022490582905*^9, 3.800023247181761*^9, 
   3.800027821037582*^9, 3.800034089223814*^9, 3.800037042908369*^9, 
   3.800037093238995*^9, 3.800039817468438*^9, 3.800045010567237*^9, 
   3.800045065708762*^9, 3.800046478547419*^9, 3.8000538392180243`*^9, 
   3.800060861180274*^9, 3.800066615983696*^9, 3.800069741899735*^9, 
   3.800077007238326*^9, 3.800112072739903*^9, 3.80012153489395*^9, 
   3.800122604499632*^9, 3.800133398269247*^9, 3.80015497865411*^9, 
   3.800155173968*^9, 3.800181252251556*^9, 3.8001962834641953`*^9, 
   3.800239360738614*^9, 3.800279474463731*^9, 3.8002838376133223`*^9, {
   3.800331435090013*^9, 3.800331438572999*^9}, 3.800369710332827*^9, 
   3.800369745939128*^9, 3.800379417560693*^9, 3.80039730786415*^9, 
   3.800398298934176*^9, 3.8004151915557547`*^9, 3.8004410166380177`*^9, 
   3.80045699822316*^9, {3.8004684400307302`*^9, 3.800468444995349*^9}, 
   3.8004995103169394`*^9, 3.800549123470825*^9, 3.8005734882447653`*^9, 
   3.800583309701374*^9, 3.800592634186907*^9, 3.8006318640395*^9, 
   3.8006585451984453`*^9, 3.800679685295676*^9, 3.800711435044039*^9, 
   3.800800222336029*^9, {3.8008005813020697`*^9, 3.800800585394245*^9}, 
   3.800836768495928*^9, 3.848511762857582*^9, {3.848511914758216*^9, 
   3.848511984645329*^9}, {3.848512018259059*^9, 3.8485120888451967`*^9}, {
   3.848512272063718*^9, 3.848512300641222*^9}, 3.8485142243132*^9, 
   3.848514424793869*^9, 3.84851485243402*^9, 3.8485150507200403`*^9, 
   3.848515237981102*^9, 3.848518572265053*^9, 3.848518702307572*^9, 
   3.848518755272735*^9, 3.8485204686033173`*^9},
 CellLabel->
  "Out[724]=",ExpressionUUID->"3103f697-0666-4f64-854e-7b87468eefbd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<./run5/elo-history.png\>\"", ",", "plot"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.848512101339517*^9, 3.848512113305299*^9}, 
   3.84851444517312*^9, {3.84851485678931*^9, 3.848514884795292*^9}, {
   3.848515235199019*^9, 3.848515243541634*^9}, 3.848518576344911*^9, 
   3.848518765959306*^9, {3.8485204748591146`*^9, 3.848520491793227*^9}},
 CellLabel->
  "In[726]:=",ExpressionUUID->"b3633104-1a77-4517-9d7f-390e6ff03ec0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"comparenets", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<run2\>\"", ",", "92"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<run3\>\"", ",", "123"}], "}"}], ",", "400", ",", "4"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.799941356862955*^9, 3.799941365462453*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"433c306a-3017-49fa-bfc5-77bf4468d55b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"185", ",", "15", ",", "200"}], "}"}]], "Output",
 CellChangeTimes->{3.799941453087903*^9, 3.799941852906803*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"d35d1d1d-7a9a-48f9-9495-9f802d65b608"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"comparenets", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<run3\>\"", ",", "107"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<run5\>\"", ",", "218"}], "}"}], ",", "800", ",", "4"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.799717147390643*^9, 3.799717240852833*^9}, {
   3.799717338771798*^9, 3.799717339375009*^9}, 3.799717440908175*^9, {
   3.799789879763648*^9, 3.7997898798369637`*^9}, {3.7997899267929907`*^9, 
   3.799789926867902*^9}, {3.7997899607993383`*^9, 3.799789961186488*^9}, {
   3.799790129882348*^9, 3.799790129946104*^9}, {3.7998726163351*^9, 
   3.799872640669289*^9}, 3.799873964663138*^9, {3.799874316193812*^9, 
   3.799874316306355*^9}, {3.799901132214259*^9, 3.799901132773353*^9}, 
   3.799941352227483*^9, {3.8000225074378633`*^9, 3.800022514906904*^9}, {
   3.8000226240682287`*^9, 3.8000226283566017`*^9}, {3.8000340997412653`*^9, 
   3.8000340998621407`*^9}, {3.8000343433397703`*^9, 3.80003434348538*^9}, {
   3.8000538555133457`*^9, 3.800053858098119*^9}, {3.800069762109868*^9, 
   3.80006976597313*^9}, {3.800112098517962*^9, 3.800112117221772*^9}, {
   3.800196357750512*^9, 3.800196357940523*^9}, {3.800239378056188*^9, 
   3.800239378545109*^9}, {3.8002838734340143`*^9, 3.8002838760731*^9}, {
   3.800379350612967*^9, 3.800379367842505*^9}, {3.800398307490081*^9, 
   3.8003983080645847`*^9}, {3.800416242257061*^9, 3.8004162423146753`*^9}, {
   3.8004570468311777`*^9, 3.800457049160891*^9}, {3.8004929921955643`*^9, 
   3.800492992282785*^9}, {3.800500914093841*^9, 3.800500914625704*^9}, {
   3.8005491403094673`*^9, 3.80054914093185*^9}, {3.8006318889629927`*^9, 
   3.800631889415475*^9}, {3.8006379778966303`*^9, 3.800637980652615*^9}, {
   3.800718412174775*^9, 3.800718412622066*^9}, {3.80080062751062*^9, 
   3.800800627883309*^9}, {3.800836918563684*^9, 3.800836919496314*^9}},
 CellLabel->
  "In[932]:=",ExpressionUUID->"0da2e345-6719-49e1-9ba6-38c84e1e72dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"410", ",", "31", ",", "359"}], "}"}]], "Output",
 CellChangeTimes->{{3.799717169323694*^9, 3.799717214580326*^9}, 
   3.799717253077739*^9, 3.799717369022503*^9, 3.799717470815611*^9, 
   3.799789909901608*^9, 3.7997899559208727`*^9, 3.799790009906708*^9, 
   3.7997901757443237`*^9, 3.799872686659656*^9, 3.7998740689879208`*^9, 
   3.7998744041145697`*^9, 3.799901221098765*^9, 3.799941939718158*^9, 
   3.800022607597144*^9, 3.800022720710907*^9, 3.800034432907239*^9, 
   3.8000539466041813`*^9, 3.800069854195813*^9, 3.800112210132*^9, 
   3.8001964469232187`*^9, 3.800239466875577*^9, 3.800283966752228*^9, 
   3.800379541789978*^9, 3.800398397159498*^9, 3.800416334933667*^9, 
   3.800457140739759*^9, 3.8004930818671637`*^9, 3.800501001877995*^9, 
   3.800501748419592*^9, 3.800549229147212*^9, 3.80063197736843*^9, 
   3.800638151955654*^9, 3.80071858449105*^9, 3.800800800140996*^9, 
   3.800837092313307*^9},
 CellLabel->
  "Out[932]=",ExpressionUUID->"75fd785f-692d-4567-98f1-4ece7c1c033d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eloestimate", "[", 
  RowBox[{"{", 
   RowBox[{"457", ",", "14", ",", "329"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.800398312593902*^9, 3.800398314021411*^9}, {
  3.8003983587169533`*^9, 3.800398362690185*^9}, {3.800398460500936*^9, 
  3.800398464754101*^9}, {3.800417289630928*^9, 3.800417295024555*^9}, {
  3.8004571538985977`*^9, 3.8004571687553663`*^9}, {3.8005016357273207`*^9, 
  3.800501639780758*^9}, {3.800549241906207*^9, 3.8005492485133553`*^9}, {
  3.800638399499342*^9, 3.800638404069434*^9}, {3.800718612992855*^9, 
  3.800718618334511*^9}, {3.800800814762599*^9, 3.80080082000321*^9}},
 CellLabel->
  "In[858]:=",ExpressionUUID->"98c72e00-cfa6-43ba-b262-ced67ecd22ec"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"56.", "12."},
   "Around"],
  Around[55.72301391048479, 11.851507901220579`]]], "Output",
 CellChangeTimes->{3.8003984660532207`*^9, 3.800417314768284*^9, 
  3.800457172922846*^9, 3.8005016431361628`*^9, 3.800549249856658*^9, 
  3.800638404842022*^9, 3.800718619041695*^9, 3.8008008205910892`*^9},
 CellLabel->
  "Out[858]=",ExpressionUUID->"ac32672e-ccc0-4a13-b237-644c9c426d3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eloestimate", "[", 
  RowBox[{"{", 
   RowBox[{"135", ",", "20", ",", "245"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8005021805838413`*^9, 3.8005021844921303`*^9}},
 CellLabel->
  "In[662]:=",ExpressionUUID->"74e975fa-598a-4df2-bb40-a65a29c9966a"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"-98.", "20."},
   "Around"],
  Around[-97.50829758615144, 20.04546327575862]]], "Output",
 CellChangeTimes->{3.800502185403556*^9},
 CellLabel->
  "Out[662]=",ExpressionUUID->"31b1c0ce-e1b0-49c8-9f1d-f06b47422cb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eloestimate", "@", 
  RowBox[{"{", 
   RowBox[{"18", ",", "3", ",", "19"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.800727035752727*^9, 3.800727045768311*^9}, {
  3.8007453055236187`*^9, 3.800745309188385*^9}, {3.8007460955046873`*^9, 
  3.800746099225089*^9}},
 CellLabel->
  "In[816]:=",ExpressionUUID->"13dec1bf-4c26-4c17-a0db-822da0336613"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"-5.", "56."},
   "Around"],
  Around[-5.347193314052836, 55.94582119885293]]], "Output",
 CellChangeTimes->{3.800727046237465*^9, 3.800745309907638*^9, 
  3.800746100582391*^9},
 CellLabel->
  "Out[816]=",ExpressionUUID->"bd7c097b-2841-441a-9917-664a72af20c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eloestimate", "@", 
  RowBox[{"{", 
   RowBox[{"9", ",", "1", ",", "22"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.800746905647811*^9, 3.8007469066795053`*^9}},
 CellLabel->
  "In[817]:=",ExpressionUUID->"ea1b3ab7-3a4d-41a2-9660-7fc437be31b4"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"-154.", "70."},
   "Around"],
  Around[-153.95328061924218`, 70.00533367884253]]], "Output",
 CellChangeTimes->{3.8007469072032423`*^9},
 CellLabel->
  "Out[817]=",ExpressionUUID->"34339dd6-ca06-4adf-a80b-d739c89c2315"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eloestimate", "@", 
  RowBox[{"{", 
   RowBox[{"14", ",", "1", ",", "25"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.800747772762354*^9, 3.8007477815455513`*^9}},
 CellLabel->
  "In[818]:=",ExpressionUUID->"a99ceb8b-5bcf-46ff-b5b3-beaddbee353a"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"-90.", "62."},
   "Around"],
  Around[-90.40497546378413, 61.97345160557465]]], "Output",
 CellChangeTimes->{3.800747781880385*^9},
 CellLabel->
  "Out[818]=",ExpressionUUID->"5ba21aa5-9222-46c9-8480-b323b74ee25f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["vs Edax", "Subsection",
 CellChangeTimes->{{3.7993566069902773`*^9, 
  3.799356610498356*^9}},ExpressionUUID->"d5950bfa-8cdd-4c8d-93a9-\
e475ff498ae2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"wait", "[", 
    RowBox[{"process_", ",", "prompt_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"str", "=", 
       RowBox[{"{", "\"\<\>\"", "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Pause", "[", "0.05", "]"}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"TrueQ", "[", 
             RowBox[{
              RowBox[{"ProcessStatus", "[", "process", "]"}], "\[Equal]", 
              "\"\<Running\>\""}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"str", "=", 
             RowBox[{"{", 
              RowBox[{"\"\<\>\"", ",", "EndOfFile", ",", "\"\<\>\""}], 
              "}"}]}], ";", 
            RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
         RowBox[{"str", "=", 
          RowBox[{"str", "~", "Join", "~", 
           RowBox[{"StringSplit", "[", 
            RowBox[{
             RowBox[{"ReadString", "[", 
              RowBox[{"process", ",", "EndOfBuffer"}], "]"}], ",", 
             "\"\<\\n\>\""}], "]"}]}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"StringMatchQ", "[", 
            RowBox[{
             RowBox[{"Last", "@", "str"}], ",", 
             RowBox[{"prompt", "~~", "___"}]}], "]"}], ",", 
           RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], ",", "\[Infinity]"}], 
       "]"}], ";", 
      RowBox[{"str", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", 
         RowBox[{"-", "2"}]}], "]"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sendandwait", "[", 
   RowBox[{"process_", ",", "command_", ",", "prompt_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"WriteLine", "[", 
     RowBox[{"process", ",", "command"}], "]"}], ";", 
    RowBox[{"wait", "[", 
     RowBox[{"process", ",", "prompt"}], "]"}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"boardempties", "[", "board_", "]"}], ":=", 
   RowBox[{"StringCount", "[", 
    RowBox[{"board", ",", "\"\<-\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edaxsearchboard", "[", "board_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"sendandwait", "[", 
     RowBox[{"edax", ",", 
      RowBox[{"\"\<setboard \>\"", "<>", "board"}], ",", "\"\<>\>\""}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"edaxstr", "=", 
     RowBox[{"sendandwait", "[", 
      RowBox[{"edax", ",", "\"\<go\>\"", ",", "\"\<>\>\""}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"StringJoin", "@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"StringCases", "[", 
       RowBox[{"edaxstr", ",", 
        RowBox[{
         RowBox[{
         "\"\<Edax plays \>\"", "~~", "square__", "~~", "EndOfString"}], 
         "\[RuleDelayed]", "square"}]}], "]"}]}]}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"neuralsearchboard", "[", "board_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"sendandwait", "[", 
     RowBox[{"neural", ",", 
      RowBox[{"\"\<setboard \>\"", "<>", "board"}], ",", "\"\<>\>\""}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"neuralstr", "=", 
      RowBox[{"sendandwait", "[", 
       RowBox[{"neural", ",", "\"\<go\>\"", ",", "\"\<>\>\""}], "]"}]}], 
     "]"}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"neuralupdateboard", "[", 
   RowBox[{"board_", ",", "move_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"sendandwait", "[", 
     RowBox[{"neural", ",", 
      RowBox[{"\"\<setboard \>\"", "<>", "board"}], ",", "\"\<>\>\""}], "]"}],
     ";", 
    RowBox[{"sendandwait", "[", 
     RowBox[{"neural", ",", 
      RowBox[{"\"\<move \>\"", "<>", "move"}], ",", "\"\<>\>\""}], "]"}], ";", 
    RowBox[{
     RowBox[{"sendandwait", "[", 
      RowBox[{"neural", ",", 
       RowBox[{"\"\<textform \>\"", "<>", "move"}], ",", "\"\<>\>\""}], "]"}],
      "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"neuralgeteval", "[", "board_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"sendandwait", "[", 
     RowBox[{"neural", ",", 
      RowBox[{"\"\<setboard \>\"", "<>", "board"}], ",", "\"\<>\>\""}], "]"}],
     ";", 
    RowBox[{"sendandwait", "[", 
     RowBox[{"neural", ",", "\"\<eval\>\"", ",", "\"\<>\>\""}], "]"}]}], 
   ")"}]}], "\n", 
 RowBox[{
  RowBox[{"neural", "=", 
   RowBox[{"StartProcess", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<./othello\>\"", ",", "\"\<--mode\>\"", ",", "\"\<interactive\>\"", 
      ",", "\"\<--net-path\>\"", ",", "\"\<run2/nets/net-0038\>\"", ",", 
      "\"\<--playouts\>\"", ",", "\"\<800\>\"", ",", "\"\<--midgame-temp\>\"",
       ",", "\"\<0.0\>\""}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edax", "=", 
   RowBox[{"StartProcess", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<./lEdax-x64\>\"", ",", "\"\<-vv\>\"", ",", "\"\<-cpu\>\"", ",", 
       "\"\<-book-usage\>\"", ",", "\"\<off\>\"", ",", "\"\<-level\>\"", ",", 
       "\"\<3\>\"", ",", "\"\<-n-tasks\>\"", ",", "\"\<1\>\""}], "}"}], ",", 
     RowBox[{
     "ProcessDirectory", "\[Rule]", 
      "\"\</home/tlu/Documents/git/edax-reversi/bin\>\""}]}], "]"}]}], ";", 
  RowBox[{"wait", "[", 
   RowBox[{"edax", ",", "\"\<>\>\""}], "]"}], ";", 
  RowBox[{"wait", "[", 
   RowBox[{"neural", ",", "\"\<>\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{"textboard0", "=", 
    RowBox[{"RandomChoice", "@", 
     RowBox[{"StringSplit", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{"\"\<openings.txt\>\"", ",", "\"\<Text\>\""}], "]"}], ",", 
       "\"\<\\n\>\""}], "]"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ismove", "[", "move_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "move", "]"}], "===", "String"}], "&&", 
    RowBox[{"StringMatchQ", "[", 
     RowBox[{"move", ",", 
      RowBox[{"RegularExpression", "[", "\"\<[A-Ha-h][1-8]\>\"", "]"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"textboard", "=", "textboard0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"movehistory", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", "Null"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"i", ">", "1"}], "||", "neuralmovesfirst"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"textmove", "=", 
            RowBox[{"neuralsearchboard", "[", "textboard", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"!", 
                RowBox[{"ismove", "[", "textmove", "]"}]}], ")"}], "&&", 
              RowBox[{"(", 
               RowBox[{"!", 
                RowBox[{"ismove", "[", 
                 RowBox[{"Last", "@", "movehistory"}], "]"}]}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"result", "=", "999"}], ";", 
              RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"movehistory", ",", "textmove"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"textboard", "=", 
            RowBox[{"neuralupdateboard", "[", 
             RowBox[{"textboard", ",", "textmove"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"boardempties", "[", "textboard", "]"}], "\[LessEqual]",
               "6"}], ",", 
             RowBox[{
              RowBox[{"result", "=", 
               RowBox[{"neuralgeteval", "[", "textboard", "]"}]}], ";", 
              RowBox[{"Break", "[", "]"}]}]}], "]"}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"textmove", "=", 
         RowBox[{"edaxsearchboard", "[", "textboard", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"!", 
             RowBox[{"ismove", "[", "textmove", "]"}]}], ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{"!", 
             RowBox[{"ismove", "[", 
              RowBox[{"Last", "@", "movehistory"}], "]"}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"result", "=", "999"}], ";", 
           RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"movehistory", ",", "textmove"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"textboard", "=", 
         RowBox[{"neuralupdateboard", "[", 
          RowBox[{"textboard", ",", "textmove"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"boardempties", "[", "textboard", "]"}], "\[LessEqual]", 
           "6"}], ",", 
          RowBox[{
           RowBox[{"result", "=", 
            RowBox[{"neuralgeteval", "[", "textboard", "]"}]}], ";", 
           RowBox[{"Break", "[", "]"}]}]}], "]"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "60"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"StringRiffle", "[", 
        RowBox[{"movehistory", ",", "\"\< \>\""}], "]"}], "<>", "\"\< \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OddQ", "@", 
            RowBox[{"Length", "@", "movehistory"}]}], ",", 
           RowBox[{"-", "1"}], ",", "1"}], "]"}], "*", 
         RowBox[{"If", "[", 
          RowBox[{"neuralmovesfirst", ",", "1", ",", 
           RowBox[{"-", "1"}]}], "]"}], "*", 
         RowBox[{"ToExpression", "@", 
          RowBox[{"result", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"neuralmovesfirst", ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sendandwait", "[", 
   RowBox[{"edax", ",", "\"\<quit\>\"", ",", "\"\<>\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sendandwait", "[", 
   RowBox[{"neural", ",", "\"\<quit\>\"", ",", "\"\<>\>\""}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.799621704676923*^9, 3.799621713299706*^9}, 
   3.799623073049288*^9, {3.799623509560276*^9, 
   3.799623693715486*^9}},ExpressionUUID->"70bd1815-ab6e-41c0-89f6-\
e8f396af10c3"]
}, Open  ]]
},
WindowSize->{960, 1016},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.2 for Linux x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"36ab7bd1-eeb3-416d-8352-cdf0a7359766"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 385, 9, 56, "Input",ExpressionUUID->"e877907b-3557-4f3c-b129-25316fc9c5e2",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[810, 26, 154, 3, 65, "Subsection",ExpressionUUID->"7b3d4484-cd48-45de-a2fe-64b335e724fe"],
Cell[967, 31, 2928, 76, 87, "Input",ExpressionUUID->"e1e27ecb-129b-47cf-a626-f5ff042a3143"],
Cell[CellGroupData[{
Cell[3920, 111, 1395, 37, 36, "Input",ExpressionUUID->"a3cb154d-15f8-4fd0-b2c5-3d6af3e4a162"],
Cell[5318, 150, 699, 13, 40, "Output",ExpressionUUID->"db2b48ad-e15a-4588-821c-f1d05c0b5d3c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[6066, 169, 155, 3, 45, "Subsection",ExpressionUUID->"011b83b6-bf88-4d2f-9f68-e5b4a7aa6631"],
Cell[6224, 174, 2491, 58, 87, "Input",ExpressionUUID->"d37ef131-c102-4d01-8525-47b75ffdbd87"],
Cell[8718, 234, 214, 3, 36, "Input",ExpressionUUID->"c9acbbe4-3043-4c50-b248-eab5d384e705"],
Cell[8935, 239, 445, 12, 36, "Input",ExpressionUUID->"f2c6f171-2e5f-4ca3-b8ef-8aa5bb61d020"],
Cell[9383, 253, 1129, 31, 62, "Input",ExpressionUUID->"33743898-06eb-48fd-a3fa-10523ad3a88c"],
Cell[CellGroupData[{
Cell[10537, 288, 399, 9, 36, "Input",ExpressionUUID->"85156148-153e-444f-8564-05b6b884b45d"],
Cell[10939, 299, 1417, 25, 66, "Output",ExpressionUUID->"f7f67dfa-9797-4e79-accf-600bd4f3b37c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[12405, 330, 159, 3, 45, "Subsection",ExpressionUUID->"c3c5b8f6-5f4f-459e-9236-fcdda89955c8"],
Cell[12567, 335, 3989, 90, 207, "Input",ExpressionUUID->"3f1dc2d9-b59c-4250-9d71-7ea00580adbd",
 InitializationCell->True],
Cell[16559, 427, 2023, 53, 132, "Input",ExpressionUUID->"3537c748-0d61-4c67-b6d6-3b9a63af9508",
 InitializationCell->True],
Cell[18585, 482, 2635, 65, 107, "Input",ExpressionUUID->"a9aaafcb-6f68-44b6-8051-a5e1581629cf",
 InitializationCell->True],
Cell[21223, 549, 2485, 64, 87, "Input",ExpressionUUID->"28cf18d6-9d29-46b8-931d-57e7031e7dbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23745, 618, 160, 3, 65, "Subsection",ExpressionUUID->"db608ddb-4d05-4c1c-83fd-634047e7e816"],
Cell[CellGroupData[{
Cell[23930, 625, 1560, 41, 87, "Input",ExpressionUUID->"ae06a72b-7d67-46fd-9318-041d82802db1"],
Cell[25493, 668, 249, 3, 40, "Output",ExpressionUUID->"fb978aba-86aa-43ef-bc2a-172987ddea69"]
}, Open  ]],
Cell[25757, 674, 4157, 111, 216, "Input",ExpressionUUID->"3b85a0f1-37cc-4e53-b523-b26e054381ca",
 InitializationCell->True],
Cell[29917, 787, 2908, 62, 132, "Input",ExpressionUUID->"084e2e42-b803-4b15-a8c7-91d82b417cbd",
 InitializationCell->True],
Cell[32828, 851, 2481, 54, 137, "Input",ExpressionUUID->"4689d247-1f95-4a82-a6cb-ce155309be1f"],
Cell[35312, 907, 941, 26, 36, "Input",ExpressionUUID->"05b525a6-f4e9-4f57-a196-30dfbc44ea1c"],
Cell[36256, 935, 1424, 39, 62, "Input",ExpressionUUID->"940c112d-f4d6-40fd-a822-42884de3e849"],
Cell[37683, 976, 431, 11, 36, "Input",ExpressionUUID->"81e7b855-7f27-4031-8873-301b12076511"],
Cell[38117, 989, 874, 26, 62, "Input",ExpressionUUID->"1240c5fb-e93f-41ce-a6f9-46425bd954ed"],
Cell[38994, 1017, 324, 6, 36, "Input",ExpressionUUID->"47628226-1bdd-4149-9411-a09555d33a77"],
Cell[39321, 1025, 1075, 30, 87, "Input",ExpressionUUID->"97b17020-542e-462c-b0b0-53b859c49ef9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40433, 1060, 200, 4, 65, "Subsection",ExpressionUUID->"f1164f91-0909-45fb-8073-0fd67b828d99"],
Cell[40636, 1066, 14571, 345, 1168, "Input",ExpressionUUID->"53c2ea74-9c00-4e71-8ce6-7964aa6e8f97",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[55232, 1415, 627, 14, 39, "Input",ExpressionUUID->"c692c3bd-8ae3-4a92-bce5-09732af5e862"],
Cell[55862, 1431, 507, 11, 66, "Output",ExpressionUUID->"64a0cc8b-66bd-480f-ba1c-0a4232ba7608"]
}, Open  ]],
Cell[56384, 1445, 1333, 31, 146, "Input",ExpressionUUID->"218daeec-f035-446e-bd13-9d60a125d2d6"],
Cell[CellGroupData[{
Cell[57742, 1480, 1165, 20, 36, "Input",ExpressionUUID->"4f611bed-6365-4f8e-81d0-855c4a66e28b"],
Cell[58910, 1502, 182, 4, 31, "Echo",ExpressionUUID->"8b2ad9dd-b90b-43d4-8f23-7912ad0a82dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59129, 1511, 2043, 54, 137, "Input",ExpressionUUID->"a13265b0-1ee0-48b3-b956-aa78a670e5fd"],
Cell[61175, 1567, 899, 13, 66, "Output",ExpressionUUID->"2439e9c7-8322-49e1-94e7-139aa5c31184"]
}, Open  ]],
Cell[62089, 1583, 1102, 30, 62, "Input",ExpressionUUID->"257f5957-a3eb-4989-9b59-531e1cbe1d12"],
Cell[63194, 1615, 769, 18, 87, "Input",ExpressionUUID->"ecc5ee25-7f6c-4845-b0d7-4a2de1de1d7c"],
Cell[63966, 1635, 2720, 67, 192, "Input",ExpressionUUID->"2bf49a3f-be0f-4e89-84eb-94b66ba9f517"],
Cell[66689, 1704, 1753, 38, 239, "Input",ExpressionUUID->"8ff0b926-e42d-4af8-bcaa-e01c04045a30"],
Cell[CellGroupData[{
Cell[68467, 1746, 1342, 31, 115, "Input",ExpressionUUID->"7d2cdfe5-5ef1-4d06-ac4a-36d8833c1bda"],
Cell[69812, 1779, 519, 12, 75, "Echo",ExpressionUUID->"2a11592c-779c-481d-a4c3-83ee9eaefd41"]
}, Open  ]],
Cell[70346, 1794, 565, 13, 36, "Input",ExpressionUUID->"c7b33194-c6eb-46af-9af1-eace92efa7a4"],
Cell[70914, 1809, 304, 8, 36, "Input",ExpressionUUID->"a9c7b112-a39c-4f24-a6a4-c07a6b994f94"],
Cell[71221, 1819, 2917, 75, 296, "Input",ExpressionUUID->"c777ce45-89b1-4bea-abd2-d719850c76ca"],
Cell[CellGroupData[{
Cell[74163, 1898, 2312, 58, 162, "Input",ExpressionUUID->"aadff5cd-c203-409f-8eff-ffaea3b29e82"],
Cell[76478, 1958, 118485, 1999, 658, "Output",ExpressionUUID->"9ef93d9b-19cb-4563-b784-9dde04cd591d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195000, 3962, 6528, 146, 639, "Input",ExpressionUUID->"fd56b94f-1099-4cfc-bc3d-abd907961de4"],
Cell[CellGroupData[{
Cell[201553, 4112, 187, 5, 31, "Echo",ExpressionUUID->"52705759-63d7-4e4a-97da-0df0775376b0"],
Cell[201743, 4119, 187, 5, 31, "Echo",ExpressionUUID->"060e3672-5d47-4407-a5f8-490b26a1e0ba"],
Cell[201933, 4126, 517, 12, 75, "Echo",ExpressionUUID->"39b98a41-6922-4365-92b3-13ec4934b655"],
Cell[202453, 4140, 187, 5, 31, "Echo",ExpressionUUID->"cf809f6c-6857-4b98-9465-ee61143c56ce"],
Cell[202643, 4147, 186, 5, 31, "Echo",ExpressionUUID->"0cf95906-5c06-43aa-91ac-566788a86055"],
Cell[202832, 4154, 517, 12, 75, "Echo",ExpressionUUID->"51e53854-58c9-4ece-909b-71dffec2ed5a"],
Cell[203352, 4168, 189, 5, 31, "Echo",ExpressionUUID->"0a9a3a99-7ff7-4c22-9d7a-f5041331d1f7"],
Cell[203544, 4175, 187, 5, 31, "Echo",ExpressionUUID->"ed9e6234-2e33-4f22-86b2-accea1524549"],
Cell[203734, 4182, 519, 12, 75, "Echo",ExpressionUUID->"dd8b5a5e-46ae-4753-9d95-7b14141368c2"],
Cell[204256, 4196, 187, 5, 31, "Echo",ExpressionUUID->"c95079e8-d816-4aa6-860c-d942d238fd2d"],
Cell[204446, 4203, 187, 5, 31, "Echo",ExpressionUUID->"d9b50a9e-21a8-4cf6-86cc-15dcc39353cf"],
Cell[204636, 4210, 517, 12, 75, "Echo",ExpressionUUID->"2d5f089f-771b-447a-bae2-583496287482"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[205214, 4229, 157, 3, 65, "Subsection",ExpressionUUID->"9d0c1bd5-8ae9-4711-a57e-021d74550e6b"],
Cell[205374, 4234, 4247, 107, 387, "Input",ExpressionUUID->"c2e39b94-51a2-4052-ad5c-9c645d46d098"],
Cell[209624, 4343, 1995, 42, 237, "Input",ExpressionUUID->"26321b8d-243a-4289-bd9e-aa5fd191d079"],
Cell[CellGroupData[{
Cell[211644, 4389, 381, 9, 39, "Input",ExpressionUUID->"48d22bf0-9408-4b74-b85b-bb3590f9d058"],
Cell[212028, 4400, 479, 11, 27, "Message",ExpressionUUID->"cd21ab22-e25d-48a7-9929-d4c2c7f012b8"]
}, Open  ]],
Cell[212522, 4414, 3359, 91, 357, "Input",ExpressionUUID->"20f58346-ff4c-44fe-a347-757d35888a21",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[215918, 4510, 163, 3, 65, "Subsection",ExpressionUUID->"d9887490-d07e-4d57-9710-41a4c45479a3"],
Cell[216084, 4515, 220, 5, 36, "Input",ExpressionUUID->"85a3fa9b-f087-4348-a6c3-bf520c71b0eb"],
Cell[216307, 4522, 234, 6, 36, "Input",ExpressionUUID->"233af1b6-cf23-4ced-82bc-943f27a9ea02"],
Cell[216544, 4530, 654, 15, 39, "Input",ExpressionUUID->"6d7cac00-8e15-4492-8993-78b4acae1611"],
Cell[217201, 4547, 1937, 42, 137, "Input",ExpressionUUID->"90a9111b-f328-427a-98ab-faf8c08b4af8"],
Cell[219141, 4591, 3291, 94, 353, "Input",ExpressionUUID->"bb069d13-e5f1-41b6-82d3-0b8d711f8093"],
Cell[CellGroupData[{
Cell[222457, 4689, 2314, 51, 137, "Input",ExpressionUUID->"e0714484-8636-40ca-897b-e9b66d04963b"],
Cell[224774, 4742, 60439, 1195, 470, "Output",ExpressionUUID->"3103f697-0666-4f64-854e-7b87468eefbd"]
}, Open  ]],
Cell[285228, 5940, 501, 10, 36, "Input",ExpressionUUID->"b3633104-1a77-4517-9d7f-390e6ff03ec0"],
Cell[CellGroupData[{
Cell[285754, 5954, 384, 10, 36, "Input",ExpressionUUID->"433c306a-3017-49fa-bfc5-77bf4468d55b"],
Cell[286141, 5966, 235, 5, 40, "Output",ExpressionUUID->"d35d1d1d-7a9a-48f9-9495-9f802d65b608"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286413, 5976, 1943, 31, 36, "Input",ExpressionUUID->"0da2e345-6719-49e1-9ba6-38c84e1e72dc"],
Cell[288359, 6009, 1042, 17, 40, "Output",ExpressionUUID->"75fd785f-692d-4567-98f1-4ece7c1c033d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289438, 6031, 716, 12, 36, "Input",ExpressionUUID->"98c72e00-cfa6-43ba-b262-ced67ecd22ec"],
Cell[290157, 6045, 430, 9, 40, "Output",ExpressionUUID->"ac32672e-ccc0-4a13-b237-644c9c426d3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290624, 6059, 279, 6, 36, "Input",ExpressionUUID->"74e975fa-598a-4df2-bb40-a65a29c9966a"],
Cell[290906, 6067, 264, 7, 40, "Output",ExpressionUUID->"31b1c0ce-e1b0-49c8-9f1d-f06b47422cb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291207, 6079, 369, 8, 36, "Input",ExpressionUUID->"13dec1bf-4c26-4c17-a0db-822da0336613"],
Cell[291579, 6089, 310, 8, 40, "Output",ExpressionUUID->"bd7c097b-2841-441a-9917-664a72af20c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291926, 6102, 268, 6, 36, "Input",ExpressionUUID->"ea1b3ab7-3a4d-41a2-9660-7fc437be31b4"],
Cell[292197, 6110, 269, 7, 40, "Output",ExpressionUUID->"34339dd6-ca06-4adf-a80b-d739c89c2315"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292503, 6122, 269, 6, 36, "Input",ExpressionUUID->"a99ceb8b-5bcf-46ff-b5b3-beaddbee353a"],
Cell[292775, 6130, 264, 7, 40, "Output",ExpressionUUID->"5ba21aa5-9222-46c9-8480-b323b74ee25f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293088, 6143, 157, 3, 65, "Subsection",ExpressionUUID->"d5950bfa-8cdd-4c8d-93a9-e475ff498ae2"],
Cell[293248, 6148, 10823, 287, 1287, "Input",ExpressionUUID->"70bd1815-ab6e-41c0-89f6-e8f396af10c3"]
}, Open  ]]
}
]
*)

